

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 25 14:12:55 2021

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	smallconst
    46  001000                     __psmallconst:
    47                           	opt stack 0
    48  001000  00                 	db	0
    49  001001                     _dpowers:
    50                           	opt stack 0
    51  001001  0001               	dw	1
    52  001003  0000               	dw	0
    53  001005  000A               	dw	10
    54  001007  0000               	dw	0
    55  001009  0064               	dw	100
    56  00100B  0000               	dw	0
    57  00100D  03E8               	dw	1000
    58  00100F  0000               	dw	0
    59  001011  2710               	dw	10000
    60  001013  0000               	dw	0
    61  001015  86A0               	dw	34464
    62  001017  0001               	dw	1
    63  001019  4240               	dw	16960
    64  00101B  000F               	dw	15
    65  00101D  9680               	dw	38528
    66  00101F  0098               	dw	152
    67  001021  E100               	dw	57600
    68  001023  05F5               	dw	1525
    69  001025  CA00               	dw	51712
    70  001027  3B9A               	dw	15258
    71  001029                     __end_of_dpowers:
    72                           	opt stack 0
    73  001029                     __npowers_:
    74                           	opt stack 0
    75  001029  00                 	db	0
    76  00102A  80                 	db	128
    77  00102B  3F                 	db	63
    78  00102C  CD                 	db	205
    79  00102D  CC                 	db	204
    80  00102E  3D                 	db	61
    81  00102F  D7                 	db	215
    82  001030  23                 	db	35
    83  001031  3C                 	db	60
    84  001032  12                 	db	18
    85  001033  83                 	db	131
    86  001034  3A                 	db	58
    87  001035  B7                 	db	183
    88  001036  D1                 	db	209
    89  001037  38                 	db	56
    90  001038  C6                 	db	198
    91  001039  27                 	db	39
    92  00103A  37                 	db	55
    93  00103B  38                 	db	56
    94  00103C  86                 	db	134
    95  00103D  35                 	db	53
    96  00103E  C0                 	db	192
    97  00103F  D6                 	db	214
    98  001040  33                 	db	51
    99  001041  CC                 	db	204
   100  001042  2B                 	db	43
   101  001043  32                 	db	50
   102  001044  70                 	db	112
   103  001045  89                 	db	137
   104  001046  30                 	db	48
   105  001047  E7                 	db	231
   106  001048  DB                 	db	219
   107  001049  2E                 	db	46
   108  00104A  E5                 	db	229
   109  00104B  3C                 	db	60
   110  00104C  1E                 	db	30
   111  00104D  42                 	db	66
   112  00104E  A2                 	db	162
   113  00104F  0D                 	db	13
   114  001050                     __end_of__npowers_:
   115                           	opt stack 0
   116  001050                     __powers_:
   117                           	opt stack 0
   118  001050  00                 	db	0
   119  001051  80                 	db	128
   120  001052  3F                 	db	63
   121  001053  00                 	db	0
   122  001054  20                 	db	32
   123  001055  41                 	db	65
   124  001056  00                 	db	0
   125  001057  C8                 	db	200
   126  001058  42                 	db	66
   127  001059  00                 	db	0
   128  00105A  7A                 	db	122
   129  00105B  44                 	db	68
   130  00105C  40                 	db	64
   131  00105D  1C                 	db	28
   132  00105E  46                 	db	70
   133  00105F  50                 	db	80
   134  001060  C3                 	db	195
   135  001061  47                 	db	71
   136  001062  24                 	db	36
   137  001063  74                 	db	116
   138  001064  49                 	db	73
   139  001065  97                 	db	151
   140  001066  18                 	db	24
   141  001067  4B                 	db	75
   142  001068  BC                 	db	188
   143  001069  BE                 	db	190
   144  00106A  4C                 	db	76
   145  00106B  6B                 	db	107
   146  00106C  6E                 	db	110
   147  00106D  4E                 	db	78
   148  00106E  03                 	db	3
   149  00106F  15                 	db	21
   150  001070  50                 	db	80
   151  001071  79                 	db	121
   152  001072  AD                 	db	173
   153  001073  60                 	db	96
   154  001074  F3                 	db	243
   155  001075  49                 	db	73
   156  001076  71                 	db	113
   157  001077                     __end_of__powers_:
   158                           	opt stack 0
   159  0000                     _ADCON0	set	4034
   160  0000                     _OSCCON	set	4051
   161  0000                     _PIE1bits	set	3997
   162  0000                     _PIR1bits	set	3998
   163  0000                     _PORTA	set	3968
   164  0000                     _PORTDbits	set	3971
   165  0000                     _RCSTA	set	4011
   166  0000                     _RCSTAbits	set	4011
   167  0000                     _SPBRG	set	4015
   168  0000                     _SPBRGH	set	4016
   169  0000                     _TRISA	set	3986
   170  0000                     _TRISCbits	set	3988
   171  0000                     _TRISD	set	3989
   172  0000                     _TRISDbits	set	3989
   173  0000                     _TXREG	set	4013
   174  0000                     _TXSTA	set	4012
   175  0000                     _TXSTAbits	set	4012
   176  001077                     STR_2:
   177  001077  45                 	db	69	;'E'
   178  001078  72                 	db	114	;'r'
   179  001079  72                 	db	114	;'r'
   180  00107A  6F                 	db	111	;'o'
   181  00107B  72                 	db	114	;'r'
   182  00107C  20                 	db	32
   183  00107D  72                 	db	114	;'r'
   184  00107E  65                 	db	101	;'e'
   185  00107F  61                 	db	97	;'a'
   186  001080  64                 	db	100	;'d'
   187  001081  69                 	db	105	;'i'
   188  001082  6E                 	db	110	;'n'
   189  001083  67                 	db	103	;'g'
   190  001084  20                 	db	32
   191  001085  74                 	db	116	;'t'
   192  001086  68                 	db	104	;'h'
   193  001087  65                 	db	101	;'e'
   194  001088  20                 	db	32
   195  001089  73                 	db	115	;'s'
   196  00108A  65                 	db	101	;'e'
   197  00108B  6E                 	db	110	;'n'
   198  00108C  73                 	db	115	;'s'
   199  00108D  6F                 	db	111	;'o'
   200  00108E  72                 	db	114	;'r'
   201  00108F  20                 	db	32
   202  001090  0D                 	db	13
   203  001091  0A                 	db	10
   204  001092  00                 	db	0
   205  001093                     STR_1:
   206  001093  68                 	db	104	;'h'
   207  001094  75                 	db	117	;'u'
   208  001095  6D                 	db	109	;'m'
   209  001096  69                 	db	105	;'i'
   210  001097  3A                 	db	58	;':'
   211  001098  25                 	db	37
   212  001099  2E                 	db	46
   213  00109A  32                 	db	50	;'2'
   214  00109B  66                 	db	102	;'f'
   215  00109C  20                 	db	32
   216  00109D  74                 	db	116	;'t'
   217  00109E  65                 	db	101	;'e'
   218  00109F  6D                 	db	109	;'m'
   219  0010A0  70                 	db	112	;'p'
   220  0010A1  3A                 	db	58	;':'
   221  0010A2  25                 	db	37
   222  0010A3  2E                 	db	46
   223  0010A4  32                 	db	50	;'2'
   224  0010A5  66                 	db	102	;'f'
   225  0010A6  20                 	db	32
   226  0010A7  0D                 	db	13
   227  0010A8  0A                 	db	10
   228  0010A9  00                 	db	0
   229                           
   230                           ; #config settings
   231  0010AA  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           	psect	cinit
   234  002C4A                     __pcinit:
   235                           	opt stack 0
   236  002C4A                     start_initialization:
   237                           	opt stack 0
   238  002C4A                     __initialization:
   239                           	opt stack 0
   240                           
   241                           ; Clear objects allocated to COMRAM (1 bytes)
   242  002C4A  6A68               	clrf	__pbssCOMRAM& (0+255),c
   243  002C4C                     end_of_initialization:
   244                           	opt stack 0
   245  002C4C                     __end_of__initialization:
   246                           	opt stack 0
   247  002C4C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248  002C4E  6EF8               	movwf	tblptru,c
   249  002C50  0100               	movlb	0
   250  002C52  EF17  F013         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           
   253                           	psect	bssCOMRAM
   254  000068                     __pbssCOMRAM:
   255                           	opt stack 0
   256  000068                     _USART_Status:
   257                           	opt stack 0
   258  000068                     	ds	1
   259                           tblptru	equ	0xFF8
   260                           
   261                           	psect	cstackBANK1
   262  000100                     __pcstackBANK1:
   263                           	opt stack 0
   264  000100                     main@Text:
   265                           	opt stack 0
   266                           
   267                           ; 128 bytes @ 0x0
   268  000100                     	ds	128
   269  000180                     main@sensor_values:
   270                           	opt stack 0
   271                           
   272                           ; 8 bytes @ 0x80
   273  000180                     	ds	8
   274                           tblptru	equ	0xFF8
   275                           
   276                           	psect	cstackCOMRAM
   277  000001                     __pcstackCOMRAM:
   278                           	opt stack 0
   279  000001                     ??_Delay10KTCYx:
   280  000001                     ??_isdigit:
   281  000001                     ??_dht22_inizialize:
   282  000001                     ??_read_data:
   283  000001                     ?_strlen:
   284                           	opt stack 0
   285  000001                     ?___awmod:
   286                           	opt stack 0
   287  000001                     ?___ftpack:
   288                           	opt stack 0
   289  000001                     ?___ftneg:
   290                           	opt stack 0
   291  000001                     ?__tdiv_to_l_:
   292                           	opt stack 0
   293  000001                     ?__div_to_l_:
   294                           	opt stack 0
   295  000001                     ?___lldiv:
   296                           	opt stack 0
   297  000001                     ?___llmod:
   298                           	opt stack 0
   299  000001                     dht22_response@res:
   300                           	opt stack 0
   301  000001                     WriteUSART@data:
   302                           	opt stack 0
   303  000001                     OpenUSART@spbrg:
   304                           	opt stack 0
   305  000001                     ___awmod@dividend:
   306                           	opt stack 0
   307  000001                     strlen@s:
   308                           	opt stack 0
   309  000001                     __div_to_l_@f1:
   310                           	opt stack 0
   311  000001                     ___ftpack@arg:
   312                           	opt stack 0
   313  000001                     __tdiv_to_l_@f1:
   314                           	opt stack 0
   315  000001                     ___ftge@ff1:
   316                           	opt stack 0
   317  000001                     ___ftneg@f1:
   318                           	opt stack 0
   319  000001                     ___lldiv@dividend:
   320                           	opt stack 0
   321  000001                     ___llmod@dividend:
   322                           	opt stack 0
   323                           
   324                           ; 4 bytes @ 0x0
   325  000001                     	ds	1
   326  000002                     Delay10KTCYx@unit:
   327                           	opt stack 0
   328  000002                     _isdigit$959:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x1
   332  000002                     	ds	1
   333  000003                     ??_strlen:
   334  000003                     read_data@i:
   335                           	opt stack 0
   336  000003                     OpenUSART@config:
   337                           	opt stack 0
   338  000003                     isdigit@c:
   339                           	opt stack 0
   340  000003                     ___awmod@divisor:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344  000003                     	ds	1
   345  000004                     read_data@j:
   346                           	opt stack 0
   347  000004                     ___ftpack@exp:
   348                           	opt stack 0
   349  000004                     __div_to_l_@f2:
   350                           	opt stack 0
   351  000004                     __tdiv_to_l_@f2:
   352                           	opt stack 0
   353  000004                     ___ftge@ff2:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x3
   357  000004                     	ds	1
   358  000005                     ___awmod@counter:
   359                           	opt stack 0
   360  000005                     ___ftpack@sign:
   361                           	opt stack 0
   362  000005                     strlen@cp:
   363                           	opt stack 0
   364  000005                     ___lldiv@divisor:
   365                           	opt stack 0
   366  000005                     ___llmod@divisor:
   367                           	opt stack 0
   368                           
   369                           ; 4 bytes @ 0x4
   370  000005                     	ds	1
   371  000006                     ??___ftpack:
   372  000006                     ___awmod@sign:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x5
   376  000006                     	ds	1
   377  000007                     ??__tdiv_to_l_:
   378  000007                     ??___ftge:
   379  000007                     ?___awdiv:
   380                           	opt stack 0
   381  000007                     USARTOut@data:
   382                           	opt stack 0
   383  000007                     ___awdiv@dividend:
   384                           	opt stack 0
   385  000007                     __div_to_l_@quot:
   386                           	opt stack 0
   387                           
   388                           ; 4 bytes @ 0x6
   389  000007                     	ds	2
   390  000009                     ?___awtoft:
   391                           	opt stack 0
   392  000009                     ?___lltoft:
   393                           	opt stack 0
   394  000009                     USARTOut@bytes:
   395                           	opt stack 0
   396  000009                     ___llmod@counter:
   397                           	opt stack 0
   398  000009                     ___awdiv@divisor:
   399                           	opt stack 0
   400  000009                     ___awtoft@c:
   401                           	opt stack 0
   402  000009                     ___lldiv@quotient:
   403                           	opt stack 0
   404  000009                     ___lltoft@c:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x8
   408  000009                     	ds	1
   409  00000A                     ??_USARTOut:
   410  00000A                     __tdiv_to_l_@quot:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x9
   414  00000A                     	ds	1
   415  00000B                     ___awdiv@counter:
   416                           	opt stack 0
   417  00000B                     __div_to_l_@cntr:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0xA
   421  00000B                     	ds	1
   422  00000C                     ___awdiv@sign:
   423                           	opt stack 0
   424  00000C                     ___awtoft@sign:
   425                           	opt stack 0
   426  00000C                     __div_to_l_@exp1:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0xB
   430  00000C                     	ds	1
   431  00000D                     ??___lltoft:
   432  00000D                     ?___ftdiv:
   433                           	opt stack 0
   434  00000D                     ___lldiv@counter:
   435                           	opt stack 0
   436  00000D                     USARTOut@i:
   437                           	opt stack 0
   438  00000D                     ___awdiv@quotient:
   439                           	opt stack 0
   440  00000D                     ___ftdiv@f1:
   441                           	opt stack 0
   442                           
   443                           ; 3 bytes @ 0xC
   444  00000D                     	ds	1
   445  00000E                     __tdiv_to_l_@cntr:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0xD
   449  00000E                     	ds	1
   450  00000F                     ?___wmul:
   451                           	opt stack 0
   452  00000F                     __tdiv_to_l_@exp1:
   453                           	opt stack 0
   454  00000F                     ___wmul@multiplier:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0xE
   458  00000F                     	ds	1
   459  000010                     ___ftdiv@f2:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0xF
   463  000010                     	ds	1
   464  000011                     ___lltoft@exp:
   465                           	opt stack 0
   466  000011                     ___wmul@multiplicand:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x10
   470  000011                     	ds	2
   471  000013                     ??___ftdiv:
   472  000013                     ___wmul@product:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x12
   476  000013                     	ds	2
   477  000015                     ?___ftmul:
   478                           	opt stack 0
   479  000015                     ___ftmul@f1:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x14
   483  000015                     	ds	1
   484  000016                     ___ftdiv@cntr:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x15
   488  000016                     	ds	1
   489  000017                     ___ftdiv@f3:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x16
   493  000017                     	ds	1
   494  000018                     ___ftmul@f2:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x17
   498  000018                     	ds	2
   499  00001A                     ___ftdiv@exp:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x19
   503  00001A                     	ds	1
   504  00001B                     ??___ftmul:
   505  00001B                     ___ftdiv@sign:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x1A
   509  00001B                     	ds	1
   510  00001C                     readValues@sensor_data:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x1B
   514  00001C                     	ds	2
   515  00001E                     ??_readValues:
   516  00001E                     ___ftmul@exp:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x1D
   520  00001E                     	ds	1
   521  00001F                     ___ftmul@f3_as_product:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x1E
   525  00001F                     	ds	1
   526  000020                     readValues@status:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x1F
   530  000020                     	ds	1
   531  000021                     readValues@reading:
   532                           	opt stack 0
   533                           
   534                           ; 5 bytes @ 0x20
   535  000021                     	ds	1
   536  000022                     ___ftmul@cntr:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x21
   540  000022                     	ds	1
   541  000023                     ___ftmul@sign:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x22
   545  000023                     	ds	1
   546  000024                     ?_fround:
   547                           	opt stack 0
   548  000024                     ?_scale:
   549                           	opt stack 0
   550                           
   551                           ; 3 bytes @ 0x23
   552  000024                     	ds	2
   553  000026                     readValues@i:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x25
   557  000026                     	ds	1
   558  000027                     _fround$1300:
   559                           	opt stack 0
   560  000027                     _scale$1301:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0x26
   564  000027                     	ds	3
   565  00002A                     scale@scl:
   566                           	opt stack 0
   567  00002A                     _fround$1299:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x29
   571  00002A                     	ds	1
   572  00002B                     ?___fttol:
   573                           	opt stack 0
   574  00002B                     ___fttol@f1:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x2A
   578  00002B                     	ds	2
   579  00002D                     fround@prec:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x2C
   583  00002D                     	ds	1
   584  00002E                     ?___ftadd:
   585                           	opt stack 0
   586  00002E                     ___ftadd@f1:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x2D
   590  00002E                     	ds	1
   591  00002F                     ??___fttol:
   592                           
   593                           ; 0 bytes @ 0x2E
   594  00002F                     	ds	2
   595  000031                     ___ftadd@f2:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0x30
   599  000031                     	ds	3
   600  000034                     ??___ftadd:
   601  000034                     ___fttol@sign1:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x33
   605  000034                     	ds	1
   606  000035                     ___fttol@lval:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x34
   610  000035                     	ds	2
   611  000037                     ___ftadd@sign:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x36
   615  000037                     	ds	1
   616  000038                     ___ftadd@exp2:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x37
   620  000038                     	ds	1
   621  000039                     ___ftadd@exp1:
   622                           	opt stack 0
   623  000039                     ___fttol@exp1:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x38
   627  000039                     	ds	1
   628  00003A                     ?___ftsub:
   629                           	opt stack 0
   630  00003A                     ___ftsub@f1:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x39
   634  00003A                     	ds	3
   635  00003D                     ___ftsub@f2:
   636                           	opt stack 0
   637                           
   638                           ; 3 bytes @ 0x3C
   639  00003D                     	ds	3
   640  000040                     ?_sprintf:
   641                           	opt stack 0
   642  000040                     sprintf@sp:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x3F
   646  000040                     	ds	2
   647  000042                     sprintf@f:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x41
   651  000042                     	ds	8
   652  00004A                     ??_sprintf:
   653                           
   654                           ; 0 bytes @ 0x49
   655  00004A                     	ds	6
   656  000050                     _sprintf$1302:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x4F
   660  000050                     	ds	3
   661  000053                     sprintf@ap:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x52
   665  000053                     	ds	2
   666  000055                     sprintf@flag:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x54
   670  000055                     	ds	2
   671  000057                     sprintf@val:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x56
   675  000057                     	ds	4
   676  00005B                     sprintf@exp:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x5A
   680  00005B                     	ds	2
   681  00005D                     sprintf@tmpval:
   682                           	opt stack 0
   683                           
   684                           ; 4 bytes @ 0x5C
   685  00005D                     	ds	4
   686  000061                     sprintf@prec:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x60
   690  000061                     	ds	2
   691  000063                     sprintf@fval:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x62
   695  000063                     	ds	3
   696  000066                     sprintf@c:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x65
   700  000066                     	ds	1
   701  000067                     ??_main:
   702                           
   703                           ; 0 bytes @ 0x66
   704  000067                     	ds	1
   705                           tblptru	equ	0xFF8
   706                           
   707 ;;
   708 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   709 ;;
   710 ;; *************** function _main *****************
   711 ;; Defined at:
   712 ;;		line 95 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  Text          128    0[BANK1 ] unsigned char [128]
   717 ;;  sensor_value    8  128[BANK1 ] struct .
   718 ;; Return value:  Size  Location     Type
   719 ;;		None               void
   720 ;; Registers used:
   721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Locals:         0       0     136       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Totals:         1       0     136       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;Total ram usage:      137 bytes
   732 ;; Hardware stack levels required when called:    4
   733 ;; This function calls:
   734 ;;		_Delay10KTCYx
   735 ;;		_Init_IO
   736 ;;		_USARTOut
   737 ;;		_readValues
   738 ;;		_sprintf
   739 ;;		_strlen
   740 ;; This function is called by:
   741 ;;		Startup code after reset
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text0
   746  00262E                     __ptext0:
   747                           	opt stack 0
   748  00262E                     _main:
   749                           	opt stack 27
   750                           
   751                           ;main.c: 96: Init_IO();
   752                           
   753                           ;incstack = 0
   754  00262E  ECE0  F015         	call	_Init_IO	;wreg free
   755                           
   756                           ;main.c: 97: char Text[128];
   757                           ;main.c: 98: dhtvalues_t sensor_values;
   758                           ;main.c: 99: sensor_values.sensorPin=PORTDbits.RD0;
   759  002632  A083               	btfss	3971,0,c	;volatile
   760  002634  D003               	goto	u3210
   761  002636  6A67               	clrf	??_main& (0+255),c
   762  002638  2A67               	incf	??_main& (0+255),f,c
   763  00263A  D001               	goto	u3218
   764  00263C                     u3210:
   765  00263C  6A67               	clrf	??_main& (0+255),c
   766  00263E                     u3218:
   767  00263E  5067               	movf	??_main,w,c
   768  002640  0101               	movlb	1	; () banked
   769  002642  6F80               	movwf	main@sensor_values& (0+255),b
   770  002644  6B81               	clrf	(main@sensor_values+1)& (0+255),b
   771  002646                     l2875:
   772                           
   773                           ;main.c: 101: {
   774                           ;main.c: 102: PORTA = 0x04;
   775  002646  0E04               	movlw	4
   776  002648  6E80               	movwf	3968,c	;volatile
   777                           
   778                           ;main.c: 103: Delay10KTCYx(200);
   779  00264A  0EC8               	movlw	200
   780  00264C  EC11  F016         	call	_Delay10KTCYx
   781                           
   782                           ;main.c: 104: if(readValues(&sensor_values))
   783  002650  0E80               	movlw	low main@sensor_values
   784  002652  6E1C               	movwf	readValues@sensor_data,c
   785  002654  0E01               	movlw	high main@sensor_values
   786  002656  6E1D               	movwf	readValues@sensor_data+1,c
   787  002658  ECDA  F011         	call	_readValues	;wreg free
   788  00265C  0900               	iorlw	0
   789  00265E  B4D8               	btfsc	status,2,c
   790  002660  D017               	goto	l2883
   791                           
   792                           ;main.c: 105: sprintf(Text, "humi:%.2f temp:%.2f \r\n",sensor_values.humidity,sensor_val
      +                          ues.temperature);
   793  002662  0E00               	movlw	low main@Text
   794  002664  6E40               	movwf	sprintf@sp,c
   795  002666  0E01               	movlw	high main@Text
   796  002668  6E41               	movwf	sprintf@sp+1,c
   797  00266A  0E93               	movlw	low STR_1
   798  00266C  6E42               	movwf	sprintf@f,c
   799  00266E  0E10               	movlw	high STR_1
   800  002670  6E43               	movwf	sprintf@f+1,c
   801  002672  C185  F044         	movff	main@sensor_values+5,?_sprintf+4
   802  002676  C186  F045         	movff	main@sensor_values+6,?_sprintf+5
   803  00267A  C187  F046         	movff	main@sensor_values+7,?_sprintf+6
   804  00267E  C182  F047         	movff	main@sensor_values+2,?_sprintf+7
   805  002682  C183  F048         	movff	main@sensor_values+3,?_sprintf+8
   806  002686  C184  F049         	movff	main@sensor_values+4,?_sprintf+9
   807  00268A  EC56  F008         	call	_sprintf	;wreg free
   808  00268E  D00A               	goto	l2885
   809  002690                     l2883:
   810                           
   811                           ;main.c: 106: else
   812                           ;main.c: 107: sprintf(Text, "Error reading the sensor \r\n");
   813  002690  0E00               	movlw	low main@Text
   814  002692  6E40               	movwf	sprintf@sp,c
   815  002694  0E01               	movlw	high main@Text
   816  002696  6E41               	movwf	sprintf@sp+1,c
   817  002698  0E77               	movlw	low STR_2
   818  00269A  6E42               	movwf	sprintf@f,c
   819  00269C  0E10               	movlw	high STR_2
   820  00269E  6E43               	movwf	sprintf@f+1,c
   821  0026A0  EC56  F008         	call	_sprintf	;wreg free
   822  0026A4                     l2885:
   823                           
   824                           ;main.c: 108: USARTOut(Text, strlen(Text));
   825  0026A4  0E00               	movlw	low main@Text
   826  0026A6  6E07               	movwf	USARTOut@data,c
   827  0026A8  0E01               	movlw	high main@Text
   828  0026AA  6E08               	movwf	USARTOut@data+1,c
   829  0026AC  0E00               	movlw	low main@Text
   830  0026AE  6E01               	movwf	strlen@s,c
   831  0026B0  0E01               	movlw	high main@Text
   832  0026B2  6E02               	movwf	strlen@s+1,c
   833  0026B4  EC6B  F015         	call	_strlen	;wreg free
   834  0026B8  5001               	movf	?_strlen,w,c
   835  0026BA  6E09               	movwf	USARTOut@bytes,c
   836  0026BC  EC4B  F015         	call	_USARTOut	;wreg free
   837                           
   838                           ;main.c: 109: PORTA = 0x05;
   839  0026C0  0E05               	movlw	5
   840  0026C2  6E80               	movwf	3968,c	;volatile
   841  0026C4  D7C0               	goto	l2875
   842  0026C6                     __end_of_main:
   843                           	opt stack 0
   844                           tblptru	equ	0xFF8
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _strlen *****************
   848 ;; Defined at:
   849 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strlen.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  s               2    0[COMRAM] PTR const unsigned char 
   852 ;;		 -> main@Text(128), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  cp              2    4[COMRAM] PTR const unsigned char 
   855 ;;		 -> main@Text(128), 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2    0[COMRAM] unsigned int 
   858 ;; Registers used:
   859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        6 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text1
   879  002AD6                     __ptext1:
   880                           	opt stack 0
   881  002AD6                     _strlen:
   882                           	opt stack 30
   883                           
   884                           ;incstack = 0
   885  002AD6  C001  F005         	movff	strlen@s,strlen@cp
   886  002ADA  C002  F006         	movff	strlen@s+1,strlen@cp+1
   887  002ADE  D002               	goto	l2865
   888  002AE0                     l2863:
   889  002AE0  4A05               	infsnz	strlen@cp,f,c
   890  002AE2  2A06               	incf	strlen@cp+1,f,c
   891  002AE4                     l2865:
   892  002AE4  C005  FFD9         	movff	strlen@cp,fsr2l
   893  002AE8  C006  FFDA         	movff	strlen@cp+1,fsr2h
   894  002AEC  50DF               	movf	indf2,w,c
   895  002AEE  A4D8               	btfss	status,2,c
   896  002AF0  D7F7               	goto	l2863
   897  002AF2  C001  F003         	movff	strlen@s,??_strlen
   898  002AF6  C002  F004         	movff	strlen@s+1,??_strlen+1
   899  002AFA  1E03               	comf	??_strlen,f,c
   900  002AFC  1E04               	comf	??_strlen+1,f,c
   901  002AFE  4A03               	infsnz	??_strlen,f,c
   902  002B00  2A04               	incf	??_strlen+1,f,c
   903  002B02  5005               	movf	strlen@cp,w,c
   904  002B04  2403               	addwf	??_strlen,w,c
   905  002B06  6E01               	movwf	?_strlen,c
   906  002B08  5006               	movf	strlen@cp+1,w,c
   907  002B0A  2004               	addwfc	??_strlen+1,w,c
   908  002B0C  6E02               	movwf	?_strlen+1,c
   909  002B0E  0012               	return	
   910  002B10                     __end_of_strlen:
   911                           	opt stack 0
   912                           tblptru	equ	0xFF8
   913                           indf2	equ	0xFDF
   914                           fsr2h	equ	0xFDA
   915                           fsr2l	equ	0xFD9
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function _sprintf *****************
   919 ;; Defined at:
   920 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  sp              2   63[COMRAM] PTR unsigned char 
   923 ;;		 -> main@Text(128), 
   924 ;;  f               2   65[COMRAM] PTR const unsigned char 
   925 ;;		 -> STR_2(28), STR_1(23), 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  tmpval          4   92[COMRAM] struct .
   928 ;;  val             4   86[COMRAM] unsigned long 
   929 ;;  fval            3   98[COMRAM] unsigned long 
   930 ;;  cp              3    0        PTR const unsigned char 
   931 ;;  prec            2   96[COMRAM] int 
   932 ;;  exp             2   90[COMRAM] int 
   933 ;;  flag            2   84[COMRAM] unsigned short 
   934 ;;  ap              2   82[COMRAM] PTR void [1]
   935 ;;		 -> ?_sprintf(2), 
   936 ;;  len             2    0        unsigned int 
   937 ;;  width           2    0        int 
   938 ;;  c               1  101[COMRAM] char 
   939 ;;  d               1    0        unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  2   63[COMRAM] int 
   942 ;; Registers used:
   943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   949 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;Total ram usage:       39 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    3
   956 ;; This function calls:
   957 ;;		___awdiv
   958 ;;		___ftadd
   959 ;;		___ftge
   960 ;;		___ftmul
   961 ;;		___ftneg
   962 ;;		___ftsub
   963 ;;		___fttol
   964 ;;		___lldiv
   965 ;;		___llmod
   966 ;;		___lltoft
   967 ;;		___wmul
   968 ;;		__div_to_l_
   969 ;;		__tdiv_to_l_
   970 ;;		_fround
   971 ;;		_isdigit
   972 ;;		_scale
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text2
   979  0010AC                     __ptext2:
   980                           	opt stack 0
   981  0010AC                     _sprintf:
   982                           	opt stack 27
   983                           
   984                           ;doprnt.c: 494: va_list ap;
   985                           ;doprnt.c: 499: signed char c;
   986                           ;doprnt.c: 501: int width;
   987                           ;doprnt.c: 504: int prec;
   988                           ;doprnt.c: 508: unsigned short flag;
   989                           ;doprnt.c: 515: char d;
   990                           ;doprnt.c: 516: double fval;
   991                           ;doprnt.c: 517: int exp;
   992                           ;doprnt.c: 523: union {
   993                           ;doprnt.c: 524: unsigned long vd;
   994                           ;doprnt.c: 525: double integ;
   995                           ;doprnt.c: 526: } tmpval;
   996                           ;doprnt.c: 528: unsigned long val;
   997                           ;doprnt.c: 529: unsigned len;
   998                           ;doprnt.c: 530: const char * cp;
   999                           ;doprnt.c: 533: *ap = __va_start();
  1000                           
  1001                           ;incstack = 0
  1002  0010AC  0E44               	movlw	low (?_sprintf+4)
  1003  0010AE  6E53               	movwf	sprintf@ap,c
  1004  0010B0  0E00               	movlw	high (?_sprintf+4)
  1005  0010B2  6E54               	movwf	sprintf@ap+1,c
  1006                           
  1007                           ;doprnt.c: 536: while(c = *f++) {
  1008  0010B4  D35A               	goto	l2855
  1009  0010B6                     l2657:
  1010                           
  1011                           ;doprnt.c: 538: if(c != '%')
  1012  0010B6  0E25               	movlw	37
  1013  0010B8  1866               	xorwf	sprintf@c,w,c
  1014  0010BA  B4D8               	btfsc	status,2,c
  1015  0010BC  D007               	goto	l2663
  1016                           
  1017                           ;doprnt.c: 540: {
  1018                           ;doprnt.c: 541: ((*sp++ = (c)));
  1019  0010BE  C040  FFD9         	movff	sprintf@sp,fsr2l
  1020  0010C2  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1021  0010C6  C066  FFDF         	movff	sprintf@c,indf2
  1022  0010CA  D34D               	goto	l2853
  1023  0010CC                     l2663:
  1024                           
  1025                           ;doprnt.c: 543: }
  1026                           ;doprnt.c: 548: flag = 0;
  1027  0010CC  0E00               	movlw	0
  1028  0010CE  6E56               	movwf	sprintf@flag+1,c
  1029  0010D0  0E00               	movlw	0
  1030  0010D2  6E55               	movwf	sprintf@flag,c
  1031                           
  1032                           ;doprnt.c: 611: if(*f == '.') {
  1033  0010D4  C042  FFF6         	movff	sprintf@f,tblptrl
  1034  0010D8  C043  FFF7         	movff	sprintf@f+1,tblptrh
  1035  0010DC                     	if	0	;tblptru may be non-zero
  1036  0010DC                     	endif
  1037  0010DC                     	if	0	;tblptru may be non-zero
  1038  0010DC                     	endif
  1039  0010DC  0008               	tblrd		*
  1040  0010DE  50F5               	movf	tablat,w,c
  1041  0010E0  0A2E               	xorlw	46
  1042  0010E2  A4D8               	btfss	status,2,c
  1043  0010E4  D02E               	goto	l2677
  1044                           
  1045                           ;doprnt.c: 612: flag |= 0x4000;
  1046  0010E6  8C56               	bsf	sprintf@flag+1,6,c
  1047                           
  1048                           ;doprnt.c: 613: f++;
  1049  0010E8  4A42               	infsnz	sprintf@f,f,c
  1050  0010EA  2A43               	incf	sprintf@f+1,f,c
  1051                           
  1052                           ;doprnt.c: 620: {
  1053                           ;doprnt.c: 621: prec = 0;
  1054  0010EC  0E00               	movlw	0
  1055  0010EE  6E62               	movwf	sprintf@prec+1,c
  1056  0010F0  0E00               	movlw	0
  1057  0010F2  6E61               	movwf	sprintf@prec,c
  1058                           
  1059                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1060  0010F4  D01B               	goto	l2675
  1061  0010F6                     l2671:
  1062                           
  1063                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1064  0010F6  C061  F00F         	movff	sprintf@prec,___wmul@multiplier
  1065  0010FA  C062  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  1066  0010FE  0E00               	movlw	0
  1067  001100  6E12               	movwf	___wmul@multiplicand+1,c
  1068  001102  0E0A               	movlw	10
  1069  001104  6E11               	movwf	___wmul@multiplicand,c
  1070  001106  ECBB  F015         	call	___wmul	;wreg free
  1071  00110A  C042  FFF6         	movff	sprintf@f,tblptrl
  1072  00110E  C043  FFF7         	movff	sprintf@f+1,tblptrh
  1073  001112                     	if	0	;tblptru may be non-zero
  1074  001112                     	endif
  1075  001112                     	if	0	;tblptru may be non-zero
  1076  001112                     	endif
  1077  001112  0008               	tblrd		*
  1078  001114  50F5               	movf	tablat,w,c
  1079  001116  260F               	addwf	?___wmul,f,c
  1080  001118  0E00               	movlw	0
  1081  00111A  2210               	addwfc	?___wmul+1,f,c
  1082  00111C  0ED0               	movlw	208
  1083  00111E  240F               	addwf	?___wmul,w,c
  1084  001120  6E61               	movwf	sprintf@prec,c
  1085  001122  0EFF               	movlw	255
  1086  001124  2010               	addwfc	?___wmul+1,w,c
  1087  001126  6E62               	movwf	sprintf@prec+1,c
  1088  001128  4A42               	infsnz	sprintf@f,f,c
  1089  00112A  2A43               	incf	sprintf@f+1,f,c
  1090  00112C                     l2675:
  1091  00112C  C042  FFF6         	movff	sprintf@f,tblptrl
  1092  001130  C043  FFF7         	movff	sprintf@f+1,tblptrh
  1093  001134                     	if	0	;tblptru may be non-zero
  1094  001134                     	endif
  1095  001134                     	if	0	;tblptru may be non-zero
  1096  001134                     	endif
  1097  001134  0008               	tblrd		*
  1098  001136  50F5               	movf	tablat,w,c
  1099  001138  EC02  F016         	call	_isdigit
  1100  00113C  A0D8               	btfss	status,0,c
  1101  00113E  D009               	goto	l2685
  1102  001140  D7DA               	goto	l2671
  1103  001142                     l2677:
  1104                           
  1105                           ;doprnt.c: 626: prec = 0;
  1106  001142  0E00               	movlw	0
  1107  001144  6E62               	movwf	sprintf@prec+1,c
  1108  001146  0E00               	movlw	0
  1109  001148  6E61               	movwf	sprintf@prec,c
  1110                           
  1111                           ;doprnt.c: 628: flag |= 0x1000;
  1112  00114A  8856               	bsf	sprintf@flag+1,4,c
  1113                           
  1114                           ;doprnt.c: 630: }
  1115                           ;doprnt.c: 635: switch(c = *f++) {
  1116  00114C  D002               	goto	l2685
  1117  00114E                     l2681:
  1118                           
  1119                           ;doprnt.c: 663: flag |= 0x400;
  1120  00114E  8456               	bsf	sprintf@flag+1,2,c
  1121                           
  1122                           ;doprnt.c: 664: break;
  1123  001150  D011               	goto	l2687
  1124  001152                     l2685:
  1125  001152  C042  FFF6         	movff	sprintf@f,tblptrl
  1126  001156  C043  FFF7         	movff	sprintf@f+1,tblptrh
  1127  00115A  4A42               	infsnz	sprintf@f,f,c
  1128  00115C  2A43               	incf	sprintf@f+1,f,c
  1129  00115E                     	if	0	;tblptru may be non-zero
  1130  00115E                     	endif
  1131  00115E                     	if	0	;tblptru may be non-zero
  1132  00115E                     	endif
  1133  00115E  0008               	tblrd		*
  1134  001160  CFF5 F066          	movff	tablat,sprintf@c
  1135  001164  5066               	movf	sprintf@c,w,c
  1136                           
  1137                           ; Switch size 1, requested type "space"
  1138                           ; Number of cases is 2, Range of values is 0 to 102
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte            7     4 (average)
  1142                           ;	Chosen strategy is simple_byte
  1143  001166  0A00               	xorlw	0	; case 0
  1144  001168  B4D8               	btfsc	status,2,c
  1145  00116A  D30B               	goto	l2857
  1146  00116C  0A66               	xorlw	102	; case 102
  1147  00116E  B4D8               	btfsc	status,2,c
  1148  001170  D7EE               	goto	l2681
  1149  001172  D2FB               	goto	l2855
  1150  001174                     l2687:
  1151                           
  1152                           ;doprnt.c: 825: if(flag & (0x700)) {
  1153  001174  0E07               	movlw	7
  1154  001176  1456               	andwf	sprintf@flag+1,w,c
  1155  001178  B4D8               	btfsc	status,2,c
  1156  00117A  D2BB               	goto	l2835
  1157                           
  1158                           ;doprnt.c: 827: if(flag & 0x1000)
  1159  00117C  A856               	btfss	sprintf@flag+1,4,c
  1160  00117E  D004               	goto	l2693
  1161                           
  1162                           ;doprnt.c: 829: prec = 6;
  1163  001180  0E00               	movlw	0
  1164  001182  6E62               	movwf	sprintf@prec+1,c
  1165  001184  0E06               	movlw	6
  1166  001186  6E61               	movwf	sprintf@prec,c
  1167  001188                     l2693:
  1168                           
  1169                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1170  001188  C053  FFD9         	movff	sprintf@ap,fsr2l
  1171  00118C  C054  FFDA         	movff	sprintf@ap+1,fsr2h
  1172  001190  CFDE F063          	movff	postinc2,sprintf@fval
  1173  001194  CFDE F064          	movff	postinc2,sprintf@fval+1
  1174  001198  CFDD F065          	movff	postdec2,sprintf@fval+2
  1175  00119C  0E03               	movlw	3
  1176  00119E  2653               	addwf	sprintf@ap,f,c
  1177  0011A0  0E00               	movlw	0
  1178  0011A2  2254               	addwfc	sprintf@ap+1,f,c
  1179                           
  1180                           ;doprnt.c: 831: if(fval < 0.0) {
  1181  0011A4  AE65               	btfss	sprintf@fval+2,7,c
  1182  0011A6  D010               	goto	l2703
  1183                           
  1184                           ;doprnt.c: 832: fval = -fval;
  1185  0011A8  C063  F001         	movff	sprintf@fval,___ftneg@f1
  1186  0011AC  C064  F002         	movff	sprintf@fval+1,___ftneg@f1+1
  1187  0011B0  C065  F003         	movff	sprintf@fval+2,___ftneg@f1+2
  1188  0011B4  ECCE  F015         	call	___ftneg	;wreg free
  1189  0011B8  C001  F063         	movff	?___ftneg,sprintf@fval
  1190  0011BC  C002  F064         	movff	?___ftneg+1,sprintf@fval+1
  1191  0011C0  C003  F065         	movff	?___ftneg+2,sprintf@fval+2
  1192                           
  1193                           ;doprnt.c: 833: flag |= 0x03;
  1194  0011C4  0E03               	movlw	3
  1195  0011C6  1255               	iorwf	sprintf@flag,f,c
  1196  0011C8                     l2703:
  1197                           
  1198                           ;doprnt.c: 834: }
  1199                           ;doprnt.c: 835: exp = 0;
  1200  0011C8  0E00               	movlw	0
  1201  0011CA  6E5C               	movwf	sprintf@exp+1,c
  1202  0011CC  0E00               	movlw	0
  1203  0011CE  6E5B               	movwf	sprintf@exp,c
  1204                           
  1205                           ;doprnt.c: 836: if( fval!=0) {
  1206  0011D0  5063               	movf	sprintf@fval,w,c
  1207  0011D2  1064               	iorwf	sprintf@fval+1,w,c
  1208  0011D4  1065               	iorwf	sprintf@fval+2,w,c
  1209  0011D6  B4D8               	btfsc	status,2,c
  1210  0011D8  D083               	goto	l2731
  1211                           
  1212                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1213  0011DA  0E82               	movlw	130
  1214  0011DC  6E4A               	movwf	??_sprintf& (0+255),c
  1215  0011DE  0EFF               	movlw	255
  1216  0011E0  6E4B               	movwf	(??_sprintf+1)& (0+255),c
  1217  0011E2  C063  F04C         	movff	sprintf@fval,??_sprintf+2
  1218  0011E6  C064  F04D         	movff	sprintf@fval+1,??_sprintf+3
  1219  0011EA  C065  F04E         	movff	sprintf@fval+2,??_sprintf+4
  1220  0011EE  C066  F04F         	movff	sprintf@fval+3,??_sprintf+5
  1221  0011F2  0E10               	movlw	16
  1222  0011F4  D005               	goto	u2940
  1223  0011F6                     u2945:
  1224  0011F6  90D8               	bcf	status,0,c
  1225  0011F8  324F               	rrcf	??_sprintf+5,f,c
  1226  0011FA  324E               	rrcf	??_sprintf+4,f,c
  1227  0011FC  324D               	rrcf	??_sprintf+3,f,c
  1228  0011FE  324C               	rrcf	??_sprintf+2,f,c
  1229  001200                     u2940:
  1230  001200  2EE8               	decfsz	wreg,f,c
  1231  001202  D7F9               	goto	u2945
  1232  001204  504C               	movf	??_sprintf+2,w,c
  1233  001206  244A               	addwf	??_sprintf,w,c
  1234  001208  6E5B               	movwf	sprintf@exp,c
  1235  00120A  0E00               	movlw	0
  1236  00120C  204B               	addwfc	??_sprintf+1,w,c
  1237  00120E  6E5C               	movwf	sprintf@exp+1,c
  1238                           
  1239                           ;doprnt.c: 838: exp--;
  1240  001210  065B               	decf	sprintf@exp,f,c
  1241  001212  A0D8               	btfss	status,0,c
  1242  001214  065C               	decf	sprintf@exp+1,f,c
  1243                           
  1244                           ;doprnt.c: 839: exp *= 3;
  1245  001216  C05B  F00F         	movff	sprintf@exp,___wmul@multiplier
  1246  00121A  C05C  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  1247  00121E  0E00               	movlw	0
  1248  001220  6E12               	movwf	___wmul@multiplicand+1,c
  1249  001222  0E03               	movlw	3
  1250  001224  6E11               	movwf	___wmul@multiplicand,c
  1251  001226  ECBB  F015         	call	___wmul	;wreg free
  1252  00122A  C00F  F05B         	movff	?___wmul,sprintf@exp
  1253  00122E  C010  F05C         	movff	?___wmul+1,sprintf@exp+1
  1254                           
  1255                           ;doprnt.c: 840: exp /= 10;
  1256  001232  C05B  F007         	movff	sprintf@exp,___awdiv@dividend
  1257  001236  C05C  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  1258  00123A  0E00               	movlw	0
  1259  00123C  6E0A               	movwf	___awdiv@divisor+1,c
  1260  00123E  0E0A               	movlw	10
  1261  001240  6E09               	movwf	___awdiv@divisor,c
  1262  001242  ECAB  F013         	call	___awdiv	;wreg free
  1263  001246  C007  F05B         	movff	?___awdiv,sprintf@exp
  1264  00124A  C008  F05C         	movff	?___awdiv+1,sprintf@exp+1
  1265                           
  1266                           ;doprnt.c: 841: if(exp < 0)
  1267  00124E  AE5C               	btfss	sprintf@exp+1,7,c
  1268  001250  D003               	goto	l2719
  1269                           
  1270                           ;doprnt.c: 842: exp--;
  1271  001252  065B               	decf	sprintf@exp,f,c
  1272  001254  A0D8               	btfss	status,0,c
  1273  001256  065C               	decf	sprintf@exp+1,f,c
  1274  001258                     l2719:
  1275                           
  1276                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1277  001258  505B               	movf	sprintf@exp,w,c
  1278  00125A  0800               	sublw	0
  1279  00125C  ECC8  F00B         	call	_scale
  1280  001260  C024  F05D         	movff	?_scale,sprintf@tmpval
  1281  001264  C025  F05E         	movff	?_scale+1,sprintf@tmpval+1
  1282  001268  C026  F05F         	movff	?_scale+2,sprintf@tmpval+2
  1283                           
  1284                           ;doprnt.c: 847: tmpval.integ *= fval;
  1285  00126C  C05D  F015         	movff	sprintf@tmpval,___ftmul@f1
  1286  001270  C05E  F016         	movff	sprintf@tmpval+1,___ftmul@f1+1
  1287  001274  C05F  F017         	movff	sprintf@tmpval+2,___ftmul@f1+2
  1288  001278  C063  F018         	movff	sprintf@fval,___ftmul@f2
  1289  00127C  C064  F019         	movff	sprintf@fval+1,___ftmul@f2+1
  1290  001280  C065  F01A         	movff	sprintf@fval+2,___ftmul@f2+2
  1291  001284  ECE6  F010         	call	___ftmul	;wreg free
  1292  001288  C015  F05D         	movff	?___ftmul,sprintf@tmpval
  1293  00128C  C016  F05E         	movff	?___ftmul+1,sprintf@tmpval+1
  1294  001290  C017  F05F         	movff	?___ftmul+2,sprintf@tmpval+2
  1295                           
  1296                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1297  001294  C05D  F001         	movff	sprintf@tmpval,___ftge@ff1
  1298  001298  C05E  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1299  00129C  C05F  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1300  0012A0  0E00               	movlw	0
  1301  0012A2  6E04               	movwf	___ftge@ff2,c
  1302  0012A4  0E80               	movlw	128
  1303  0012A6  6E05               	movwf	___ftge@ff2+1,c
  1304  0012A8  0E3F               	movlw	63
  1305  0012AA  6E06               	movwf	___ftge@ff2+2,c
  1306  0012AC  EC63  F013         	call	___ftge	;wreg free
  1307  0012B0  B0D8               	btfsc	status,0,c
  1308  0012B2  D004               	goto	l2727
  1309                           
  1310                           ;doprnt.c: 849: exp--;
  1311  0012B4  065B               	decf	sprintf@exp,f,c
  1312  0012B6  A0D8               	btfss	status,0,c
  1313  0012B8  065C               	decf	sprintf@exp+1,f,c
  1314  0012BA  D012               	goto	l2731
  1315  0012BC                     l2727:
  1316                           
  1317                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1318  0012BC  C05D  F001         	movff	sprintf@tmpval,___ftge@ff1
  1319  0012C0  C05E  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1320  0012C4  C05F  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1321  0012C8  0E00               	movlw	0
  1322  0012CA  6E04               	movwf	___ftge@ff2,c
  1323  0012CC  0E20               	movlw	32
  1324  0012CE  6E05               	movwf	___ftge@ff2+1,c
  1325  0012D0  0E41               	movlw	65
  1326  0012D2  6E06               	movwf	___ftge@ff2+2,c
  1327  0012D4  EC63  F013         	call	___ftge	;wreg free
  1328  0012D8  A0D8               	btfss	status,0,c
  1329  0012DA  D002               	goto	l2731
  1330                           
  1331                           ;doprnt.c: 851: exp++;
  1332  0012DC  4A5B               	infsnz	sprintf@exp,f,c
  1333  0012DE  2A5C               	incf	sprintf@exp+1,f,c
  1334  0012E0                     l2731:
  1335                           
  1336                           ;doprnt.c: 852: }
  1337                           ;doprnt.c: 1112: if(prec <= 12)
  1338  0012E0  BE62               	btfsc	sprintf@prec+1,7,c
  1339  0012E2  D006               	goto	l2733
  1340  0012E4  5062               	movf	sprintf@prec+1,w,c
  1341  0012E6  E11B               	bnz	l2735
  1342  0012E8  0E0D               	movlw	13
  1343  0012EA  5C61               	subwf	sprintf@prec,w,c
  1344  0012EC  B0D8               	btfsc	status,0,c
  1345  0012EE  D017               	goto	l2735
  1346  0012F0                     l2733:
  1347                           
  1348                           ;doprnt.c: 1113: fval += fround(prec);
  1349  0012F0  C063  F02E         	movff	sprintf@fval,___ftadd@f1
  1350  0012F4  C064  F02F         	movff	sprintf@fval+1,___ftadd@f1+1
  1351  0012F8  C065  F030         	movff	sprintf@fval+2,___ftadd@f1+2
  1352  0012FC  5061               	movf	sprintf@prec,w,c
  1353  0012FE  ECC0  F00D         	call	_fround
  1354  001302  C024  F031         	movff	?_fround,___ftadd@f2
  1355  001306  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1356  00130A  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1357  00130E  ECE3  F00E         	call	___ftadd	;wreg free
  1358  001312  C02E  F063         	movff	?___ftadd,sprintf@fval
  1359  001316  C02F  F064         	movff	?___ftadd+1,sprintf@fval+1
  1360  00131A  C030  F065         	movff	?___ftadd+2,sprintf@fval+2
  1361  00131E                     l2735:
  1362                           
  1363                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1364  00131E  BE5C               	btfsc	sprintf@exp+1,7,c
  1365  001320  D006               	goto	l2737
  1366  001322  505C               	movf	sprintf@exp+1,w,c
  1367  001324  E11E               	bnz	l2743
  1368  001326  0E0A               	movlw	10
  1369  001328  5C5B               	subwf	sprintf@exp,w,c
  1370  00132A  B0D8               	btfsc	status,0,c
  1371  00132C  D01A               	goto	l2743
  1372  00132E                     l2737:
  1373  00132E  5063               	movf	sprintf@fval,w,c
  1374  001330  1064               	iorwf	sprintf@fval+1,w,c
  1375  001332  1065               	iorwf	sprintf@fval+2,w,c
  1376  001334  B4D8               	btfsc	status,2,c
  1377  001336  D051               	goto	l2757
  1378  001338  C063  F02B         	movff	sprintf@fval,___fttol@f1
  1379  00133C  C064  F02C         	movff	sprintf@fval+1,___fttol@f1+1
  1380  001340  C065  F02D         	movff	sprintf@fval+2,___fttol@f1+2
  1381  001344  EC60  F011         	call	___fttol	;wreg free
  1382  001348  502B               	movf	?___fttol,w,c
  1383  00134A  102C               	iorwf	?___fttol+1,w,c
  1384  00134C  102D               	iorwf	?___fttol+2,w,c
  1385  00134E  102E               	iorwf	?___fttol+3,w,c
  1386  001350  B4D8               	btfsc	status,2,c
  1387  001352  BE5C               	btfsc	sprintf@exp+1,7,c
  1388  001354  D042               	goto	l2757
  1389  001356  505C               	movf	sprintf@exp+1,w,c
  1390  001358  E104               	bnz	l2743
  1391  00135A  0E02               	movlw	2
  1392  00135C  5C5B               	subwf	sprintf@exp,w,c
  1393  00135E  A0D8               	btfss	status,0,c
  1394  001360  D03C               	goto	l2757
  1395  001362                     l2743:
  1396                           
  1397                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1398  001362  C05D  F001         	movff	sprintf@tmpval,___ftge@ff1
  1399  001366  C05E  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1400  00136A  C05F  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1401  00136E  0E70               	movlw	112
  1402  001370  6E04               	movwf	___ftge@ff2,c
  1403  001372  0E89               	movlw	137
  1404  001374  6E05               	movwf	___ftge@ff2+1,c
  1405  001376  0E40               	movlw	64
  1406  001378  6E06               	movwf	___ftge@ff2+2,c
  1407  00137A  EC63  F013         	call	___ftge	;wreg free
  1408  00137E  B0D8               	btfsc	status,0,c
  1409  001380  D002               	goto	l2747
  1410                           
  1411                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1412  001382  0EF7               	movlw	247
  1413  001384  D001               	goto	L1
  1414  001386                     l2747:
  1415                           
  1416                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1417  001386  0EF8               	movlw	248
  1418  001388                     L1:
  1419  001388  265B               	addwf	sprintf@exp,f,c
  1420  00138A  0EFF               	movlw	255
  1421  00138C  225C               	addwfc	sprintf@exp+1,f,c
  1422                           
  1423                           ;doprnt.c: 1124: }
  1424                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1425  00138E  505B               	movf	sprintf@exp,w,c
  1426  001390  ECC8  F00B         	call	_scale
  1427  001394  C024  F05D         	movff	?_scale,sprintf@tmpval
  1428  001398  C025  F05E         	movff	?_scale+1,sprintf@tmpval+1
  1429  00139C  C026  F05F         	movff	?_scale+2,sprintf@tmpval+2
  1430                           
  1431                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1432  0013A0  C063  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  1433  0013A4  C064  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  1434  0013A8  C065  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  1435  0013AC  C05D  F004         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  1436  0013B0  C05E  F005         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  1437  0013B4  C05F  F006         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  1438  0013B8  ECB9  F00F         	call	__tdiv_to_l_	;wreg free
  1439  0013BC  C001  F057         	movff	?__tdiv_to_l_,sprintf@val
  1440  0013C0  C002  F058         	movff	?__tdiv_to_l_+1,sprintf@val+1
  1441  0013C4  C003  F059         	movff	?__tdiv_to_l_+2,sprintf@val+2
  1442  0013C8  C004  F05A         	movff	?__tdiv_to_l_+3,sprintf@val+3
  1443                           
  1444                           ;doprnt.c: 1129: fval = 0.0;
  1445  0013CC  0E00               	movlw	0
  1446  0013CE  6E63               	movwf	sprintf@fval,c
  1447  0013D0  0E00               	movlw	0
  1448  0013D2  6E64               	movwf	sprintf@fval+1,c
  1449  0013D4  0E00               	movlw	0
  1450  0013D6  6E65               	movwf	sprintf@fval+2,c
  1451                           
  1452                           ;doprnt.c: 1130: } else {
  1453  0013D8  D032               	goto	l2761
  1454  0013DA                     l2757:
  1455                           
  1456                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1457  0013DA  C063  F02B         	movff	sprintf@fval,___fttol@f1
  1458  0013DE  C064  F02C         	movff	sprintf@fval+1,___fttol@f1+1
  1459  0013E2  C065  F02D         	movff	sprintf@fval+2,___fttol@f1+2
  1460  0013E6  EC60  F011         	call	___fttol	;wreg free
  1461  0013EA  C02B  F057         	movff	?___fttol,sprintf@val
  1462  0013EE  C02C  F058         	movff	?___fttol+1,sprintf@val+1
  1463  0013F2  C02D  F059         	movff	?___fttol+2,sprintf@val+2
  1464  0013F6  C02E  F05A         	movff	?___fttol+3,sprintf@val+3
  1465                           
  1466                           ;doprnt.c: 1132: fval -= (double)val;
  1467  0013FA  C063  F03A         	movff	sprintf@fval,___ftsub@f1
  1468  0013FE  C064  F03B         	movff	sprintf@fval+1,___ftsub@f1+1
  1469  001402  C065  F03C         	movff	sprintf@fval+2,___ftsub@f1+2
  1470  001406  C057  F009         	movff	sprintf@val,___lltoft@c
  1471  00140A  C058  F00A         	movff	sprintf@val+1,___lltoft@c+1
  1472  00140E  C059  F00B         	movff	sprintf@val+2,___lltoft@c+2
  1473  001412  C05A  F00C         	movff	sprintf@val+3,___lltoft@c+3
  1474  001416  ECFD  F014         	call	___lltoft	;wreg free
  1475  00141A  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1476  00141E  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1477  001422  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1478  001426  EC2B  F015         	call	___ftsub	;wreg free
  1479  00142A  C03A  F063         	movff	?___ftsub,sprintf@fval
  1480  00142E  C03B  F064         	movff	?___ftsub+1,sprintf@fval+1
  1481  001432  C03C  F065         	movff	?___ftsub+2,sprintf@fval+2
  1482                           
  1483                           ;doprnt.c: 1133: exp = 0;
  1484  001436  0E00               	movlw	0
  1485  001438  6E5C               	movwf	sprintf@exp+1,c
  1486  00143A  0E00               	movlw	0
  1487  00143C  6E5B               	movwf	sprintf@exp,c
  1488  00143E                     l2761:
  1489                           
  1490                           ;doprnt.c: 1134: }
  1491                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1492  00143E  0E01               	movlw	1
  1493  001440  6E66               	movwf	sprintf@c,c
  1494  001442                     l2763:
  1495  001442  0E0A               	movlw	10
  1496  001444  1866               	xorwf	sprintf@c,w,c
  1497  001446  B4D8               	btfsc	status,2,c
  1498  001448  D018               	goto	l2775
  1499                           
  1500                           ;doprnt.c: 1137: if(val < dpowers[c])
  1501  00144A  5066               	movf	sprintf@c,w,c
  1502  00144C  0D04               	mullw	4
  1503  00144E  0E01               	movlw	low _dpowers
  1504  001450  24F3               	addwf	prodl,w,c
  1505  001452  6EF6               	movwf	tblptrl,c
  1506  001454  0E10               	movlw	high _dpowers
  1507  001456  20F4               	addwfc	prodh,w,c
  1508  001458  6EF7               	movwf	tblptrh,c
  1509  00145A                     	if	0	;There are less than 3 active tblptr bytes
  1510  00145A                     	endif
  1511  00145A  0009               	tblrd		*+
  1512  00145C  50F5               	movf	tablat,w,c
  1513  00145E  5C57               	subwf	sprintf@val,w,c
  1514  001460  0009               	tblrd		*+
  1515  001462  50F5               	movf	tablat,w,c
  1516  001464  5858               	subwfb	sprintf@val+1,w,c
  1517  001466  0009               	tblrd		*+
  1518  001468  50F5               	movf	tablat,w,c
  1519  00146A  5859               	subwfb	sprintf@val+2,w,c
  1520  00146C  0009               	tblrd		*+
  1521  00146E  50F5               	movf	tablat,w,c
  1522  001470  585A               	subwfb	sprintf@val+3,w,c
  1523  001472  A0D8               	btfss	status,0,c
  1524  001474  D002               	goto	l2775
  1525                           
  1526                           ;doprnt.c: 1138: break;
  1527  001476  2A66               	incf	sprintf@c,f,c
  1528  001478  D7E4               	goto	l2763
  1529  00147A                     l2775:
  1530                           
  1531                           ;doprnt.c: 1175: {
  1532                           ;doprnt.c: 1188: if(flag & 0x03)
  1533  00147A  0E03               	movlw	3
  1534  00147C  1455               	andwf	sprintf@flag,w,c
  1535  00147E  6E4A               	movwf	??_sprintf& (0+255),c
  1536  001480  0E00               	movlw	0
  1537  001482  1456               	andwf	sprintf@flag+1,w,c
  1538  001484  6E4B               	movwf	(??_sprintf+1)& (0+255),c
  1539  001486  504A               	movf	??_sprintf,w,c
  1540  001488  104B               	iorwf	??_sprintf+1,w,c
  1541  00148A  B4D8               	btfsc	status,2,c
  1542  00148C  D051               	goto	l2789
  1543                           
  1544                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1545  00148E  C040  FFD9         	movff	sprintf@sp,fsr2l
  1546  001492  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1547  001496  0E2D               	movlw	45
  1548  001498  D049               	goto	L2
  1549  00149A                     l2779:
  1550  00149A  4A40               	infsnz	sprintf@sp,f,c
  1551  00149C  2A41               	incf	sprintf@sp+1,f,c
  1552                           
  1553                           ;doprnt.c: 1195: }
  1554                           ;doprnt.c: 1196: while(c--) {
  1555  00149E  D048               	goto	l2789
  1556  0014A0                     l2781:
  1557                           
  1558                           ;doprnt.c: 1200: {
  1559                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1560  0014A0  C057  F001         	movff	sprintf@val,___lldiv@dividend
  1561  0014A4  C058  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1562  0014A8  C059  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1563  0014AC  C05A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1564  0014B0  5066               	movf	sprintf@c,w,c
  1565  0014B2  0D04               	mullw	4
  1566  0014B4  0E01               	movlw	low _dpowers
  1567  0014B6  24F3               	addwf	prodl,w,c
  1568  0014B8  6EF6               	movwf	tblptrl,c
  1569  0014BA  0E10               	movlw	high _dpowers
  1570  0014BC  20F4               	addwfc	prodh,w,c
  1571  0014BE  6EF7               	movwf	tblptrh,c
  1572  0014C0                     	if	0	;There are less than 3 active tblptr bytes
  1573  0014C0                     	endif
  1574  0014C0  0009               	tblrd		*+
  1575  0014C2  CFF5 F005          	movff	tablat,___lldiv@divisor
  1576  0014C6  0009               	tblrd		*+
  1577  0014C8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1578  0014CC  0009               	tblrd		*+
  1579  0014CE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1580  0014D2  000A               	tblrd		*-
  1581  0014D4  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1582  0014D8  ECED  F013         	call	___lldiv	;wreg free
  1583  0014DC  C001  F05D         	movff	?___lldiv,sprintf@tmpval
  1584  0014E0  C002  F05E         	movff	?___lldiv+1,sprintf@tmpval+1
  1585  0014E4  C003  F05F         	movff	?___lldiv+2,sprintf@tmpval+2
  1586  0014E8  C004  F060         	movff	?___lldiv+3,sprintf@tmpval+3
  1587                           
  1588                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1589  0014EC  C05D  F001         	movff	sprintf@tmpval,___llmod@dividend
  1590  0014F0  C05E  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1591  0014F4  C05F  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1592  0014F8  C060  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1593  0014FC  0E0A               	movlw	10
  1594  0014FE  6E05               	movwf	___llmod@divisor,c
  1595  001500  0E00               	movlw	0
  1596  001502  6E06               	movwf	___llmod@divisor+1,c
  1597  001504  0E00               	movlw	0
  1598  001506  6E07               	movwf	___llmod@divisor+2,c
  1599  001508  0E00               	movlw	0
  1600  00150A  6E08               	movwf	___llmod@divisor+3,c
  1601  00150C  EC9A  F014         	call	___llmod	;wreg free
  1602  001510  C001  F05D         	movff	?___llmod,sprintf@tmpval
  1603  001514  C002  F05E         	movff	?___llmod+1,sprintf@tmpval+1
  1604  001518  C003  F05F         	movff	?___llmod+2,sprintf@tmpval+2
  1605  00151C  C004  F060         	movff	?___llmod+3,sprintf@tmpval+3
  1606                           
  1607                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1608  001520  505D               	movf	sprintf@tmpval,w,c
  1609  001522  0F30               	addlw	48
  1610  001524  C040  FFD9         	movff	sprintf@sp,fsr2l
  1611  001528  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1612  00152C                     L2:
  1613  00152C  6EDF               	movwf	indf2,c
  1614  00152E  D7B5               	goto	l2779
  1615  001530                     l2789:
  1616  001530  0666               	decf	sprintf@c,f,c
  1617  001532  2866               	incf	sprintf@c,w,c
  1618  001534  B4D8               	btfsc	status,2,c
  1619  001536  D00C               	goto	l2797
  1620  001538  D7B3               	goto	l2781
  1621  00153A                     l2791:
  1622                           
  1623                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1624  00153A  C040  FFD9         	movff	sprintf@sp,fsr2l
  1625  00153E  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1626  001542  0E30               	movlw	48
  1627  001544  6EDF               	movwf	indf2,c
  1628  001546  4A40               	infsnz	sprintf@sp,f,c
  1629  001548  2A41               	incf	sprintf@sp+1,f,c
  1630                           
  1631                           ;doprnt.c: 1209: exp--;
  1632  00154A  065B               	decf	sprintf@exp,f,c
  1633  00154C  A0D8               	btfss	status,0,c
  1634  00154E  065C               	decf	sprintf@exp+1,f,c
  1635  001550                     l2797:
  1636  001550  BE5C               	btfsc	sprintf@exp+1,7,c
  1637  001552  D005               	goto	l2799
  1638  001554  505C               	movf	sprintf@exp+1,w,c
  1639  001556  E1F1               	bnz	l2791
  1640  001558  045B               	decf	sprintf@exp,w,c
  1641  00155A  B0D8               	btfsc	status,0,c
  1642  00155C  D7EE               	goto	l2791
  1643  00155E                     l2799:
  1644                           
  1645                           ;doprnt.c: 1210: }
  1646                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1647  00155E  BE62               	btfsc	sprintf@prec+1,7,c
  1648  001560  D009               	goto	l162
  1649  001562  5062               	movf	sprintf@prec+1,w,c
  1650  001564  E104               	bnz	u3100
  1651  001566  0E09               	movlw	9
  1652  001568  5C61               	subwf	sprintf@prec,w,c
  1653  00156A  A0D8               	btfss	status,0,c
  1654  00156C  D003               	goto	l162
  1655  00156E                     u3100:
  1656                           
  1657                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1658  00156E  0E08               	movlw	8
  1659  001570  6E66               	movwf	sprintf@c,c
  1660  001572  D002               	goto	l2803
  1661  001574                     l162:
  1662                           
  1663                           ;doprnt.c: 1213: else
  1664                           ;doprnt.c: 1214: c = prec;
  1665  001574  C061  F066         	movff	sprintf@prec,sprintf@c
  1666  001578                     l2803:
  1667                           
  1668                           ;doprnt.c: 1215: prec -= c;
  1669  001578  5066               	movf	sprintf@c,w,c
  1670  00157A  5E61               	subwf	sprintf@prec,f,c
  1671  00157C  0E00               	movlw	0
  1672  00157E  BE66               	btfsc	sprintf@c,7,c
  1673  001580  0EFF               	movlw	255
  1674  001582  5A62               	subwfb	sprintf@prec+1,f,c
  1675                           
  1676                           ;doprnt.c: 1219: if(c)
  1677  001584  5066               	movf	sprintf@c,w,c
  1678  001586  B4D8               	btfsc	status,2,c
  1679  001588  D008               	goto	l2811
  1680                           
  1681                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  1682  00158A  C040  FFD9         	movff	sprintf@sp,fsr2l
  1683  00158E  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1684  001592  0E2E               	movlw	46
  1685  001594  6EDF               	movwf	indf2,c
  1686  001596  4A40               	infsnz	sprintf@sp,f,c
  1687  001598  2A41               	incf	sprintf@sp+1,f,c
  1688  00159A                     l2811:
  1689                           
  1690                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1691  00159A  5066               	movf	sprintf@c,w,c
  1692  00159C  ECC8  F00B         	call	_scale
  1693  0015A0  C024  F050         	movff	?_scale,_sprintf$1302
  1694  0015A4  C025  F051         	movff	?_scale+1,_sprintf$1302+1
  1695  0015A8  C026  F052         	movff	?_scale+2,_sprintf$1302+2
  1696                           
  1697                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1698  0015AC  C063  F018         	movff	sprintf@fval,___ftmul@f2
  1699  0015B0  C064  F019         	movff	sprintf@fval+1,___ftmul@f2+1
  1700  0015B4  C065  F01A         	movff	sprintf@fval+2,___ftmul@f2+2
  1701  0015B8  C050  F015         	movff	_sprintf$1302,___ftmul@f1
  1702  0015BC  C051  F016         	movff	_sprintf$1302+1,___ftmul@f1+1
  1703  0015C0  C052  F017         	movff	_sprintf$1302+2,___ftmul@f1+2
  1704  0015C4  ECE6  F010         	call	___ftmul	;wreg free
  1705  0015C8  C015  F02B         	movff	?___ftmul,___fttol@f1
  1706  0015CC  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1707  0015D0  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1708  0015D4  EC60  F011         	call	___fttol	;wreg free
  1709  0015D8  C02B  F057         	movff	?___fttol,sprintf@val
  1710  0015DC  C02C  F058         	movff	?___fttol+1,sprintf@val+1
  1711  0015E0  C02D  F059         	movff	?___fttol+2,sprintf@val+2
  1712  0015E4  C02E  F05A         	movff	?___fttol+3,sprintf@val+3
  1713                           
  1714                           ;doprnt.c: 1228: while(c--) {
  1715  0015E8  D06F               	goto	l2825
  1716  0015EA                     l2815:
  1717                           
  1718                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1719  0015EA  C057  F001         	movff	sprintf@val,___lldiv@dividend
  1720  0015EE  C058  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1721  0015F2  C059  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1722  0015F6  C05A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1723  0015FA  5066               	movf	sprintf@c,w,c
  1724  0015FC  0D04               	mullw	4
  1725  0015FE  0E01               	movlw	low _dpowers
  1726  001600  24F3               	addwf	prodl,w,c
  1727  001602  6EF6               	movwf	tblptrl,c
  1728  001604  0E10               	movlw	high _dpowers
  1729  001606  20F4               	addwfc	prodh,w,c
  1730  001608  6EF7               	movwf	tblptrh,c
  1731  00160A                     	if	0	;There are less than 3 active tblptr bytes
  1732  00160A                     	endif
  1733  00160A  0009               	tblrd		*+
  1734  00160C  CFF5 F005          	movff	tablat,___lldiv@divisor
  1735  001610  0009               	tblrd		*+
  1736  001612  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1737  001616  0009               	tblrd		*+
  1738  001618  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1739  00161C  000A               	tblrd		*-
  1740  00161E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1741  001622  ECED  F013         	call	___lldiv	;wreg free
  1742  001626  C001  F05D         	movff	?___lldiv,sprintf@tmpval
  1743  00162A  C002  F05E         	movff	?___lldiv+1,sprintf@tmpval+1
  1744  00162E  C003  F05F         	movff	?___lldiv+2,sprintf@tmpval+2
  1745  001632  C004  F060         	movff	?___lldiv+3,sprintf@tmpval+3
  1746                           
  1747                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1748  001636  C05D  F001         	movff	sprintf@tmpval,___llmod@dividend
  1749  00163A  C05E  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1750  00163E  C05F  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1751  001642  C060  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1752  001646  0E0A               	movlw	10
  1753  001648  6E05               	movwf	___llmod@divisor,c
  1754  00164A  0E00               	movlw	0
  1755  00164C  6E06               	movwf	___llmod@divisor+1,c
  1756  00164E  0E00               	movlw	0
  1757  001650  6E07               	movwf	___llmod@divisor+2,c
  1758  001652  0E00               	movlw	0
  1759  001654  6E08               	movwf	___llmod@divisor+3,c
  1760  001656  EC9A  F014         	call	___llmod	;wreg free
  1761  00165A  C001  F05D         	movff	?___llmod,sprintf@tmpval
  1762  00165E  C002  F05E         	movff	?___llmod+1,sprintf@tmpval+1
  1763  001662  C003  F05F         	movff	?___llmod+2,sprintf@tmpval+2
  1764  001666  C004  F060         	movff	?___llmod+3,sprintf@tmpval+3
  1765                           
  1766                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  1767  00166A  505D               	movf	sprintf@tmpval,w,c
  1768  00166C  0F30               	addlw	48
  1769  00166E  C040  FFD9         	movff	sprintf@sp,fsr2l
  1770  001672  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1771  001676  6EDF               	movwf	indf2,c
  1772  001678  4A40               	infsnz	sprintf@sp,f,c
  1773  00167A  2A41               	incf	sprintf@sp+1,f,c
  1774                           
  1775                           ;doprnt.c: 1232: val %= dpowers[c];
  1776  00167C  C057  F001         	movff	sprintf@val,___llmod@dividend
  1777  001680  C058  F002         	movff	sprintf@val+1,___llmod@dividend+1
  1778  001684  C059  F003         	movff	sprintf@val+2,___llmod@dividend+2
  1779  001688  C05A  F004         	movff	sprintf@val+3,___llmod@dividend+3
  1780  00168C  5066               	movf	sprintf@c,w,c
  1781  00168E  0D04               	mullw	4
  1782  001690  0E01               	movlw	low _dpowers
  1783  001692  24F3               	addwf	prodl,w,c
  1784  001694  6EF6               	movwf	tblptrl,c
  1785  001696  0E10               	movlw	high _dpowers
  1786  001698  20F4               	addwfc	prodh,w,c
  1787  00169A  6EF7               	movwf	tblptrh,c
  1788  00169C                     	if	0	;There are less than 3 active tblptr bytes
  1789  00169C                     	endif
  1790  00169C  0009               	tblrd		*+
  1791  00169E  CFF5 F005          	movff	tablat,___llmod@divisor
  1792  0016A2  0009               	tblrd		*+
  1793  0016A4  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1794  0016A8  0009               	tblrd		*+
  1795  0016AA  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1796  0016AE  000A               	tblrd		*-
  1797  0016B0  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1798  0016B4  EC9A  F014         	call	___llmod	;wreg free
  1799  0016B8  C001  F057         	movff	?___llmod,sprintf@val
  1800  0016BC  C002  F058         	movff	?___llmod+1,sprintf@val+1
  1801  0016C0  C003  F059         	movff	?___llmod+2,sprintf@val+2
  1802  0016C4  C004  F05A         	movff	?___llmod+3,sprintf@val+3
  1803  0016C8                     l2825:
  1804  0016C8  0666               	decf	sprintf@c,f,c
  1805  0016CA  2866               	incf	sprintf@c,w,c
  1806  0016CC  B4D8               	btfsc	status,2,c
  1807  0016CE  D00C               	goto	l2833
  1808  0016D0  D78C               	goto	l2815
  1809  0016D2                     l2827:
  1810                           
  1811                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  1812  0016D2  C040  FFD9         	movff	sprintf@sp,fsr2l
  1813  0016D6  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1814  0016DA  0E30               	movlw	48
  1815  0016DC  6EDF               	movwf	indf2,c
  1816  0016DE  4A40               	infsnz	sprintf@sp,f,c
  1817  0016E0  2A41               	incf	sprintf@sp+1,f,c
  1818                           
  1819                           ;doprnt.c: 1237: prec--;
  1820  0016E2  0661               	decf	sprintf@prec,f,c
  1821  0016E4  A0D8               	btfss	status,0,c
  1822  0016E6  0662               	decf	sprintf@prec+1,f,c
  1823  0016E8                     l2833:
  1824  0016E8  5061               	movf	sprintf@prec,w,c
  1825  0016EA  1062               	iorwf	sprintf@prec+1,w,c
  1826  0016EC  B4D8               	btfsc	status,2,c
  1827  0016EE  D03D               	goto	l2855
  1828  0016F0  D7F0               	goto	l2827
  1829  0016F2                     l2835:
  1830                           
  1831                           ;doprnt.c: 1246: }
  1832                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  1833  0016F2  5061               	movf	sprintf@prec,w,c
  1834  0016F4  1062               	iorwf	sprintf@prec+1,w,c
  1835  0016F6  A4D8               	btfss	status,2,c
  1836  0016F8  D008               	goto	l2841
  1837  0016FA  5057               	movf	sprintf@val,w,c
  1838  0016FC  1058               	iorwf	sprintf@val+1,w,c
  1839  0016FE  1059               	iorwf	sprintf@val+2,w,c
  1840  001700  105A               	iorwf	sprintf@val+3,w,c
  1841  001702  A4D8               	btfss	status,2,c
  1842  001704  D002               	goto	l2841
  1843                           
  1844                           ;doprnt.c: 1291: prec++;
  1845  001706  4A61               	infsnz	sprintf@prec,f,c
  1846  001708  2A62               	incf	sprintf@prec+1,f,c
  1847  00170A                     l2841:
  1848                           
  1849                           ;doprnt.c: 1339: if(c < prec)
  1850  00170A  0E80               	movlw	128
  1851  00170C  BE66               	btfsc	sprintf@c,7,c
  1852  00170E  0E7F               	movlw	127
  1853  001710  6E4A               	movwf	??_sprintf& (0+255),c
  1854  001712  5061               	movf	sprintf@prec,w,c
  1855  001714  5C66               	subwf	sprintf@c,w,c
  1856  001716  5062               	movf	sprintf@prec+1,w,c
  1857  001718  0A80               	xorlw	128
  1858  00171A  584A               	subwfb	??_sprintf& (0+255),w,c
  1859  00171C  B0D8               	btfsc	status,0,c
  1860  00171E  D003               	goto	l2845
  1861                           
  1862                           ;doprnt.c: 1340: c = prec;
  1863  001720  C061  F066         	movff	sprintf@prec,sprintf@c
  1864  001724  D010               	goto	l2849
  1865  001726                     l2845:
  1866                           
  1867                           ;doprnt.c: 1341: else if(prec < c)
  1868  001726  5062               	movf	sprintf@prec+1,w,c
  1869  001728  0A80               	xorlw	128
  1870  00172A  6E4A               	movwf	??_sprintf& (0+255),c
  1871  00172C  5066               	movf	sprintf@c,w,c
  1872  00172E  5C61               	subwf	sprintf@prec,w,c
  1873  001730  0E80               	movlw	128
  1874  001732  BE66               	btfsc	sprintf@c,7,c
  1875  001734  0E7F               	movlw	127
  1876  001736  584A               	subwfb	??_sprintf& (0+255),w,c
  1877  001738  B0D8               	btfsc	status,0,c
  1878  00173A  D005               	goto	l2849
  1879                           
  1880                           ;doprnt.c: 1342: prec = c;
  1881  00173C  5066               	movf	sprintf@c,w,c
  1882  00173E  6E61               	movwf	sprintf@prec,c
  1883  001740  6A62               	clrf	sprintf@prec+1,c
  1884  001742  BE61               	btfsc	sprintf@prec,7,c
  1885  001744  0662               	decf	sprintf@prec+1,f,c
  1886  001746                     l2849:
  1887                           
  1888                           ;doprnt.c: 1422: {
  1889                           ;doprnt.c: 1438: if(flag & 0x03)
  1890  001746  0E03               	movlw	3
  1891  001748  1455               	andwf	sprintf@flag,w,c
  1892  00174A  6E4A               	movwf	??_sprintf& (0+255),c
  1893  00174C  0E00               	movlw	0
  1894  00174E  1456               	andwf	sprintf@flag+1,w,c
  1895  001750  6E4B               	movwf	(??_sprintf+1)& (0+255),c
  1896  001752  504A               	movf	??_sprintf,w,c
  1897  001754  104B               	iorwf	??_sprintf+1,w,c
  1898  001756  B4D8               	btfsc	status,2,c
  1899  001758  D008               	goto	l2855
  1900                           
  1901                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1902  00175A  C040  FFD9         	movff	sprintf@sp,fsr2l
  1903  00175E  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1904  001762  0E2D               	movlw	45
  1905  001764  6EDF               	movwf	indf2,c
  1906  001766                     l2853:
  1907  001766  4A40               	infsnz	sprintf@sp,f,c
  1908  001768  2A41               	incf	sprintf@sp+1,f,c
  1909  00176A                     l2855:
  1910  00176A  C042  FFF6         	movff	sprintf@f,tblptrl
  1911  00176E  C043  FFF7         	movff	sprintf@f+1,tblptrh
  1912  001772  4A42               	infsnz	sprintf@f,f,c
  1913  001774  2A43               	incf	sprintf@f+1,f,c
  1914  001776                     	if	0	;tblptru may be non-zero
  1915  001776                     	endif
  1916  001776                     	if	0	;tblptru may be non-zero
  1917  001776                     	endif
  1918  001776  0008               	tblrd		*
  1919  001778  CFF5 F066          	movff	tablat,sprintf@c
  1920  00177C  5066               	movf	sprintf@c,w,c
  1921  00177E  A4D8               	btfss	status,2,c
  1922  001780  D49A               	goto	l2657
  1923  001782                     l2857:
  1924                           
  1925                           ;doprnt.c: 1538: *sp = 0;
  1926  001782  C040  FFD9         	movff	sprintf@sp,fsr2l
  1927  001786  C041  FFDA         	movff	sprintf@sp+1,fsr2h
  1928  00178A  0E00               	movlw	0
  1929  00178C  6EDF               	movwf	indf2,c
  1930  00178E  0012               	return	
  1931  001790                     __end_of_sprintf:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           prodh	equ	0xFF4
  1938                           prodl	equ	0xFF3
  1939                           wreg	equ	0xFE8
  1940                           indf2	equ	0xFDF
  1941                           postinc2	equ	0xFDE
  1942                           postdec2	equ	0xFDD
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _scale *****************
  1948 ;; Defined at:
  1949 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  scl             1    wreg     char 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  scl             1   41[COMRAM] char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  3   35[COMRAM] char 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        7 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    2
  1970 ;; This function calls:
  1971 ;;		___awdiv
  1972 ;;		___awmod
  1973 ;;		___ftmul
  1974 ;;		___wmul
  1975 ;; This function is called by:
  1976 ;;		_sprintf
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text3
  1981  001790                     __ptext3:
  1982                           	opt stack 0
  1983  001790                     _scale:
  1984                           	opt stack 27
  1985                           
  1986                           ;incstack = 0
  1987                           ;scale@scl stored from wreg
  1988  001790  6E2A               	movwf	scale@scl,c
  1989                           
  1990                           ;doprnt.c: 428: if(scl < 0) {
  1991  001792  AE2A               	btfss	scale@scl,7,c
  1992  001794  D0FB               	goto	l2287
  1993                           
  1994                           ;doprnt.c: 429: scl = -scl;
  1995  001796  6C2A               	negf	scale@scl,c
  1996                           
  1997                           ;doprnt.c: 430: if(scl>=110)
  1998  001798  502A               	movf	scale@scl,w,c
  1999  00179A  0A80               	xorlw	128
  2000  00179C  0F12               	addlw	-238
  2001  00179E  A0D8               	btfss	status,0,c
  2002  0017A0  D091               	goto	l2277
  2003                           
  2004                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2005  0017A2  0E00               	movlw	0
  2006  0017A4  6E12               	movwf	___wmul@multiplicand+1,c
  2007  0017A6  0E03               	movlw	3
  2008  0017A8  6E11               	movwf	___wmul@multiplicand,c
  2009  0017AA  0E00               	movlw	0
  2010  0017AC  6E0A               	movwf	___awdiv@divisor+1,c
  2011  0017AE  0E0A               	movlw	10
  2012  0017B0  6E09               	movwf	___awdiv@divisor,c
  2013  0017B2  0E00               	movlw	0
  2014  0017B4  6E04               	movwf	___awmod@divisor+1,c
  2015  0017B6  0E64               	movlw	100
  2016  0017B8  6E03               	movwf	___awmod@divisor,c
  2017  0017BA  502A               	movf	scale@scl,w,c
  2018  0017BC  6E01               	movwf	___awmod@dividend,c
  2019  0017BE  6A02               	clrf	___awmod@dividend+1,c
  2020  0017C0  BE01               	btfsc	___awmod@dividend,7,c
  2021  0017C2  0602               	decf	___awmod@dividend+1,f,c
  2022  0017C4  EC2E  F014         	call	___awmod	;wreg free
  2023  0017C8  C001  F007         	movff	?___awmod,___awdiv@dividend
  2024  0017CC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2025  0017D0  ECAB  F013         	call	___awdiv	;wreg free
  2026  0017D4  0E09               	movlw	9
  2027  0017D6  2407               	addwf	?___awdiv,w,c
  2028  0017D8  6E0F               	movwf	___wmul@multiplier,c
  2029  0017DA  0E00               	movlw	0
  2030  0017DC  2008               	addwfc	?___awdiv+1,w,c
  2031  0017DE  6E10               	movwf	___wmul@multiplier+1,c
  2032  0017E0  ECBB  F015         	call	___wmul	;wreg free
  2033  0017E4  0E29               	movlw	low __npowers_
  2034  0017E6  240F               	addwf	?___wmul,w,c
  2035  0017E8  6EF6               	movwf	tblptrl,c
  2036  0017EA  0E10               	movlw	high __npowers_
  2037  0017EC  2010               	addwfc	?___wmul+1,w,c
  2038  0017EE  6EF7               	movwf	tblptrh,c
  2039  0017F0                     	if	0	;There are less than 3 active tblptr bytes
  2040  0017F0                     	endif
  2041  0017F0  0009               	tblrd		*+
  2042  0017F2  CFF5 F018          	movff	tablat,___ftmul@f2
  2043  0017F6  0009               	tblrd		*+
  2044  0017F8  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2045  0017FC  000A               	tblrd		*-
  2046  0017FE  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2047  001802  0E00               	movlw	0
  2048  001804  6E0A               	movwf	___awdiv@divisor+1,c
  2049  001806  0E64               	movlw	100
  2050  001808  6E09               	movwf	___awdiv@divisor,c
  2051  00180A  502A               	movf	scale@scl,w,c
  2052  00180C  6E07               	movwf	___awdiv@dividend,c
  2053  00180E  6A08               	clrf	___awdiv@dividend+1,c
  2054  001810  BE07               	btfsc	___awdiv@dividend,7,c
  2055  001812  0608               	decf	___awdiv@dividend+1,f,c
  2056  001814  ECAB  F013         	call	___awdiv	;wreg free
  2057  001818  0E12               	movlw	18
  2058  00181A  2407               	addwf	?___awdiv,w,c
  2059  00181C  6E0F               	movwf	___wmul@multiplier,c
  2060  00181E  0E00               	movlw	0
  2061  001820  2008               	addwfc	?___awdiv+1,w,c
  2062  001822  6E10               	movwf	___wmul@multiplier+1,c
  2063  001824  0E00               	movlw	0
  2064  001826  6E12               	movwf	___wmul@multiplicand+1,c
  2065  001828  0E03               	movlw	3
  2066  00182A  6E11               	movwf	___wmul@multiplicand,c
  2067  00182C  ECBB  F015         	call	___wmul	;wreg free
  2068  001830  0E29               	movlw	low __npowers_
  2069  001832  240F               	addwf	?___wmul,w,c
  2070  001834  6EF6               	movwf	tblptrl,c
  2071  001836  0E10               	movlw	high __npowers_
  2072  001838  2010               	addwfc	?___wmul+1,w,c
  2073  00183A  6EF7               	movwf	tblptrh,c
  2074  00183C                     	if	0	;There are less than 3 active tblptr bytes
  2075  00183C                     	endif
  2076  00183C  0009               	tblrd		*+
  2077  00183E  CFF5 F015          	movff	tablat,___ftmul@f1
  2078  001842  0009               	tblrd		*+
  2079  001844  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2080  001848  000A               	tblrd		*-
  2081  00184A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2082  00184E  ECE6  F010         	call	___ftmul	;wreg free
  2083  001852  C015  F027         	movff	?___ftmul,_scale$1301
  2084  001856  C016  F028         	movff	?___ftmul+1,_scale$1301+1
  2085  00185A  C017  F029         	movff	?___ftmul+2,_scale$1301+2
  2086                           
  2087                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2088  00185E  C027  F015         	movff	_scale$1301,___ftmul@f1
  2089  001862  C028  F016         	movff	_scale$1301+1,___ftmul@f1+1
  2090  001866  C029  F017         	movff	_scale$1301+2,___ftmul@f1+2
  2091  00186A  0E00               	movlw	0
  2092  00186C  6E12               	movwf	___wmul@multiplicand+1,c
  2093  00186E  0E03               	movlw	3
  2094  001870  6E11               	movwf	___wmul@multiplicand,c
  2095  001872  0E00               	movlw	0
  2096  001874  6E04               	movwf	___awmod@divisor+1,c
  2097  001876  0E0A               	movlw	10
  2098  001878  6E03               	movwf	___awmod@divisor,c
  2099  00187A  502A               	movf	scale@scl,w,c
  2100  00187C  6E01               	movwf	___awmod@dividend,c
  2101  00187E  6A02               	clrf	___awmod@dividend+1,c
  2102  001880  BE01               	btfsc	___awmod@dividend,7,c
  2103  001882  0602               	decf	___awmod@dividend+1,f,c
  2104  001884  EC2E  F014         	call	___awmod	;wreg free
  2105  001888  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2106  00188C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2107  001890  ECBB  F015         	call	___wmul	;wreg free
  2108  001894  0E29               	movlw	low __npowers_
  2109  001896  240F               	addwf	?___wmul,w,c
  2110  001898  6EF6               	movwf	tblptrl,c
  2111  00189A  0E10               	movlw	high __npowers_
  2112  00189C  2010               	addwfc	?___wmul+1,w,c
  2113  00189E  6EF7               	movwf	tblptrh,c
  2114  0018A0                     	if	0	;There are less than 3 active tblptr bytes
  2115  0018A0                     	endif
  2116  0018A0  0009               	tblrd		*+
  2117  0018A2  CFF5 F018          	movff	tablat,___ftmul@f2
  2118  0018A6  0009               	tblrd		*+
  2119  0018A8  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2120  0018AC  000A               	tblrd		*-
  2121  0018AE  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2122  0018B2  ECE6  F010         	call	___ftmul	;wreg free
  2123  0018B6  C015  F024         	movff	?___ftmul,?_scale
  2124  0018BA  C016  F025         	movff	?___ftmul+1,?_scale+1
  2125  0018BE  C017  F026         	movff	?___ftmul+2,?_scale+2
  2126  0018C2  0012               	return	
  2127  0018C4                     l2277:
  2128                           
  2129                           ;doprnt.c: 432: else if(scl > 10)
  2130  0018C4  502A               	movf	scale@scl,w,c
  2131  0018C6  0A80               	xorlw	128
  2132  0018C8  0F75               	addlw	-139
  2133  0018CA  A0D8               	btfss	status,0,c
  2134  0018CC  D04D               	goto	l2283
  2135                           
  2136                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2137  0018CE  0E00               	movlw	0
  2138  0018D0  6E0A               	movwf	___awdiv@divisor+1,c
  2139  0018D2  0E0A               	movlw	10
  2140  0018D4  6E09               	movwf	___awdiv@divisor,c
  2141  0018D6  502A               	movf	scale@scl,w,c
  2142  0018D8  6E07               	movwf	___awdiv@dividend,c
  2143  0018DA  6A08               	clrf	___awdiv@dividend+1,c
  2144  0018DC  BE07               	btfsc	___awdiv@dividend,7,c
  2145  0018DE  0608               	decf	___awdiv@dividend+1,f,c
  2146  0018E0  ECAB  F013         	call	___awdiv	;wreg free
  2147  0018E4  0E09               	movlw	9
  2148  0018E6  2407               	addwf	?___awdiv,w,c
  2149  0018E8  6E0F               	movwf	___wmul@multiplier,c
  2150  0018EA  0E00               	movlw	0
  2151  0018EC  2008               	addwfc	?___awdiv+1,w,c
  2152  0018EE  6E10               	movwf	___wmul@multiplier+1,c
  2153  0018F0  0E00               	movlw	0
  2154  0018F2  6E12               	movwf	___wmul@multiplicand+1,c
  2155  0018F4  0E03               	movlw	3
  2156  0018F6  6E11               	movwf	___wmul@multiplicand,c
  2157  0018F8  ECBB  F015         	call	___wmul	;wreg free
  2158  0018FC  0E29               	movlw	low __npowers_
  2159  0018FE  240F               	addwf	?___wmul,w,c
  2160  001900  6EF6               	movwf	tblptrl,c
  2161  001902  0E10               	movlw	high __npowers_
  2162  001904  2010               	addwfc	?___wmul+1,w,c
  2163  001906  6EF7               	movwf	tblptrh,c
  2164  001908                     	if	0	;There are less than 3 active tblptr bytes
  2165  001908                     	endif
  2166  001908  0009               	tblrd		*+
  2167  00190A  CFF5 F015          	movff	tablat,___ftmul@f1
  2168  00190E  0009               	tblrd		*+
  2169  001910  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2170  001914  000A               	tblrd		*-
  2171  001916  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2172  00191A  0E00               	movlw	0
  2173  00191C  6E12               	movwf	___wmul@multiplicand+1,c
  2174  00191E  0E03               	movlw	3
  2175  001920  6E11               	movwf	___wmul@multiplicand,c
  2176  001922  0E00               	movlw	0
  2177  001924  6E04               	movwf	___awmod@divisor+1,c
  2178  001926  0E0A               	movlw	10
  2179  001928  6E03               	movwf	___awmod@divisor,c
  2180  00192A  502A               	movf	scale@scl,w,c
  2181  00192C  6E01               	movwf	___awmod@dividend,c
  2182  00192E  6A02               	clrf	___awmod@dividend+1,c
  2183  001930  BE01               	btfsc	___awmod@dividend,7,c
  2184  001932  0602               	decf	___awmod@dividend+1,f,c
  2185  001934  EC2E  F014         	call	___awmod	;wreg free
  2186  001938  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2187  00193C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2188  001940  ECBB  F015         	call	___wmul	;wreg free
  2189  001944  0E29               	movlw	low __npowers_
  2190  001946  240F               	addwf	?___wmul,w,c
  2191  001948  6EF6               	movwf	tblptrl,c
  2192  00194A  0E10               	movlw	high __npowers_
  2193  00194C  2010               	addwfc	?___wmul+1,w,c
  2194  00194E  6EF7               	movwf	tblptrh,c
  2195  001950                     	if	0	;There are less than 3 active tblptr bytes
  2196  001950                     	endif
  2197  001950  0009               	tblrd		*+
  2198  001952  CFF5 F018          	movff	tablat,___ftmul@f2
  2199  001956  0009               	tblrd		*+
  2200  001958  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2201  00195C  000A               	tblrd		*-
  2202  00195E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2203  001962  ECE6  F010         	call	___ftmul	;wreg free
  2204  001966  D7A7               	goto	L3
  2205  001968                     l2283:
  2206                           
  2207                           ;doprnt.c: 434: return _npowers_[scl];
  2208  001968  502A               	movf	scale@scl,w,c
  2209  00196A  0D03               	mullw	3
  2210  00196C  0E29               	movlw	low __npowers_
  2211  00196E  24F3               	addwf	prodl,w,c
  2212  001970  6EF6               	movwf	tblptrl,c
  2213  001972  0E10               	movlw	high __npowers_
  2214  001974  20F4               	addwfc	prodh,w,c
  2215  001976  6EF7               	movwf	tblptrh,c
  2216  001978                     	if	0	;There are less than 3 active tblptr bytes
  2217  001978                     	endif
  2218  001978  0009               	tblrd		*+
  2219  00197A  CFF5 F024          	movff	tablat,?_scale
  2220  00197E  0009               	tblrd		*+
  2221  001980  CFF5 F025          	movff	tablat,?_scale+1
  2222  001984  000A               	tblrd		*-
  2223  001986  CFF5 F026          	movff	tablat,?_scale+2
  2224  00198A  0012               	return	
  2225  00198C                     l2287:
  2226                           
  2227                           ;doprnt.c: 435: }
  2228                           ;doprnt.c: 436: if(scl>=110)
  2229  00198C  502A               	movf	scale@scl,w,c
  2230  00198E  0A80               	xorlw	128
  2231  001990  0F12               	addlw	-238
  2232  001992  A0D8               	btfss	status,0,c
  2233  001994  D091               	goto	l2295
  2234                           
  2235                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2236  001996  0E00               	movlw	0
  2237  001998  6E12               	movwf	___wmul@multiplicand+1,c
  2238  00199A  0E03               	movlw	3
  2239  00199C  6E11               	movwf	___wmul@multiplicand,c
  2240  00199E  0E00               	movlw	0
  2241  0019A0  6E0A               	movwf	___awdiv@divisor+1,c
  2242  0019A2  0E0A               	movlw	10
  2243  0019A4  6E09               	movwf	___awdiv@divisor,c
  2244  0019A6  0E00               	movlw	0
  2245  0019A8  6E04               	movwf	___awmod@divisor+1,c
  2246  0019AA  0E64               	movlw	100
  2247  0019AC  6E03               	movwf	___awmod@divisor,c
  2248  0019AE  502A               	movf	scale@scl,w,c
  2249  0019B0  6E01               	movwf	___awmod@dividend,c
  2250  0019B2  6A02               	clrf	___awmod@dividend+1,c
  2251  0019B4  BE01               	btfsc	___awmod@dividend,7,c
  2252  0019B6  0602               	decf	___awmod@dividend+1,f,c
  2253  0019B8  EC2E  F014         	call	___awmod	;wreg free
  2254  0019BC  C001  F007         	movff	?___awmod,___awdiv@dividend
  2255  0019C0  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2256  0019C4  ECAB  F013         	call	___awdiv	;wreg free
  2257  0019C8  0E09               	movlw	9
  2258  0019CA  2407               	addwf	?___awdiv,w,c
  2259  0019CC  6E0F               	movwf	___wmul@multiplier,c
  2260  0019CE  0E00               	movlw	0
  2261  0019D0  2008               	addwfc	?___awdiv+1,w,c
  2262  0019D2  6E10               	movwf	___wmul@multiplier+1,c
  2263  0019D4  ECBB  F015         	call	___wmul	;wreg free
  2264  0019D8  0E50               	movlw	low __powers_
  2265  0019DA  240F               	addwf	?___wmul,w,c
  2266  0019DC  6EF6               	movwf	tblptrl,c
  2267  0019DE  0E10               	movlw	high __powers_
  2268  0019E0  2010               	addwfc	?___wmul+1,w,c
  2269  0019E2  6EF7               	movwf	tblptrh,c
  2270  0019E4                     	if	0	;There are less than 3 active tblptr bytes
  2271  0019E4                     	endif
  2272  0019E4  0009               	tblrd		*+
  2273  0019E6  CFF5 F018          	movff	tablat,___ftmul@f2
  2274  0019EA  0009               	tblrd		*+
  2275  0019EC  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2276  0019F0  000A               	tblrd		*-
  2277  0019F2  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2278  0019F6  0E00               	movlw	0
  2279  0019F8  6E0A               	movwf	___awdiv@divisor+1,c
  2280  0019FA  0E64               	movlw	100
  2281  0019FC  6E09               	movwf	___awdiv@divisor,c
  2282  0019FE  502A               	movf	scale@scl,w,c
  2283  001A00  6E07               	movwf	___awdiv@dividend,c
  2284  001A02  6A08               	clrf	___awdiv@dividend+1,c
  2285  001A04  BE07               	btfsc	___awdiv@dividend,7,c
  2286  001A06  0608               	decf	___awdiv@dividend+1,f,c
  2287  001A08  ECAB  F013         	call	___awdiv	;wreg free
  2288  001A0C  0E12               	movlw	18
  2289  001A0E  2407               	addwf	?___awdiv,w,c
  2290  001A10  6E0F               	movwf	___wmul@multiplier,c
  2291  001A12  0E00               	movlw	0
  2292  001A14  2008               	addwfc	?___awdiv+1,w,c
  2293  001A16  6E10               	movwf	___wmul@multiplier+1,c
  2294  001A18  0E00               	movlw	0
  2295  001A1A  6E12               	movwf	___wmul@multiplicand+1,c
  2296  001A1C  0E03               	movlw	3
  2297  001A1E  6E11               	movwf	___wmul@multiplicand,c
  2298  001A20  ECBB  F015         	call	___wmul	;wreg free
  2299  001A24  0E50               	movlw	low __powers_
  2300  001A26  240F               	addwf	?___wmul,w,c
  2301  001A28  6EF6               	movwf	tblptrl,c
  2302  001A2A  0E10               	movlw	high __powers_
  2303  001A2C  2010               	addwfc	?___wmul+1,w,c
  2304  001A2E  6EF7               	movwf	tblptrh,c
  2305  001A30                     	if	0	;There are less than 3 active tblptr bytes
  2306  001A30                     	endif
  2307  001A30  0009               	tblrd		*+
  2308  001A32  CFF5 F015          	movff	tablat,___ftmul@f1
  2309  001A36  0009               	tblrd		*+
  2310  001A38  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2311  001A3C  000A               	tblrd		*-
  2312  001A3E  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2313  001A42  ECE6  F010         	call	___ftmul	;wreg free
  2314  001A46  C015  F027         	movff	?___ftmul,_scale$1301
  2315  001A4A  C016  F028         	movff	?___ftmul+1,_scale$1301+1
  2316  001A4E  C017  F029         	movff	?___ftmul+2,_scale$1301+2
  2317                           
  2318                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2319  001A52  C027  F015         	movff	_scale$1301,___ftmul@f1
  2320  001A56  C028  F016         	movff	_scale$1301+1,___ftmul@f1+1
  2321  001A5A  C029  F017         	movff	_scale$1301+2,___ftmul@f1+2
  2322  001A5E  0E00               	movlw	0
  2323  001A60  6E12               	movwf	___wmul@multiplicand+1,c
  2324  001A62  0E03               	movlw	3
  2325  001A64  6E11               	movwf	___wmul@multiplicand,c
  2326  001A66  0E00               	movlw	0
  2327  001A68  6E04               	movwf	___awmod@divisor+1,c
  2328  001A6A  0E0A               	movlw	10
  2329  001A6C  6E03               	movwf	___awmod@divisor,c
  2330  001A6E  502A               	movf	scale@scl,w,c
  2331  001A70  6E01               	movwf	___awmod@dividend,c
  2332  001A72  6A02               	clrf	___awmod@dividend+1,c
  2333  001A74  BE01               	btfsc	___awmod@dividend,7,c
  2334  001A76  0602               	decf	___awmod@dividend+1,f,c
  2335  001A78  EC2E  F014         	call	___awmod	;wreg free
  2336  001A7C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2337  001A80  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2338  001A84  ECBB  F015         	call	___wmul	;wreg free
  2339  001A88  0E50               	movlw	low __powers_
  2340  001A8A  240F               	addwf	?___wmul,w,c
  2341  001A8C  6EF6               	movwf	tblptrl,c
  2342  001A8E  0E10               	movlw	high __powers_
  2343  001A90  2010               	addwfc	?___wmul+1,w,c
  2344  001A92  6EF7               	movwf	tblptrh,c
  2345  001A94                     	if	0	;There are less than 3 active tblptr bytes
  2346  001A94                     	endif
  2347  001A94  0009               	tblrd		*+
  2348  001A96  CFF5 F018          	movff	tablat,___ftmul@f2
  2349  001A9A  0009               	tblrd		*+
  2350  001A9C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2351  001AA0  000A               	tblrd		*-
  2352  001AA2  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2353  001AA6  ECE6  F010         	call	___ftmul	;wreg free
  2354  001AAA  C015  F024         	movff	?___ftmul,?_scale
  2355  001AAE  C016  F025         	movff	?___ftmul+1,?_scale+1
  2356  001AB2  C017  F026         	movff	?___ftmul+2,?_scale+2
  2357  001AB6  0012               	return	
  2358  001AB8                     l2295:
  2359                           
  2360                           ;doprnt.c: 438: else if(scl > 10)
  2361  001AB8  502A               	movf	scale@scl,w,c
  2362  001ABA  0A80               	xorlw	128
  2363  001ABC  0F75               	addlw	-139
  2364  001ABE  A0D8               	btfss	status,0,c
  2365  001AC0  D04D               	goto	l2301
  2366                           
  2367                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2368  001AC2  0E00               	movlw	0
  2369  001AC4  6E0A               	movwf	___awdiv@divisor+1,c
  2370  001AC6  0E0A               	movlw	10
  2371  001AC8  6E09               	movwf	___awdiv@divisor,c
  2372  001ACA  502A               	movf	scale@scl,w,c
  2373  001ACC  6E07               	movwf	___awdiv@dividend,c
  2374  001ACE  6A08               	clrf	___awdiv@dividend+1,c
  2375  001AD0  BE07               	btfsc	___awdiv@dividend,7,c
  2376  001AD2  0608               	decf	___awdiv@dividend+1,f,c
  2377  001AD4  ECAB  F013         	call	___awdiv	;wreg free
  2378  001AD8  0E09               	movlw	9
  2379  001ADA  2407               	addwf	?___awdiv,w,c
  2380  001ADC  6E0F               	movwf	___wmul@multiplier,c
  2381  001ADE  0E00               	movlw	0
  2382  001AE0  2008               	addwfc	?___awdiv+1,w,c
  2383  001AE2  6E10               	movwf	___wmul@multiplier+1,c
  2384  001AE4  0E00               	movlw	0
  2385  001AE6  6E12               	movwf	___wmul@multiplicand+1,c
  2386  001AE8  0E03               	movlw	3
  2387  001AEA  6E11               	movwf	___wmul@multiplicand,c
  2388  001AEC  ECBB  F015         	call	___wmul	;wreg free
  2389  001AF0  0E50               	movlw	low __powers_
  2390  001AF2  240F               	addwf	?___wmul,w,c
  2391  001AF4  6EF6               	movwf	tblptrl,c
  2392  001AF6  0E10               	movlw	high __powers_
  2393  001AF8  2010               	addwfc	?___wmul+1,w,c
  2394  001AFA  6EF7               	movwf	tblptrh,c
  2395  001AFC                     	if	0	;There are less than 3 active tblptr bytes
  2396  001AFC                     	endif
  2397  001AFC  0009               	tblrd		*+
  2398  001AFE  CFF5 F015          	movff	tablat,___ftmul@f1
  2399  001B02  0009               	tblrd		*+
  2400  001B04  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2401  001B08  000A               	tblrd		*-
  2402  001B0A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2403  001B0E  0E00               	movlw	0
  2404  001B10  6E12               	movwf	___wmul@multiplicand+1,c
  2405  001B12  0E03               	movlw	3
  2406  001B14  6E11               	movwf	___wmul@multiplicand,c
  2407  001B16  0E00               	movlw	0
  2408  001B18  6E04               	movwf	___awmod@divisor+1,c
  2409  001B1A  0E0A               	movlw	10
  2410  001B1C  6E03               	movwf	___awmod@divisor,c
  2411  001B1E  502A               	movf	scale@scl,w,c
  2412  001B20  6E01               	movwf	___awmod@dividend,c
  2413  001B22  6A02               	clrf	___awmod@dividend+1,c
  2414  001B24  BE01               	btfsc	___awmod@dividend,7,c
  2415  001B26  0602               	decf	___awmod@dividend+1,f,c
  2416  001B28  EC2E  F014         	call	___awmod	;wreg free
  2417  001B2C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2418  001B30  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2419  001B34  ECBB  F015         	call	___wmul	;wreg free
  2420  001B38  0E50               	movlw	low __powers_
  2421  001B3A  240F               	addwf	?___wmul,w,c
  2422  001B3C  6EF6               	movwf	tblptrl,c
  2423  001B3E  0E10               	movlw	high __powers_
  2424  001B40  2010               	addwfc	?___wmul+1,w,c
  2425  001B42  6EF7               	movwf	tblptrh,c
  2426  001B44                     	if	0	;There are less than 3 active tblptr bytes
  2427  001B44                     	endif
  2428  001B44  0009               	tblrd		*+
  2429  001B46  CFF5 F018          	movff	tablat,___ftmul@f2
  2430  001B4A  0009               	tblrd		*+
  2431  001B4C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2432  001B50  000A               	tblrd		*-
  2433  001B52  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2434  001B56  ECE6  F010         	call	___ftmul	;wreg free
  2435  001B5A  D7A7               	goto	L4
  2436  001B5C                     l2301:
  2437                           
  2438                           ;doprnt.c: 440: return _powers_[scl];
  2439  001B5C  502A               	movf	scale@scl,w,c
  2440  001B5E  0D03               	mullw	3
  2441  001B60  0E50               	movlw	low __powers_
  2442  001B62  24F3               	addwf	prodl,w,c
  2443  001B64  6EF6               	movwf	tblptrl,c
  2444  001B66  0E10               	movlw	high __powers_
  2445  001B68  20F4               	addwfc	prodh,w,c
  2446  001B6A  6EF7               	movwf	tblptrh,c
  2447  001B6C                     	if	0	;There are less than 3 active tblptr bytes
  2448  001B6C                     	endif
  2449  001B6C  0009               	tblrd		*+
  2450  001B6E  CFF5 F024          	movff	tablat,?_scale
  2451  001B72  0009               	tblrd		*+
  2452  001B74  CFF5 F025          	movff	tablat,?_scale+1
  2453  001B78  000A               	tblrd		*-
  2454  001B7A  CFF5 F026          	movff	tablat,?_scale+2
  2455  001B7E  0012               	return	
  2456  001B80                     __end_of_scale:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           wreg	equ	0xFE8
  2465                           indf2	equ	0xFDF
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _isdigit *****************
  2473 ;; Defined at:
  2474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  c               1    wreg     unsigned char 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  c               1    2[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        3 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_sprintf
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text4
  2502  002C04                     __ptext4:
  2503                           	opt stack 0
  2504  002C04                     _isdigit:
  2505                           	opt stack 29
  2506                           
  2507                           ;incstack = 0
  2508                           ;isdigit@c stored from wreg
  2509  002C04  6E03               	movwf	isdigit@c,c
  2510  002C06  0E00               	movlw	0
  2511  002C08  6E02               	movwf	_isdigit$959,c
  2512  002C0A  0E3A               	movlw	58
  2513  002C0C  6003               	cpfslt	isdigit@c,c
  2514  002C0E  D005               	goto	l2313
  2515  002C10  0E2F               	movlw	47
  2516  002C12  6403               	cpfsgt	isdigit@c,c
  2517  002C14  D002               	goto	l2313
  2518  002C16  0E01               	movlw	1
  2519  002C18  6E02               	movwf	_isdigit$959,c
  2520  002C1A                     l2313:
  2521  002C1A  C002  F001         	movff	_isdigit$959,??_isdigit
  2522  002C1E  3001               	rrcf	??_isdigit,w,c
  2523  002C20  0012               	return	
  2524  002C22                     __end_of_isdigit:
  2525                           	opt stack 0
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           prodh	equ	0xFF4
  2531                           prodl	equ	0xFF3
  2532                           wreg	equ	0xFE8
  2533                           indf2	equ	0xFDF
  2534                           postinc2	equ	0xFDE
  2535                           postdec2	equ	0xFDD
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540 ;; *************** function _fround *****************
  2541 ;; Defined at:
  2542 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  prec            1    wreg     unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  prec            1   44[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  3   35[COMRAM] unsigned char 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:       10 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    2
  2563 ;; This function calls:
  2564 ;;		___awdiv
  2565 ;;		___awmod
  2566 ;;		___ftmul
  2567 ;;		___wmul
  2568 ;; This function is called by:
  2569 ;;		_sprintf
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text5
  2574  001B80                     __ptext5:
  2575                           	opt stack 0
  2576  001B80                     _fround:
  2577                           	opt stack 27
  2578                           
  2579                           ;incstack = 0
  2580                           ;fround@prec stored from wreg
  2581  001B80  6E2D               	movwf	fround@prec,c
  2582                           
  2583                           ;doprnt.c: 413: if(prec>=110)
  2584  001B82  0E6D               	movlw	109
  2585  001B84  642D               	cpfsgt	fround@prec,c
  2586  001B86  D09F               	goto	l2255
  2587                           
  2588                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2589  001B88  0E00               	movlw	0
  2590  001B8A  6E12               	movwf	___wmul@multiplicand+1,c
  2591  001B8C  0E03               	movlw	3
  2592  001B8E  6E11               	movwf	___wmul@multiplicand,c
  2593  001B90  0E00               	movlw	0
  2594  001B92  6E0A               	movwf	___awdiv@divisor+1,c
  2595  001B94  0E0A               	movlw	10
  2596  001B96  6E09               	movwf	___awdiv@divisor,c
  2597  001B98  0E00               	movlw	0
  2598  001B9A  6E04               	movwf	___awmod@divisor+1,c
  2599  001B9C  0E64               	movlw	100
  2600  001B9E  6E03               	movwf	___awmod@divisor,c
  2601  001BA0  C02D  F001         	movff	fround@prec,___awmod@dividend
  2602  001BA4  6A02               	clrf	___awmod@dividend+1,c
  2603  001BA6  EC2E  F014         	call	___awmod	;wreg free
  2604  001BAA  C001  F007         	movff	?___awmod,___awdiv@dividend
  2605  001BAE  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2606  001BB2  ECAB  F013         	call	___awdiv	;wreg free
  2607  001BB6  0E09               	movlw	9
  2608  001BB8  2407               	addwf	?___awdiv,w,c
  2609  001BBA  6E0F               	movwf	___wmul@multiplier,c
  2610  001BBC  0E00               	movlw	0
  2611  001BBE  2008               	addwfc	?___awdiv+1,w,c
  2612  001BC0  6E10               	movwf	___wmul@multiplier+1,c
  2613  001BC2  ECBB  F015         	call	___wmul	;wreg free
  2614  001BC6  0E29               	movlw	low __npowers_
  2615  001BC8  240F               	addwf	?___wmul,w,c
  2616  001BCA  6EF6               	movwf	tblptrl,c
  2617  001BCC  0E10               	movlw	high __npowers_
  2618  001BCE  2010               	addwfc	?___wmul+1,w,c
  2619  001BD0  6EF7               	movwf	tblptrh,c
  2620  001BD2                     	if	0	;There are less than 3 active tblptr bytes
  2621  001BD2                     	endif
  2622  001BD2  0009               	tblrd		*+
  2623  001BD4  CFF5 F018          	movff	tablat,___ftmul@f2
  2624  001BD8  0009               	tblrd		*+
  2625  001BDA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2626  001BDE  000A               	tblrd		*-
  2627  001BE0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2628  001BE4  0E00               	movlw	0
  2629  001BE6  6E0A               	movwf	___awdiv@divisor+1,c
  2630  001BE8  0E64               	movlw	100
  2631  001BEA  6E09               	movwf	___awdiv@divisor,c
  2632  001BEC  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2633  001BF0  6A08               	clrf	___awdiv@dividend+1,c
  2634  001BF2  ECAB  F013         	call	___awdiv	;wreg free
  2635  001BF6  0E12               	movlw	18
  2636  001BF8  2407               	addwf	?___awdiv,w,c
  2637  001BFA  6E0F               	movwf	___wmul@multiplier,c
  2638  001BFC  0E00               	movlw	0
  2639  001BFE  2008               	addwfc	?___awdiv+1,w,c
  2640  001C00  6E10               	movwf	___wmul@multiplier+1,c
  2641  001C02  0E00               	movlw	0
  2642  001C04  6E12               	movwf	___wmul@multiplicand+1,c
  2643  001C06  0E03               	movlw	3
  2644  001C08  6E11               	movwf	___wmul@multiplicand,c
  2645  001C0A  ECBB  F015         	call	___wmul	;wreg free
  2646  001C0E  0E29               	movlw	low __npowers_
  2647  001C10  240F               	addwf	?___wmul,w,c
  2648  001C12  6EF6               	movwf	tblptrl,c
  2649  001C14  0E10               	movlw	high __npowers_
  2650  001C16  2010               	addwfc	?___wmul+1,w,c
  2651  001C18  6EF7               	movwf	tblptrh,c
  2652  001C1A                     	if	0	;There are less than 3 active tblptr bytes
  2653  001C1A                     	endif
  2654  001C1A  0009               	tblrd		*+
  2655  001C1C  CFF5 F015          	movff	tablat,___ftmul@f1
  2656  001C20  0009               	tblrd		*+
  2657  001C22  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2658  001C26  000A               	tblrd		*-
  2659  001C28  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2660  001C2C  ECE6  F010         	call	___ftmul	;wreg free
  2661  001C30  C015  F02A         	movff	?___ftmul,_fround$1299
  2662  001C34  C016  F02B         	movff	?___ftmul+1,_fround$1299+1
  2663  001C38  C017  F02C         	movff	?___ftmul+2,_fround$1299+2
  2664                           
  2665                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2666  001C3C  0E00               	movlw	0
  2667  001C3E  6E12               	movwf	___wmul@multiplicand+1,c
  2668  001C40  0E03               	movlw	3
  2669  001C42  6E11               	movwf	___wmul@multiplicand,c
  2670  001C44  0E00               	movlw	0
  2671  001C46  6E04               	movwf	___awmod@divisor+1,c
  2672  001C48  0E0A               	movlw	10
  2673  001C4A  6E03               	movwf	___awmod@divisor,c
  2674  001C4C  C02D  F001         	movff	fround@prec,___awmod@dividend
  2675  001C50  6A02               	clrf	___awmod@dividend+1,c
  2676  001C52  EC2E  F014         	call	___awmod	;wreg free
  2677  001C56  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2678  001C5A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2679  001C5E  ECBB  F015         	call	___wmul	;wreg free
  2680  001C62  0E29               	movlw	low __npowers_
  2681  001C64  240F               	addwf	?___wmul,w,c
  2682  001C66  6EF6               	movwf	tblptrl,c
  2683  001C68  0E10               	movlw	high __npowers_
  2684  001C6A  2010               	addwfc	?___wmul+1,w,c
  2685  001C6C  6EF7               	movwf	tblptrh,c
  2686  001C6E                     	if	0	;There are less than 3 active tblptr bytes
  2687  001C6E                     	endif
  2688  001C6E  0009               	tblrd		*+
  2689  001C70  CFF5 F018          	movff	tablat,___ftmul@f2
  2690  001C74  0009               	tblrd		*+
  2691  001C76  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2692  001C7A  000A               	tblrd		*-
  2693  001C7C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2694  001C80  C02A  F015         	movff	_fround$1299,___ftmul@f1
  2695  001C84  C02B  F016         	movff	_fround$1299+1,___ftmul@f1+1
  2696  001C88  C02C  F017         	movff	_fround$1299+2,___ftmul@f1+2
  2697  001C8C  ECE6  F010         	call	___ftmul	;wreg free
  2698  001C90  C015  F027         	movff	?___ftmul,_fround$1300
  2699  001C94  C016  F028         	movff	?___ftmul+1,_fround$1300+1
  2700  001C98  C017  F029         	movff	?___ftmul+2,_fround$1300+2
  2701                           
  2702                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2703  001C9C  C027  F015         	movff	_fround$1300,___ftmul@f1
  2704  001CA0  C028  F016         	movff	_fround$1300+1,___ftmul@f1+1
  2705  001CA4  C029  F017         	movff	_fround$1300+2,___ftmul@f1+2
  2706  001CA8  0E00               	movlw	0
  2707  001CAA  6E18               	movwf	___ftmul@f2,c
  2708  001CAC  0E00               	movlw	0
  2709  001CAE  6E19               	movwf	___ftmul@f2+1,c
  2710  001CB0  0E3F               	movlw	63
  2711  001CB2  6E1A               	movwf	___ftmul@f2+2,c
  2712  001CB4  ECE6  F010         	call	___ftmul	;wreg free
  2713  001CB8  C015  F024         	movff	?___ftmul,?_fround
  2714  001CBC  C016  F025         	movff	?___ftmul+1,?_fround+1
  2715  001CC0  C017  F026         	movff	?___ftmul+2,?_fround+2
  2716  001CC4  0012               	return	
  2717  001CC6                     l2255:
  2718                           
  2719                           ;doprnt.c: 415: else if(prec > 10)
  2720  001CC6  0E0A               	movlw	10
  2721  001CC8  642D               	cpfsgt	fround@prec,c
  2722  001CCA  D05D               	goto	l2263
  2723                           
  2724                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2725  001CCC  0E00               	movlw	0
  2726  001CCE  6E12               	movwf	___wmul@multiplicand+1,c
  2727  001CD0  0E03               	movlw	3
  2728  001CD2  6E11               	movwf	___wmul@multiplicand,c
  2729  001CD4  0E00               	movlw	0
  2730  001CD6  6E04               	movwf	___awmod@divisor+1,c
  2731  001CD8  0E0A               	movlw	10
  2732  001CDA  6E03               	movwf	___awmod@divisor,c
  2733  001CDC  C02D  F001         	movff	fround@prec,___awmod@dividend
  2734  001CE0  6A02               	clrf	___awmod@dividend+1,c
  2735  001CE2  EC2E  F014         	call	___awmod	;wreg free
  2736  001CE6  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2737  001CEA  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2738  001CEE  ECBB  F015         	call	___wmul	;wreg free
  2739  001CF2  0E29               	movlw	low __npowers_
  2740  001CF4  240F               	addwf	?___wmul,w,c
  2741  001CF6  6EF6               	movwf	tblptrl,c
  2742  001CF8  0E10               	movlw	high __npowers_
  2743  001CFA  2010               	addwfc	?___wmul+1,w,c
  2744  001CFC  6EF7               	movwf	tblptrh,c
  2745  001CFE                     	if	0	;There are less than 3 active tblptr bytes
  2746  001CFE                     	endif
  2747  001CFE  0009               	tblrd		*+
  2748  001D00  CFF5 F018          	movff	tablat,___ftmul@f2
  2749  001D04  0009               	tblrd		*+
  2750  001D06  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2751  001D0A  000A               	tblrd		*-
  2752  001D0C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2753  001D10  0E00               	movlw	0
  2754  001D12  6E0A               	movwf	___awdiv@divisor+1,c
  2755  001D14  0E0A               	movlw	10
  2756  001D16  6E09               	movwf	___awdiv@divisor,c
  2757  001D18  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2758  001D1C  6A08               	clrf	___awdiv@dividend+1,c
  2759  001D1E  ECAB  F013         	call	___awdiv	;wreg free
  2760  001D22  0E09               	movlw	9
  2761  001D24  2407               	addwf	?___awdiv,w,c
  2762  001D26  6E0F               	movwf	___wmul@multiplier,c
  2763  001D28  0E00               	movlw	0
  2764  001D2A  2008               	addwfc	?___awdiv+1,w,c
  2765  001D2C  6E10               	movwf	___wmul@multiplier+1,c
  2766  001D2E  0E00               	movlw	0
  2767  001D30  6E12               	movwf	___wmul@multiplicand+1,c
  2768  001D32  0E03               	movlw	3
  2769  001D34  6E11               	movwf	___wmul@multiplicand,c
  2770  001D36  ECBB  F015         	call	___wmul	;wreg free
  2771  001D3A  0E29               	movlw	low __npowers_
  2772  001D3C  240F               	addwf	?___wmul,w,c
  2773  001D3E  6EF6               	movwf	tblptrl,c
  2774  001D40  0E10               	movlw	high __npowers_
  2775  001D42  2010               	addwfc	?___wmul+1,w,c
  2776  001D44  6EF7               	movwf	tblptrh,c
  2777  001D46                     	if	0	;There are less than 3 active tblptr bytes
  2778  001D46                     	endif
  2779  001D46  0009               	tblrd		*+
  2780  001D48  CFF5 F015          	movff	tablat,___ftmul@f1
  2781  001D4C  0009               	tblrd		*+
  2782  001D4E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2783  001D52  000A               	tblrd		*-
  2784  001D54  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2785  001D58  ECE6  F010         	call	___ftmul	;wreg free
  2786  001D5C  C015  F02A         	movff	?___ftmul,_fround$1299
  2787  001D60  C016  F02B         	movff	?___ftmul+1,_fround$1299+1
  2788  001D64  C017  F02C         	movff	?___ftmul+2,_fround$1299+2
  2789                           
  2790                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2791  001D68  C02A  F015         	movff	_fround$1299,___ftmul@f1
  2792  001D6C  C02B  F016         	movff	_fround$1299+1,___ftmul@f1+1
  2793  001D70  C02C  F017         	movff	_fround$1299+2,___ftmul@f1+2
  2794  001D74  0E00               	movlw	0
  2795  001D76  6E18               	movwf	___ftmul@f2,c
  2796  001D78  0E00               	movlw	0
  2797  001D7A  6E19               	movwf	___ftmul@f2+1,c
  2798  001D7C  0E3F               	movlw	63
  2799  001D7E  6E1A               	movwf	___ftmul@f2+2,c
  2800  001D80  ECE6  F010         	call	___ftmul	;wreg free
  2801  001D84  D799               	goto	L5
  2802  001D86                     l2263:
  2803                           
  2804                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2805  001D86  502D               	movf	fround@prec,w,c
  2806  001D88  0D03               	mullw	3
  2807  001D8A  0E29               	movlw	low __npowers_
  2808  001D8C  24F3               	addwf	prodl,w,c
  2809  001D8E  6EF6               	movwf	tblptrl,c
  2810  001D90  0E10               	movlw	high __npowers_
  2811  001D92  20F4               	addwfc	prodh,w,c
  2812  001D94  6EF7               	movwf	tblptrh,c
  2813  001D96                     	if	0	;There are less than 3 active tblptr bytes
  2814  001D96                     	endif
  2815  001D96  0009               	tblrd		*+
  2816  001D98  CFF5 F015          	movff	tablat,___ftmul@f1
  2817  001D9C  0009               	tblrd		*+
  2818  001D9E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2819  001DA2  000A               	tblrd		*-
  2820  001DA4  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2821  001DA8  0E00               	movlw	0
  2822  001DAA  6E18               	movwf	___ftmul@f2,c
  2823  001DAC  0E00               	movlw	0
  2824  001DAE  6E19               	movwf	___ftmul@f2+1,c
  2825  001DB0  0E3F               	movlw	63
  2826  001DB2  6E1A               	movwf	___ftmul@f2+2,c
  2827  001DB4  ECE6  F010         	call	___ftmul	;wreg free
  2828  001DB8  C015  F024         	movff	?___ftmul,?_fround
  2829  001DBC  C016  F025         	movff	?___ftmul+1,?_fround+1
  2830  001DC0  C017  F026         	movff	?___ftmul+2,?_fround+2
  2831  001DC4  0012               	return	
  2832  001DC6                     __end_of_fround:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           prodh	equ	0xFF4
  2839                           prodl	equ	0xFF3
  2840                           wreg	equ	0xFE8
  2841                           indf2	equ	0xFDF
  2842                           postinc2	equ	0xFDE
  2843                           postdec2	equ	0xFDD
  2844                           fsr2h	equ	0xFDA
  2845                           fsr2l	equ	0xFD9
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function ___wmul *****************
  2849 ;; Defined at:
  2850 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  multiplier      2   14[COMRAM] unsigned int 
  2853 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  product         2   18[COMRAM] unsigned int 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2   14[COMRAM] unsigned int 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, prodl, prodh
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        6 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_fround
  2875 ;;		_scale
  2876 ;;		_sprintf
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text6
  2881  002B76                     __ptext6:
  2882                           	opt stack 0
  2883  002B76                     ___wmul:
  2884                           	opt stack 28
  2885                           
  2886                           ;incstack = 0
  2887  002B76  500F               	movf	___wmul@multiplier,w,c
  2888  002B78  0211               	mulwf	___wmul@multiplicand,c
  2889  002B7A  CFF3 F013          	movff	prodl,___wmul@product
  2890  002B7E  CFF4 F014          	movff	prodh,___wmul@product+1
  2891  002B82  500F               	movf	___wmul@multiplier,w,c
  2892  002B84  0212               	mulwf	___wmul@multiplicand+1,c
  2893  002B86  50F3               	movf	prodl,w,c
  2894  002B88  2614               	addwf	___wmul@product+1,f,c
  2895  002B8A  5010               	movf	___wmul@multiplier+1,w,c
  2896  002B8C  0211               	mulwf	___wmul@multiplicand,c
  2897  002B8E  50F3               	movf	prodl,w,c
  2898  002B90  2614               	addwf	___wmul@product+1,f,c
  2899  002B92  C013  F00F         	movff	___wmul@product,?___wmul
  2900  002B96  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2901  002B9A  0012               	return	
  2902  002B9C                     __end_of___wmul:
  2903                           	opt stack 0
  2904                           tblptru	equ	0xFF8
  2905                           tblptrh	equ	0xFF7
  2906                           tblptrl	equ	0xFF6
  2907                           tablat	equ	0xFF5
  2908                           prodh	equ	0xFF4
  2909                           prodl	equ	0xFF3
  2910                           wreg	equ	0xFE8
  2911                           indf2	equ	0xFDF
  2912                           postinc2	equ	0xFDE
  2913                           postdec2	equ	0xFDD
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function ___ftmul *****************
  2919 ;; Defined at:
  2920 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  f1              3   20[COMRAM] float 
  2923 ;;  f2              3   23[COMRAM] float 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  2926 ;;  sign            1   34[COMRAM] unsigned char 
  2927 ;;  cntr            1   33[COMRAM] unsigned char 
  2928 ;;  exp             1   29[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  3   20[COMRAM] float 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2938 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;Total ram usage:       15 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    1
  2945 ;; This function calls:
  2946 ;;		___ftpack
  2947 ;; This function is called by:
  2948 ;;		_fround
  2949 ;;		_scale
  2950 ;;		_sprintf
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text7
  2955  0021CC                     __ptext7:
  2956                           	opt stack 0
  2957  0021CC                     ___ftmul:
  2958                           	opt stack 27
  2959                           
  2960                           ;incstack = 0
  2961  0021CC  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  2962  0021D0  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  2963  0021D2  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  2964  0021D4  3416               	rlcf	___ftmul@f1+1,w,c
  2965  0021D6  361B               	rlcf	??___ftmul& (0+255),f,c
  2966  0021D8  E301               	bnc	u1911
  2967  0021DA  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  2968  0021DC                     u1911:
  2969  0021DC  501B               	movf	??___ftmul,w,c
  2970  0021DE  6E1E               	movwf	___ftmul@exp,c
  2971  0021E0  501E               	movf	___ftmul@exp,w,c
  2972  0021E2  A4D8               	btfss	status,2,c
  2973  0021E4  D007               	goto	l2017
  2974  0021E6  0E00               	movlw	0
  2975  0021E8  6E15               	movwf	?___ftmul,c
  2976  0021EA  0E00               	movlw	0
  2977  0021EC  6E16               	movwf	?___ftmul+1,c
  2978  0021EE  0E00               	movlw	0
  2979  0021F0  6E17               	movwf	?___ftmul+2,c
  2980  0021F2  0012               	return	
  2981  0021F4                     l2017:
  2982  0021F4  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  2983  0021F8  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  2984  0021FA  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  2985  0021FC  3419               	rlcf	___ftmul@f2+1,w,c
  2986  0021FE  361B               	rlcf	??___ftmul& (0+255),f,c
  2987  002200  E301               	bnc	u1931
  2988  002202  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  2989  002204                     u1931:
  2990  002204  501B               	movf	??___ftmul,w,c
  2991  002206  6E23               	movwf	___ftmul@sign,c
  2992  002208  5023               	movf	___ftmul@sign,w,c
  2993  00220A  A4D8               	btfss	status,2,c
  2994  00220C  D007               	goto	l2023
  2995  00220E  0E00               	movlw	0
  2996  002210  6E15               	movwf	?___ftmul,c
  2997  002212  0E00               	movlw	0
  2998  002214  6E16               	movwf	?___ftmul+1,c
  2999  002216  0E00               	movlw	0
  3000  002218  6E17               	movwf	?___ftmul+2,c
  3001  00221A  0012               	return	
  3002  00221C                     l2023:
  3003  00221C  5023               	movf	___ftmul@sign,w,c
  3004  00221E  0F7B               	addlw	123
  3005  002220  261E               	addwf	___ftmul@exp,f,c
  3006  002222  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3007  002226  501A               	movf	___ftmul@f2+2,w,c
  3008  002228  1A23               	xorwf	___ftmul@sign,f,c
  3009  00222A  0E80               	movlw	128
  3010  00222C  1623               	andwf	___ftmul@sign,f,c
  3011  00222E  8E16               	bsf	___ftmul@f1+1,7,c
  3012  002230  8E19               	bsf	___ftmul@f2+1,7,c
  3013  002232  0EFF               	movlw	255
  3014  002234  1618               	andwf	___ftmul@f2,f,c
  3015  002236  0EFF               	movlw	255
  3016  002238  1619               	andwf	___ftmul@f2+1,f,c
  3017  00223A  0E00               	movlw	0
  3018  00223C  161A               	andwf	___ftmul@f2+2,f,c
  3019  00223E  0E00               	movlw	0
  3020  002240  6E1F               	movwf	___ftmul@f3_as_product,c
  3021  002242  0E00               	movlw	0
  3022  002244  6E20               	movwf	___ftmul@f3_as_product+1,c
  3023  002246  0E00               	movlw	0
  3024  002248  6E21               	movwf	___ftmul@f3_as_product+2,c
  3025  00224A  0E07               	movlw	7
  3026  00224C  6E22               	movwf	___ftmul@cntr,c
  3027  00224E                     l2037:
  3028  00224E  A015               	btfss	___ftmul@f1,0,c
  3029  002250  D006               	goto	l2041
  3030  002252  5018               	movf	___ftmul@f2,w,c
  3031  002254  261F               	addwf	___ftmul@f3_as_product,f,c
  3032  002256  5019               	movf	___ftmul@f2+1,w,c
  3033  002258  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3034  00225A  501A               	movf	___ftmul@f2+2,w,c
  3035  00225C  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3036  00225E                     l2041:
  3037  00225E  90D8               	bcf	status,0,c
  3038  002260  3217               	rrcf	___ftmul@f1+2,f,c
  3039  002262  3216               	rrcf	___ftmul@f1+1,f,c
  3040  002264  3215               	rrcf	___ftmul@f1,f,c
  3041  002266  90D8               	bcf	status,0,c
  3042  002268  3618               	rlcf	___ftmul@f2,f,c
  3043  00226A  3619               	rlcf	___ftmul@f2+1,f,c
  3044  00226C  361A               	rlcf	___ftmul@f2+2,f,c
  3045  00226E  2E22               	decfsz	___ftmul@cntr,f,c
  3046  002270  D7EE               	goto	l2037
  3047  002272  0E09               	movlw	9
  3048  002274  6E22               	movwf	___ftmul@cntr,c
  3049  002276                     l2047:
  3050  002276  A015               	btfss	___ftmul@f1,0,c
  3051  002278  D006               	goto	l2051
  3052  00227A  5018               	movf	___ftmul@f2,w,c
  3053  00227C  261F               	addwf	___ftmul@f3_as_product,f,c
  3054  00227E  5019               	movf	___ftmul@f2+1,w,c
  3055  002280  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3056  002282  501A               	movf	___ftmul@f2+2,w,c
  3057  002284  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3058  002286                     l2051:
  3059  002286  90D8               	bcf	status,0,c
  3060  002288  3217               	rrcf	___ftmul@f1+2,f,c
  3061  00228A  3216               	rrcf	___ftmul@f1+1,f,c
  3062  00228C  3215               	rrcf	___ftmul@f1,f,c
  3063  00228E  90D8               	bcf	status,0,c
  3064  002290  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3065  002292  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3066  002294  321F               	rrcf	___ftmul@f3_as_product,f,c
  3067  002296  2E22               	decfsz	___ftmul@cntr,f,c
  3068  002298  D7EE               	goto	l2047
  3069  00229A  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3070  00229E  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3071  0022A2  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3072  0022A6  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3073  0022AA  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3074  0022AE  ECC0  F012         	call	___ftpack	;wreg free
  3075  0022B2  C001  F015         	movff	?___ftpack,?___ftmul
  3076  0022B6  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3077  0022BA  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3078  0022BE  0012               	return	
  3079  0022C0                     __end_of___ftmul:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           wreg	equ	0xFE8
  3088                           indf2	equ	0xFDF
  3089                           postinc2	equ	0xFDE
  3090                           postdec2	equ	0xFDD
  3091                           fsr2h	equ	0xFDA
  3092                           fsr2l	equ	0xFD9
  3093                           status	equ	0xFD8
  3094                           
  3095 ;; *************** function ___awmod *****************
  3096 ;; Defined at:
  3097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  dividend        2    0[COMRAM] int 
  3100 ;;  divisor         2    2[COMRAM] int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  sign            1    5[COMRAM] unsigned char 
  3103 ;;  counter         1    4[COMRAM] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    0[COMRAM] int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_fround
  3123 ;;		_scale
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text8
  3128  00285C                     __ptext8:
  3129                           	opt stack 0
  3130  00285C                     ___awmod:
  3131                           	opt stack 28
  3132                           
  3133                           ;incstack = 0
  3134  00285C  0E00               	movlw	0
  3135  00285E  6E06               	movwf	___awmod@sign,c
  3136  002860  AE02               	btfss	___awmod@dividend+1,7,c
  3137  002862  D006               	goto	l2111
  3138  002864  6C01               	negf	___awmod@dividend,c
  3139  002866  1E02               	comf	___awmod@dividend+1,f,c
  3140  002868  B0D8               	btfsc	status,0,c
  3141  00286A  2A02               	incf	___awmod@dividend+1,f,c
  3142  00286C  0E01               	movlw	1
  3143  00286E  6E06               	movwf	___awmod@sign,c
  3144  002870                     l2111:
  3145  002870  AE04               	btfss	___awmod@divisor+1,7,c
  3146  002872  D004               	goto	l2115
  3147  002874  6C03               	negf	___awmod@divisor,c
  3148  002876  1E04               	comf	___awmod@divisor+1,f,c
  3149  002878  B0D8               	btfsc	status,0,c
  3150  00287A  2A04               	incf	___awmod@divisor+1,f,c
  3151  00287C                     l2115:
  3152  00287C  5003               	movf	___awmod@divisor,w,c
  3153  00287E  1004               	iorwf	___awmod@divisor+1,w,c
  3154  002880  B4D8               	btfsc	status,2,c
  3155  002882  D018               	goto	l2131
  3156  002884  0E01               	movlw	1
  3157  002886  6E05               	movwf	___awmod@counter,c
  3158  002888  D004               	goto	l2121
  3159  00288A                     l2119:
  3160  00288A  90D8               	bcf	status,0,c
  3161  00288C  3603               	rlcf	___awmod@divisor,f,c
  3162  00288E  3604               	rlcf	___awmod@divisor+1,f,c
  3163  002890  2A05               	incf	___awmod@counter,f,c
  3164  002892                     l2121:
  3165  002892  AE04               	btfss	___awmod@divisor+1,7,c
  3166  002894  D7FA               	goto	l2119
  3167  002896                     l2123:
  3168  002896  5003               	movf	___awmod@divisor,w,c
  3169  002898  5C01               	subwf	___awmod@dividend,w,c
  3170  00289A  5004               	movf	___awmod@divisor+1,w,c
  3171  00289C  5802               	subwfb	___awmod@dividend+1,w,c
  3172  00289E  A0D8               	btfss	status,0,c
  3173  0028A0  D004               	goto	l2127
  3174  0028A2  5003               	movf	___awmod@divisor,w,c
  3175  0028A4  5E01               	subwf	___awmod@dividend,f,c
  3176  0028A6  5004               	movf	___awmod@divisor+1,w,c
  3177  0028A8  5A02               	subwfb	___awmod@dividend+1,f,c
  3178  0028AA                     l2127:
  3179  0028AA  90D8               	bcf	status,0,c
  3180  0028AC  3204               	rrcf	___awmod@divisor+1,f,c
  3181  0028AE  3203               	rrcf	___awmod@divisor,f,c
  3182  0028B0  2E05               	decfsz	___awmod@counter,f,c
  3183  0028B2  D7F1               	goto	l2123
  3184  0028B4                     l2131:
  3185  0028B4  5006               	movf	___awmod@sign,w,c
  3186  0028B6  B4D8               	btfsc	status,2,c
  3187  0028B8  D004               	goto	l2135
  3188  0028BA  6C01               	negf	___awmod@dividend,c
  3189  0028BC  1E02               	comf	___awmod@dividend+1,f,c
  3190  0028BE  B0D8               	btfsc	status,0,c
  3191  0028C0  2A02               	incf	___awmod@dividend+1,f,c
  3192  0028C2                     l2135:
  3193  0028C2  C001  F001         	movff	___awmod@dividend,?___awmod
  3194  0028C6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3195  0028CA  0012               	return	
  3196  0028CC                     __end_of___awmod:
  3197                           	opt stack 0
  3198                           tblptru	equ	0xFF8
  3199                           tblptrh	equ	0xFF7
  3200                           tblptrl	equ	0xFF6
  3201                           tablat	equ	0xFF5
  3202                           prodh	equ	0xFF4
  3203                           prodl	equ	0xFF3
  3204                           wreg	equ	0xFE8
  3205                           indf2	equ	0xFDF
  3206                           postinc2	equ	0xFDE
  3207                           postdec2	equ	0xFDD
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function ___awdiv *****************
  3213 ;; Defined at:
  3214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  dividend        2    6[COMRAM] int 
  3217 ;;  divisor         2    8[COMRAM] int 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  quotient        2   12[COMRAM] int 
  3220 ;;  sign            1   11[COMRAM] unsigned char 
  3221 ;;  counter         1   10[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2    6[COMRAM] int 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;Total ram usage:        8 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_fround
  3241 ;;		_scale
  3242 ;;		_sprintf
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text9
  3247  002756                     __ptext9:
  3248                           	opt stack 0
  3249  002756                     ___awdiv:
  3250                           	opt stack 28
  3251                           
  3252                           ;incstack = 0
  3253  002756  0E00               	movlw	0
  3254  002758  6E0C               	movwf	___awdiv@sign,c
  3255  00275A  AE0A               	btfss	___awdiv@divisor+1,7,c
  3256  00275C  D006               	goto	l2067
  3257  00275E  6C09               	negf	___awdiv@divisor,c
  3258  002760  1E0A               	comf	___awdiv@divisor+1,f,c
  3259  002762  B0D8               	btfsc	status,0,c
  3260  002764  2A0A               	incf	___awdiv@divisor+1,f,c
  3261  002766  0E01               	movlw	1
  3262  002768  6E0C               	movwf	___awdiv@sign,c
  3263  00276A                     l2067:
  3264  00276A  AE08               	btfss	___awdiv@dividend+1,7,c
  3265  00276C  D006               	goto	l2073
  3266  00276E  6C07               	negf	___awdiv@dividend,c
  3267  002770  1E08               	comf	___awdiv@dividend+1,f,c
  3268  002772  B0D8               	btfsc	status,0,c
  3269  002774  2A08               	incf	___awdiv@dividend+1,f,c
  3270  002776  0E01               	movlw	1
  3271  002778  1A0C               	xorwf	___awdiv@sign,f,c
  3272  00277A                     l2073:
  3273  00277A  0E00               	movlw	0
  3274  00277C  6E0E               	movwf	___awdiv@quotient+1,c
  3275  00277E  0E00               	movlw	0
  3276  002780  6E0D               	movwf	___awdiv@quotient,c
  3277  002782  5009               	movf	___awdiv@divisor,w,c
  3278  002784  100A               	iorwf	___awdiv@divisor+1,w,c
  3279  002786  B4D8               	btfsc	status,2,c
  3280  002788  D01C               	goto	l2095
  3281  00278A  0E01               	movlw	1
  3282  00278C  6E0B               	movwf	___awdiv@counter,c
  3283  00278E  D004               	goto	l2081
  3284  002790                     l2079:
  3285  002790  90D8               	bcf	status,0,c
  3286  002792  3609               	rlcf	___awdiv@divisor,f,c
  3287  002794  360A               	rlcf	___awdiv@divisor+1,f,c
  3288  002796  2A0B               	incf	___awdiv@counter,f,c
  3289  002798                     l2081:
  3290  002798  AE0A               	btfss	___awdiv@divisor+1,7,c
  3291  00279A  D7FA               	goto	l2079
  3292  00279C                     l2083:
  3293  00279C  90D8               	bcf	status,0,c
  3294  00279E  360D               	rlcf	___awdiv@quotient,f,c
  3295  0027A0  360E               	rlcf	___awdiv@quotient+1,f,c
  3296  0027A2  5009               	movf	___awdiv@divisor,w,c
  3297  0027A4  5C07               	subwf	___awdiv@dividend,w,c
  3298  0027A6  500A               	movf	___awdiv@divisor+1,w,c
  3299  0027A8  5808               	subwfb	___awdiv@dividend+1,w,c
  3300  0027AA  A0D8               	btfss	status,0,c
  3301  0027AC  D005               	goto	l2091
  3302  0027AE  5009               	movf	___awdiv@divisor,w,c
  3303  0027B0  5E07               	subwf	___awdiv@dividend,f,c
  3304  0027B2  500A               	movf	___awdiv@divisor+1,w,c
  3305  0027B4  5A08               	subwfb	___awdiv@dividend+1,f,c
  3306  0027B6  800D               	bsf	___awdiv@quotient,0,c
  3307  0027B8                     l2091:
  3308  0027B8  90D8               	bcf	status,0,c
  3309  0027BA  320A               	rrcf	___awdiv@divisor+1,f,c
  3310  0027BC  3209               	rrcf	___awdiv@divisor,f,c
  3311  0027BE  2E0B               	decfsz	___awdiv@counter,f,c
  3312  0027C0  D7ED               	goto	l2083
  3313  0027C2                     l2095:
  3314  0027C2  500C               	movf	___awdiv@sign,w,c
  3315  0027C4  B4D8               	btfsc	status,2,c
  3316  0027C6  D004               	goto	l2099
  3317  0027C8  6C0D               	negf	___awdiv@quotient,c
  3318  0027CA  1E0E               	comf	___awdiv@quotient+1,f,c
  3319  0027CC  B0D8               	btfsc	status,0,c
  3320  0027CE  2A0E               	incf	___awdiv@quotient+1,f,c
  3321  0027D0                     l2099:
  3322  0027D0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3323  0027D4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3324  0027D8  0012               	return	
  3325  0027DA                     __end_of___awdiv:
  3326                           	opt stack 0
  3327                           tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodh	equ	0xFF4
  3332                           prodl	equ	0xFF3
  3333                           wreg	equ	0xFE8
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           postdec2	equ	0xFDD
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function __tdiv_to_l_ *****************
  3342 ;; Defined at:
  3343 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  f1              3    0[COMRAM] float 
  3346 ;;  f2              3    3[COMRAM] float 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  quot            4    9[COMRAM] unsigned long 
  3349 ;;  exp1            1   14[COMRAM] unsigned char 
  3350 ;;  cntr            1   13[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  4    0[COMRAM] unsigned long 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:       15 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_sprintf
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text10
  3374  001F72                     __ptext10:
  3375                           	opt stack 0
  3376  001F72                     __tdiv_to_l_:
  3377                           	opt stack 29
  3378                           
  3379                           ;incstack = 0
  3380  001F72  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3381  001F76  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3382  001F78  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3383  001F7A  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3384  001F7C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3385  001F7E  E301               	bnc	u2401
  3386  001F80  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3387  001F82                     u2401:
  3388  001F82  5007               	movf	??__tdiv_to_l_,w,c
  3389  001F84  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3390  001F86  500F               	movf	__tdiv_to_l_@exp1,w,c
  3391  001F88  A4D8               	btfss	status,2,c
  3392  001F8A  D009               	goto	l2323
  3393  001F8C  0E00               	movlw	0
  3394  001F8E  6E01               	movwf	?__tdiv_to_l_,c
  3395  001F90  0E00               	movlw	0
  3396  001F92  6E02               	movwf	?__tdiv_to_l_+1,c
  3397  001F94  0E00               	movlw	0
  3398  001F96  6E03               	movwf	?__tdiv_to_l_+2,c
  3399  001F98  0E00               	movlw	0
  3400  001F9A  6E04               	movwf	?__tdiv_to_l_+3,c
  3401  001F9C  0012               	return	
  3402  001F9E                     l2323:
  3403  001F9E  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3404  001FA2  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3405  001FA4  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3406  001FA6  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3407  001FA8  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3408  001FAA  E301               	bnc	u2421
  3409  001FAC  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3410  001FAE                     u2421:
  3411  001FAE  5007               	movf	??__tdiv_to_l_,w,c
  3412  001FB0  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3413  001FB2  500E               	movf	__tdiv_to_l_@cntr,w,c
  3414  001FB4  A4D8               	btfss	status,2,c
  3415  001FB6  D009               	goto	l2329
  3416  001FB8  0E00               	movlw	0
  3417  001FBA  6E01               	movwf	?__tdiv_to_l_,c
  3418  001FBC  0E00               	movlw	0
  3419  001FBE  6E02               	movwf	?__tdiv_to_l_+1,c
  3420  001FC0  0E00               	movlw	0
  3421  001FC2  6E03               	movwf	?__tdiv_to_l_+2,c
  3422  001FC4  0E00               	movlw	0
  3423  001FC6  6E04               	movwf	?__tdiv_to_l_+3,c
  3424  001FC8  0012               	return	
  3425  001FCA                     l2329:
  3426  001FCA  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3427  001FCC  0EFF               	movlw	255
  3428  001FCE  1601               	andwf	__tdiv_to_l_@f1,f,c
  3429  001FD0  0EFF               	movlw	255
  3430  001FD2  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3431  001FD4  0E00               	movlw	0
  3432  001FD6  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3433  001FD8  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3434  001FDA  0EFF               	movlw	255
  3435  001FDC  1604               	andwf	__tdiv_to_l_@f2,f,c
  3436  001FDE  0EFF               	movlw	255
  3437  001FE0  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3438  001FE2  0E00               	movlw	0
  3439  001FE4  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3440  001FE6  0E00               	movlw	0
  3441  001FE8  6E0A               	movwf	__tdiv_to_l_@quot,c
  3442  001FEA  0E00               	movlw	0
  3443  001FEC  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3444  001FEE  0E00               	movlw	0
  3445  001FF0  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3446  001FF2  0E00               	movlw	0
  3447  001FF4  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3448  001FF6  0E7F               	movlw	127
  3449  001FF8  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3450  001FFA  500E               	movf	__tdiv_to_l_@cntr,w,c
  3451  001FFC  0F98               	addlw	152
  3452  001FFE  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3453  002000  0E18               	movlw	24
  3454  002002  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3455  002004                     l535:
  3456  002004  90D8               	bcf	status,0,c
  3457  002006  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3458  002008  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3459  00200A  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3460  00200C  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3461  00200E  5004               	movf	__tdiv_to_l_@f2,w,c
  3462  002010  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3463  002012  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3464  002014  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3465  002016  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3466  002018  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3467  00201A  A0D8               	btfss	status,0,c
  3468  00201C  D007               	goto	l536
  3469  00201E  5004               	movf	__tdiv_to_l_@f2,w,c
  3470  002020  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3471  002022  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3472  002024  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3473  002026  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3474  002028  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3475  00202A  800A               	bsf	__tdiv_to_l_@quot,0,c
  3476  00202C                     l536:
  3477  00202C  90D8               	bcf	status,0,c
  3478  00202E  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3479  002030  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3480  002032  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3481  002034  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3482  002036  D7E6               	goto	l535
  3483  002038  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3484  00203A  D016               	goto	l2363
  3485  00203C  500F               	movf	__tdiv_to_l_@exp1,w,c
  3486  00203E  0A80               	xorlw	128
  3487  002040  0F97               	addlw	151
  3488  002042  B0D8               	btfsc	status,0,c
  3489  002044  D009               	goto	l2359
  3490  002046  0E00               	movlw	0
  3491  002048  6E01               	movwf	?__tdiv_to_l_,c
  3492  00204A  0E00               	movlw	0
  3493  00204C  6E02               	movwf	?__tdiv_to_l_+1,c
  3494  00204E  0E00               	movlw	0
  3495  002050  6E03               	movwf	?__tdiv_to_l_+2,c
  3496  002052  0E00               	movlw	0
  3497  002054  6E04               	movwf	?__tdiv_to_l_+3,c
  3498  002056  0012               	return	
  3499  002058                     l2359:
  3500  002058  90D8               	bcf	status,0,c
  3501  00205A  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3502  00205C  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3503  00205E  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3504  002060  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3505  002062  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3506  002064  D7F9               	goto	l2359
  3507  002066  D015               	goto	l542
  3508  002068                     l2363:
  3509  002068  0E17               	movlw	23
  3510  00206A  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3511  00206C  D00F               	goto	l2371
  3512  00206E  0E00               	movlw	0
  3513  002070  6E01               	movwf	?__tdiv_to_l_,c
  3514  002072  0E00               	movlw	0
  3515  002074  6E02               	movwf	?__tdiv_to_l_+1,c
  3516  002076  0E00               	movlw	0
  3517  002078  6E03               	movwf	?__tdiv_to_l_+2,c
  3518  00207A  0E00               	movlw	0
  3519  00207C  6E04               	movwf	?__tdiv_to_l_+3,c
  3520  00207E  0012               	return	
  3521  002080                     l2369:
  3522  002080  90D8               	bcf	status,0,c
  3523  002082  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3524  002084  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3525  002086  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3526  002088  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3527  00208A  060F               	decf	__tdiv_to_l_@exp1,f,c
  3528  00208C                     l2371:
  3529  00208C  500F               	movf	__tdiv_to_l_@exp1,w,c
  3530  00208E  A4D8               	btfss	status,2,c
  3531  002090  D7F7               	goto	l2369
  3532  002092                     l542:
  3533  002092  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3534  002096  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3535  00209A  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3536  00209E  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3537  0020A2  0012               	return		;funcret
  3538  0020A4                     __end_of__tdiv_to_l_:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           tblptrh	equ	0xFF7
  3542                           tblptrl	equ	0xFF6
  3543                           tablat	equ	0xFF5
  3544                           prodh	equ	0xFF4
  3545                           prodl	equ	0xFF3
  3546                           wreg	equ	0xFE8
  3547                           indf2	equ	0xFDF
  3548                           postinc2	equ	0xFDE
  3549                           postdec2	equ	0xFDD
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8
  3553                           
  3554 ;; *************** function __div_to_l_ *****************
  3555 ;; Defined at:
  3556 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  f1              3    0[COMRAM] unsigned long 
  3559 ;;  f2              3    3[COMRAM] unsigned long 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  quot            4    6[COMRAM] unsigned long 
  3562 ;;  exp1            1   11[COMRAM] unsigned char 
  3563 ;;  cntr            1   10[COMRAM] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  4    0[COMRAM] unsigned long 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:       12 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_sprintf
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text11
  3587  0020A4                     __ptext11:
  3588                           	opt stack 0
  3589  0020A4                     __div_to_l_:
  3590                           	opt stack 29
  3591                           
  3592                           ;incstack = 0
  3593  0020A4  3403               	rlcf	__div_to_l_@f1+2,w,c
  3594  0020A6  3404               	rlcf	__div_to_l_@f1+3,w,c
  3595  0020A8  6E0C               	movwf	__div_to_l_@exp1,c
  3596  0020AA  500C               	movf	__div_to_l_@exp1,w,c
  3597  0020AC  A4D8               	btfss	status,2,c
  3598  0020AE  D009               	goto	l2379
  3599  0020B0  0E00               	movlw	0
  3600  0020B2  6E01               	movwf	?__div_to_l_,c
  3601  0020B4  0E00               	movlw	0
  3602  0020B6  6E02               	movwf	?__div_to_l_+1,c
  3603  0020B8  0E00               	movlw	0
  3604  0020BA  6E03               	movwf	?__div_to_l_+2,c
  3605  0020BC  0E00               	movlw	0
  3606  0020BE  6E04               	movwf	?__div_to_l_+3,c
  3607  0020C0  0012               	return	
  3608  0020C2                     l2379:
  3609  0020C2  3406               	rlcf	__div_to_l_@f2+2,w,c
  3610  0020C4  3407               	rlcf	__div_to_l_@f2+3,w,c
  3611  0020C6  6E0B               	movwf	__div_to_l_@cntr,c
  3612  0020C8  500B               	movf	__div_to_l_@cntr,w,c
  3613  0020CA  A4D8               	btfss	status,2,c
  3614  0020CC  D009               	goto	l2385
  3615  0020CE  0E00               	movlw	0
  3616  0020D0  6E01               	movwf	?__div_to_l_,c
  3617  0020D2  0E00               	movlw	0
  3618  0020D4  6E02               	movwf	?__div_to_l_+1,c
  3619  0020D6  0E00               	movlw	0
  3620  0020D8  6E03               	movwf	?__div_to_l_+2,c
  3621  0020DA  0E00               	movlw	0
  3622  0020DC  6E04               	movwf	?__div_to_l_+3,c
  3623  0020DE  0012               	return	
  3624  0020E0                     l2385:
  3625  0020E0  8E03               	bsf	__div_to_l_@f1+2,7,c
  3626  0020E2  0EFF               	movlw	255
  3627  0020E4  1601               	andwf	__div_to_l_@f1,f,c
  3628  0020E6  0EFF               	movlw	255
  3629  0020E8  1602               	andwf	__div_to_l_@f1+1,f,c
  3630  0020EA  0EFF               	movlw	255
  3631  0020EC  1603               	andwf	__div_to_l_@f1+2,f,c
  3632  0020EE  0E00               	movlw	0
  3633  0020F0  1604               	andwf	__div_to_l_@f1+3,f,c
  3634  0020F2  8E06               	bsf	__div_to_l_@f2+2,7,c
  3635  0020F4  0EFF               	movlw	255
  3636  0020F6  1604               	andwf	__div_to_l_@f2,f,c
  3637  0020F8  0EFF               	movlw	255
  3638  0020FA  1605               	andwf	__div_to_l_@f2+1,f,c
  3639  0020FC  0EFF               	movlw	255
  3640  0020FE  1606               	andwf	__div_to_l_@f2+2,f,c
  3641  002100  0E00               	movlw	0
  3642  002102  1607               	andwf	__div_to_l_@f2+3,f,c
  3643  002104  0E00               	movlw	0
  3644  002106  6E07               	movwf	__div_to_l_@quot,c
  3645  002108  0E00               	movlw	0
  3646  00210A  6E08               	movwf	__div_to_l_@quot+1,c
  3647  00210C  0E00               	movlw	0
  3648  00210E  6E09               	movwf	__div_to_l_@quot+2,c
  3649  002110  0E00               	movlw	0
  3650  002112  6E0A               	movwf	__div_to_l_@quot+3,c
  3651  002114  0E7F               	movlw	127
  3652  002116  5E0C               	subwf	__div_to_l_@exp1,f,c
  3653  002118  500B               	movf	__div_to_l_@cntr,w,c
  3654  00211A  0FA0               	addlw	160
  3655  00211C  5E0C               	subwf	__div_to_l_@exp1,f,c
  3656  00211E  0E20               	movlw	32
  3657  002120  6E0B               	movwf	__div_to_l_@cntr,c
  3658  002122                     l2399:
  3659  002122  90D8               	bcf	status,0,c
  3660  002124  3607               	rlcf	__div_to_l_@quot,f,c
  3661  002126  3608               	rlcf	__div_to_l_@quot+1,f,c
  3662  002128  3609               	rlcf	__div_to_l_@quot+2,f,c
  3663  00212A  360A               	rlcf	__div_to_l_@quot+3,f,c
  3664  00212C  5004               	movf	__div_to_l_@f2,w,c
  3665  00212E  5C01               	subwf	__div_to_l_@f1,w,c
  3666  002130  5005               	movf	__div_to_l_@f2+1,w,c
  3667  002132  5802               	subwfb	__div_to_l_@f1+1,w,c
  3668  002134  5006               	movf	__div_to_l_@f2+2,w,c
  3669  002136  5803               	subwfb	__div_to_l_@f1+2,w,c
  3670  002138  5007               	movf	__div_to_l_@f2+3,w,c
  3671  00213A  5804               	subwfb	__div_to_l_@f1+3,w,c
  3672  00213C  A0D8               	btfss	status,0,c
  3673  00213E  D009               	goto	l2407
  3674  002140  5004               	movf	__div_to_l_@f2,w,c
  3675  002142  5E01               	subwf	__div_to_l_@f1,f,c
  3676  002144  5005               	movf	__div_to_l_@f2+1,w,c
  3677  002146  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3678  002148  5006               	movf	__div_to_l_@f2+2,w,c
  3679  00214A  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3680  00214C  5007               	movf	__div_to_l_@f2+3,w,c
  3681  00214E  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3682  002150  8007               	bsf	__div_to_l_@quot,0,c
  3683  002152                     l2407:
  3684  002152  90D8               	bcf	status,0,c
  3685  002154  3601               	rlcf	__div_to_l_@f1,f,c
  3686  002156  3602               	rlcf	__div_to_l_@f1+1,f,c
  3687  002158  3603               	rlcf	__div_to_l_@f1+2,f,c
  3688  00215A  3604               	rlcf	__div_to_l_@f1+3,f,c
  3689  00215C  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3690  00215E  D7E1               	goto	l2399
  3691  002160  AE0C               	btfss	__div_to_l_@exp1,7,c
  3692  002162  D016               	goto	l2423
  3693  002164  500C               	movf	__div_to_l_@exp1,w,c
  3694  002166  0A80               	xorlw	128
  3695  002168  0F9F               	addlw	159
  3696  00216A  B0D8               	btfsc	status,0,c
  3697  00216C  D009               	goto	l2419
  3698  00216E  0E00               	movlw	0
  3699  002170  6E01               	movwf	?__div_to_l_,c
  3700  002172  0E00               	movlw	0
  3701  002174  6E02               	movwf	?__div_to_l_+1,c
  3702  002176  0E00               	movlw	0
  3703  002178  6E03               	movwf	?__div_to_l_+2,c
  3704  00217A  0E00               	movlw	0
  3705  00217C  6E04               	movwf	?__div_to_l_+3,c
  3706  00217E  0012               	return	
  3707  002180                     l2419:
  3708  002180  90D8               	bcf	status,0,c
  3709  002182  320A               	rrcf	__div_to_l_@quot+3,f,c
  3710  002184  3209               	rrcf	__div_to_l_@quot+2,f,c
  3711  002186  3208               	rrcf	__div_to_l_@quot+1,f,c
  3712  002188  3207               	rrcf	__div_to_l_@quot,f,c
  3713  00218A  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3714  00218C  D7F9               	goto	l2419
  3715  00218E  D015               	goto	l438
  3716  002190                     l2423:
  3717  002190  0E1F               	movlw	31
  3718  002192  640C               	cpfsgt	__div_to_l_@exp1,c
  3719  002194  D00F               	goto	l2431
  3720  002196  0E00               	movlw	0
  3721  002198  6E01               	movwf	?__div_to_l_,c
  3722  00219A  0E00               	movlw	0
  3723  00219C  6E02               	movwf	?__div_to_l_+1,c
  3724  00219E  0E00               	movlw	0
  3725  0021A0  6E03               	movwf	?__div_to_l_+2,c
  3726  0021A2  0E00               	movlw	0
  3727  0021A4  6E04               	movwf	?__div_to_l_+3,c
  3728  0021A6  0012               	return	
  3729  0021A8                     l2429:
  3730  0021A8  90D8               	bcf	status,0,c
  3731  0021AA  3607               	rlcf	__div_to_l_@quot,f,c
  3732  0021AC  3608               	rlcf	__div_to_l_@quot+1,f,c
  3733  0021AE  3609               	rlcf	__div_to_l_@quot+2,f,c
  3734  0021B0  360A               	rlcf	__div_to_l_@quot+3,f,c
  3735  0021B2  060C               	decf	__div_to_l_@exp1,f,c
  3736  0021B4                     l2431:
  3737  0021B4  500C               	movf	__div_to_l_@exp1,w,c
  3738  0021B6  A4D8               	btfss	status,2,c
  3739  0021B8  D7F7               	goto	l2429
  3740  0021BA                     l438:
  3741  0021BA  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3742  0021BE  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3743  0021C2  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3744  0021C6  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3745  0021CA  0012               	return		;funcret
  3746  0021CC                     __end_of__div_to_l_:
  3747                           	opt stack 0
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           prodh	equ	0xFF4
  3753                           prodl	equ	0xFF3
  3754                           wreg	equ	0xFE8
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function ___lltoft *****************
  3763 ;; Defined at:
  3764 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  c               4    8[COMRAM] unsigned long 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  exp             1   16[COMRAM] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  3    8[COMRAM] float 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;Total ram usage:        9 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    1
  3785 ;; This function calls:
  3786 ;;		___ftpack
  3787 ;; This function is called by:
  3788 ;;		_sprintf
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text12
  3793  0029FA                     __ptext12:
  3794                           	opt stack 0
  3795  0029FA                     ___lltoft:
  3796                           	opt stack 28
  3797                           
  3798                           ;incstack = 0
  3799  0029FA  0E8E               	movlw	142
  3800  0029FC  6E11               	movwf	___lltoft@exp,c
  3801  0029FE  D006               	goto	l2609
  3802  002A00                     l2607:
  3803  002A00  90D8               	bcf	status,0,c
  3804  002A02  320C               	rrcf	___lltoft@c+3,f,c
  3805  002A04  320B               	rrcf	___lltoft@c+2,f,c
  3806  002A06  320A               	rrcf	___lltoft@c+1,f,c
  3807  002A08  3209               	rrcf	___lltoft@c,f,c
  3808  002A0A  2A11               	incf	___lltoft@exp,f,c
  3809  002A0C                     l2609:
  3810  002A0C  0E00               	movlw	0
  3811  002A0E  1409               	andwf	___lltoft@c,w,c
  3812  002A10  6E0D               	movwf	??___lltoft& (0+255),c
  3813  002A12  0E00               	movlw	0
  3814  002A14  140A               	andwf	___lltoft@c+1,w,c
  3815  002A16  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3816  002A18  0E00               	movlw	0
  3817  002A1A  140B               	andwf	___lltoft@c+2,w,c
  3818  002A1C  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3819  002A1E  0EFF               	movlw	255
  3820  002A20  140C               	andwf	___lltoft@c+3,w,c
  3821  002A22  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3822  002A24  500D               	movf	??___lltoft,w,c
  3823  002A26  100E               	iorwf	??___lltoft+1,w,c
  3824  002A28  100F               	iorwf	??___lltoft+2,w,c
  3825  002A2A  1010               	iorwf	??___lltoft+3,w,c
  3826  002A2C  A4D8               	btfss	status,2,c
  3827  002A2E  D7E8               	goto	l2607
  3828  002A30  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3829  002A34  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3830  002A38  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3831  002A3C  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3832  002A40  0E00               	movlw	0
  3833  002A42  6E05               	movwf	___ftpack@sign,c
  3834  002A44  ECC0  F012         	call	___ftpack	;wreg free
  3835  002A48  C001  F009         	movff	?___ftpack,?___lltoft
  3836  002A4C  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3837  002A50  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3838  002A54  0012               	return	
  3839  002A56                     __end_of___lltoft:
  3840                           	opt stack 0
  3841                           tblptru	equ	0xFF8
  3842                           tblptrh	equ	0xFF7
  3843                           tblptrl	equ	0xFF6
  3844                           tablat	equ	0xFF5
  3845                           prodh	equ	0xFF4
  3846                           prodl	equ	0xFF3
  3847                           wreg	equ	0xFE8
  3848                           indf2	equ	0xFDF
  3849                           postinc2	equ	0xFDE
  3850                           postdec2	equ	0xFDD
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function ___llmod *****************
  3856 ;; Defined at:
  3857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  dividend        4    0[COMRAM] unsigned long 
  3860 ;;  divisor         4    4[COMRAM] unsigned long 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  counter         1    8[COMRAM] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  4    0[COMRAM] unsigned long 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3872 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;Total ram usage:        9 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_sprintf
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text13
  3886  002934                     __ptext13:
  3887                           	opt stack 0
  3888  002934                     ___llmod:
  3889                           	opt stack 29
  3890                           
  3891                           ;incstack = 0
  3892  002934  5005               	movf	___llmod@divisor,w,c
  3893  002936  1006               	iorwf	___llmod@divisor+1,w,c
  3894  002938  1007               	iorwf	___llmod@divisor+2,w,c
  3895  00293A  1008               	iorwf	___llmod@divisor+3,w,c
  3896  00293C  B4D8               	btfsc	status,2,c
  3897  00293E  D024               	goto	l627
  3898  002940  0E01               	movlw	1
  3899  002942  6E09               	movwf	___llmod@counter,c
  3900  002944  D006               	goto	l2595
  3901  002946                     l2593:
  3902  002946  90D8               	bcf	status,0,c
  3903  002948  3605               	rlcf	___llmod@divisor,f,c
  3904  00294A  3606               	rlcf	___llmod@divisor+1,f,c
  3905  00294C  3607               	rlcf	___llmod@divisor+2,f,c
  3906  00294E  3608               	rlcf	___llmod@divisor+3,f,c
  3907  002950  2A09               	incf	___llmod@counter,f,c
  3908  002952                     l2595:
  3909  002952  AE08               	btfss	___llmod@divisor+3,7,c
  3910  002954  D7F8               	goto	l2593
  3911  002956                     l2597:
  3912  002956  5005               	movf	___llmod@divisor,w,c
  3913  002958  5C01               	subwf	___llmod@dividend,w,c
  3914  00295A  5006               	movf	___llmod@divisor+1,w,c
  3915  00295C  5802               	subwfb	___llmod@dividend+1,w,c
  3916  00295E  5007               	movf	___llmod@divisor+2,w,c
  3917  002960  5803               	subwfb	___llmod@dividend+2,w,c
  3918  002962  5008               	movf	___llmod@divisor+3,w,c
  3919  002964  5804               	subwfb	___llmod@dividend+3,w,c
  3920  002966  A0D8               	btfss	status,0,c
  3921  002968  D008               	goto	l2601
  3922  00296A  5005               	movf	___llmod@divisor,w,c
  3923  00296C  5E01               	subwf	___llmod@dividend,f,c
  3924  00296E  5006               	movf	___llmod@divisor+1,w,c
  3925  002970  5A02               	subwfb	___llmod@dividend+1,f,c
  3926  002972  5007               	movf	___llmod@divisor+2,w,c
  3927  002974  5A03               	subwfb	___llmod@dividend+2,f,c
  3928  002976  5008               	movf	___llmod@divisor+3,w,c
  3929  002978  5A04               	subwfb	___llmod@dividend+3,f,c
  3930  00297A                     l2601:
  3931  00297A  90D8               	bcf	status,0,c
  3932  00297C  3208               	rrcf	___llmod@divisor+3,f,c
  3933  00297E  3207               	rrcf	___llmod@divisor+2,f,c
  3934  002980  3206               	rrcf	___llmod@divisor+1,f,c
  3935  002982  3205               	rrcf	___llmod@divisor,f,c
  3936  002984  2E09               	decfsz	___llmod@counter,f,c
  3937  002986  D7E7               	goto	l2597
  3938  002988                     l627:
  3939  002988  C001  F001         	movff	___llmod@dividend,?___llmod
  3940  00298C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3941  002990  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3942  002994  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3943  002998  0012               	return		;funcret
  3944  00299A                     __end_of___llmod:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           wreg	equ	0xFE8
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function ___lldiv *****************
  3961 ;; Defined at:
  3962 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  dividend        4    0[COMRAM] unsigned long 
  3965 ;;  divisor         4    4[COMRAM] unsigned long 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  quotient        4    8[COMRAM] unsigned long 
  3968 ;;  counter         1   12[COMRAM] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  4    0[COMRAM] unsigned long 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:       13 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_sprintf
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text14
  3992  0027DA                     __ptext14:
  3993                           	opt stack 0
  3994  0027DA                     ___lldiv:
  3995                           	opt stack 29
  3996                           
  3997                           ;incstack = 0
  3998  0027DA  0E00               	movlw	0
  3999  0027DC  6E09               	movwf	___lldiv@quotient,c
  4000  0027DE  0E00               	movlw	0
  4001  0027E0  6E0A               	movwf	___lldiv@quotient+1,c
  4002  0027E2  0E00               	movlw	0
  4003  0027E4  6E0B               	movwf	___lldiv@quotient+2,c
  4004  0027E6  0E00               	movlw	0
  4005  0027E8  6E0C               	movwf	___lldiv@quotient+3,c
  4006  0027EA  5005               	movf	___lldiv@divisor,w,c
  4007  0027EC  1006               	iorwf	___lldiv@divisor+1,w,c
  4008  0027EE  1007               	iorwf	___lldiv@divisor+2,w,c
  4009  0027F0  1008               	iorwf	___lldiv@divisor+3,w,c
  4010  0027F2  B4D8               	btfsc	status,2,c
  4011  0027F4  D02A               	goto	l617
  4012  0027F6  0E01               	movlw	1
  4013  0027F8  6E0D               	movwf	___lldiv@counter,c
  4014  0027FA  D006               	goto	l2575
  4015  0027FC                     l2573:
  4016  0027FC  90D8               	bcf	status,0,c
  4017  0027FE  3605               	rlcf	___lldiv@divisor,f,c
  4018  002800  3606               	rlcf	___lldiv@divisor+1,f,c
  4019  002802  3607               	rlcf	___lldiv@divisor+2,f,c
  4020  002804  3608               	rlcf	___lldiv@divisor+3,f,c
  4021  002806  2A0D               	incf	___lldiv@counter,f,c
  4022  002808                     l2575:
  4023  002808  AE08               	btfss	___lldiv@divisor+3,7,c
  4024  00280A  D7F8               	goto	l2573
  4025  00280C                     l2577:
  4026  00280C  90D8               	bcf	status,0,c
  4027  00280E  3609               	rlcf	___lldiv@quotient,f,c
  4028  002810  360A               	rlcf	___lldiv@quotient+1,f,c
  4029  002812  360B               	rlcf	___lldiv@quotient+2,f,c
  4030  002814  360C               	rlcf	___lldiv@quotient+3,f,c
  4031  002816  5005               	movf	___lldiv@divisor,w,c
  4032  002818  5C01               	subwf	___lldiv@dividend,w,c
  4033  00281A  5006               	movf	___lldiv@divisor+1,w,c
  4034  00281C  5802               	subwfb	___lldiv@dividend+1,w,c
  4035  00281E  5007               	movf	___lldiv@divisor+2,w,c
  4036  002820  5803               	subwfb	___lldiv@dividend+2,w,c
  4037  002822  5008               	movf	___lldiv@divisor+3,w,c
  4038  002824  5804               	subwfb	___lldiv@dividend+3,w,c
  4039  002826  A0D8               	btfss	status,0,c
  4040  002828  D009               	goto	l2585
  4041  00282A  5005               	movf	___lldiv@divisor,w,c
  4042  00282C  5E01               	subwf	___lldiv@dividend,f,c
  4043  00282E  5006               	movf	___lldiv@divisor+1,w,c
  4044  002830  5A02               	subwfb	___lldiv@dividend+1,f,c
  4045  002832  5007               	movf	___lldiv@divisor+2,w,c
  4046  002834  5A03               	subwfb	___lldiv@dividend+2,f,c
  4047  002836  5008               	movf	___lldiv@divisor+3,w,c
  4048  002838  5A04               	subwfb	___lldiv@dividend+3,f,c
  4049  00283A  8009               	bsf	___lldiv@quotient,0,c
  4050  00283C                     l2585:
  4051  00283C  90D8               	bcf	status,0,c
  4052  00283E  3208               	rrcf	___lldiv@divisor+3,f,c
  4053  002840  3207               	rrcf	___lldiv@divisor+2,f,c
  4054  002842  3206               	rrcf	___lldiv@divisor+1,f,c
  4055  002844  3205               	rrcf	___lldiv@divisor,f,c
  4056  002846  2E0D               	decfsz	___lldiv@counter,f,c
  4057  002848  D7E1               	goto	l2577
  4058  00284A                     l617:
  4059  00284A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4060  00284E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4061  002852  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4062  002856  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4063  00285A  0012               	return		;funcret
  4064  00285C                     __end_of___lldiv:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           tblptrh	equ	0xFF7
  4068                           tblptrl	equ	0xFF6
  4069                           tablat	equ	0xFF5
  4070                           prodh	equ	0xFF4
  4071                           prodl	equ	0xFF3
  4072                           wreg	equ	0xFE8
  4073                           indf2	equ	0xFDF
  4074                           postinc2	equ	0xFDE
  4075                           postdec2	equ	0xFDD
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function ___fttol *****************
  4081 ;; Defined at:
  4082 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  f1              3   42[COMRAM] float 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  lval            4   52[COMRAM] unsigned long 
  4087 ;;  exp1            1   56[COMRAM] unsigned char 
  4088 ;;  sign1           1   51[COMRAM] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  4   42[COMRAM] long 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;Total ram usage:       15 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_sprintf
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text15
  4112  0022C0                     __ptext15:
  4113                           	opt stack 0
  4114  0022C0                     ___fttol:
  4115                           	opt stack 29
  4116                           
  4117                           ;incstack = 0
  4118  0022C0  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4119  0022C4  6A30               	clrf	(??___fttol+1)& (0+255),c
  4120  0022C6  6A31               	clrf	(??___fttol+2)& (0+255),c
  4121  0022C8  342C               	rlcf	___fttol@f1+1,w,c
  4122  0022CA  362F               	rlcf	??___fttol& (0+255),f,c
  4123  0022CC  E301               	bnc	u2671
  4124  0022CE  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4125  0022D0                     u2671:
  4126  0022D0  502F               	movf	??___fttol,w,c
  4127  0022D2  6E39               	movwf	___fttol@exp1,c
  4128  0022D4  5039               	movf	___fttol@exp1,w,c
  4129  0022D6  A4D8               	btfss	status,2,c
  4130  0022D8  D009               	goto	l2527
  4131  0022DA  0E00               	movlw	0
  4132  0022DC  6E2B               	movwf	?___fttol,c
  4133  0022DE  0E00               	movlw	0
  4134  0022E0  6E2C               	movwf	?___fttol+1,c
  4135  0022E2  0E00               	movlw	0
  4136  0022E4  6E2D               	movwf	?___fttol+2,c
  4137  0022E6  0E00               	movlw	0
  4138  0022E8  6E2E               	movwf	?___fttol+3,c
  4139  0022EA  0012               	return	
  4140  0022EC                     l2527:
  4141  0022EC  0E17               	movlw	23
  4142  0022EE  6E2F               	movwf	??___fttol& (0+255),c
  4143  0022F0  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4144  0022F4  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4145  0022F8  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4146  0022FC  282F               	incf	??___fttol,w,c
  4147  0022FE  6E33               	movwf	(??___fttol+4)& (0+255),c
  4148  002300  D004               	goto	u2690
  4149  002302                     u2695:
  4150  002302  90D8               	bcf	status,0,c
  4151  002304  3232               	rrcf	??___fttol+3,f,c
  4152  002306  3231               	rrcf	??___fttol+2,f,c
  4153  002308  3230               	rrcf	??___fttol+1,f,c
  4154  00230A                     u2690:
  4155  00230A  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4156  00230C  D7FA               	goto	u2695
  4157  00230E  5030               	movf	??___fttol+1,w,c
  4158  002310  6E34               	movwf	___fttol@sign1,c
  4159  002312  8E2C               	bsf	___fttol@f1+1,7,c
  4160  002314  0EFF               	movlw	255
  4161  002316  162B               	andwf	___fttol@f1,f,c
  4162  002318  0EFF               	movlw	255
  4163  00231A  162C               	andwf	___fttol@f1+1,f,c
  4164  00231C  0E00               	movlw	0
  4165  00231E  162D               	andwf	___fttol@f1+2,f,c
  4166  002320  502B               	movf	___fttol@f1,w,c
  4167  002322  6E35               	movwf	___fttol@lval,c
  4168  002324  502C               	movf	___fttol@f1+1,w,c
  4169  002326  6E36               	movwf	___fttol@lval+1,c
  4170  002328  502D               	movf	___fttol@f1+2,w,c
  4171  00232A  6E37               	movwf	___fttol@lval+2,c
  4172  00232C  6A38               	clrf	___fttol@lval+3,c
  4173  00232E  0E8E               	movlw	142
  4174  002330  5E39               	subwf	___fttol@exp1,f,c
  4175  002332  AE39               	btfss	___fttol@exp1,7,c
  4176  002334  D016               	goto	l2549
  4177  002336  5039               	movf	___fttol@exp1,w,c
  4178  002338  0A80               	xorlw	128
  4179  00233A  0F8F               	addlw	143
  4180  00233C  B0D8               	btfsc	status,0,c
  4181  00233E  D009               	goto	l2545
  4182  002340  0E00               	movlw	0
  4183  002342  6E2B               	movwf	?___fttol,c
  4184  002344  0E00               	movlw	0
  4185  002346  6E2C               	movwf	?___fttol+1,c
  4186  002348  0E00               	movlw	0
  4187  00234A  6E2D               	movwf	?___fttol+2,c
  4188  00234C  0E00               	movlw	0
  4189  00234E  6E2E               	movwf	?___fttol+3,c
  4190  002350  0012               	return	
  4191  002352                     l2545:
  4192  002352  90D8               	bcf	status,0,c
  4193  002354  3238               	rrcf	___fttol@lval+3,f,c
  4194  002356  3237               	rrcf	___fttol@lval+2,f,c
  4195  002358  3236               	rrcf	___fttol@lval+1,f,c
  4196  00235A  3235               	rrcf	___fttol@lval,f,c
  4197  00235C  3E39               	incfsz	___fttol@exp1,f,c
  4198  00235E  D7F9               	goto	l2545
  4199  002360  D015               	goto	l2559
  4200  002362                     l2549:
  4201  002362  0E17               	movlw	23
  4202  002364  6439               	cpfsgt	___fttol@exp1,c
  4203  002366  D00F               	goto	l2557
  4204  002368  0E00               	movlw	0
  4205  00236A  6E2B               	movwf	?___fttol,c
  4206  00236C  0E00               	movlw	0
  4207  00236E  6E2C               	movwf	?___fttol+1,c
  4208  002370  0E00               	movlw	0
  4209  002372  6E2D               	movwf	?___fttol+2,c
  4210  002374  0E00               	movlw	0
  4211  002376  6E2E               	movwf	?___fttol+3,c
  4212  002378  0012               	return	
  4213  00237A                     l2555:
  4214  00237A  90D8               	bcf	status,0,c
  4215  00237C  3635               	rlcf	___fttol@lval,f,c
  4216  00237E  3636               	rlcf	___fttol@lval+1,f,c
  4217  002380  3637               	rlcf	___fttol@lval+2,f,c
  4218  002382  3638               	rlcf	___fttol@lval+3,f,c
  4219  002384  0639               	decf	___fttol@exp1,f,c
  4220  002386                     l2557:
  4221  002386  5039               	movf	___fttol@exp1,w,c
  4222  002388  A4D8               	btfss	status,2,c
  4223  00238A  D7F7               	goto	l2555
  4224  00238C                     l2559:
  4225  00238C  5034               	movf	___fttol@sign1,w,c
  4226  00238E  B4D8               	btfsc	status,2,c
  4227  002390  D008               	goto	l2563
  4228  002392  1E38               	comf	___fttol@lval+3,f,c
  4229  002394  1E37               	comf	___fttol@lval+2,f,c
  4230  002396  1E36               	comf	___fttol@lval+1,f,c
  4231  002398  6C35               	negf	___fttol@lval,c
  4232  00239A  0E00               	movlw	0
  4233  00239C  2236               	addwfc	___fttol@lval+1,f,c
  4234  00239E  2237               	addwfc	___fttol@lval+2,f,c
  4235  0023A0  2238               	addwfc	___fttol@lval+3,f,c
  4236  0023A2                     l2563:
  4237  0023A2  C035  F02B         	movff	___fttol@lval,?___fttol
  4238  0023A6  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4239  0023AA  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4240  0023AE  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4241  0023B2  0012               	return	
  4242  0023B4                     __end_of___fttol:
  4243                           	opt stack 0
  4244                           tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           prodh	equ	0xFF4
  4249                           prodl	equ	0xFF3
  4250                           wreg	equ	0xFE8
  4251                           indf2	equ	0xFDF
  4252                           postinc2	equ	0xFDE
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function ___ftsub *****************
  4259 ;; Defined at:
  4260 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftsub.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  f1              3   57[COMRAM] float 
  4263 ;;  f2              3   60[COMRAM] float 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  3   57[COMRAM] float 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4275 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;Total ram usage:        6 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    2
  4282 ;; This function calls:
  4283 ;;		___ftadd
  4284 ;; This function is called by:
  4285 ;;		_sprintf
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text16
  4290  002A56                     __ptext16:
  4291                           	opt stack 0
  4292  002A56                     ___ftsub:
  4293                           	opt stack 27
  4294                           
  4295                           ;incstack = 0
  4296  002A56  503D               	movf	___ftsub@f2,w,c
  4297  002A58  103E               	iorwf	___ftsub@f2+1,w,c
  4298  002A5A  103F               	iorwf	___ftsub@f2+2,w,c
  4299  002A5C  B4D8               	btfsc	status,2,c
  4300  002A5E  D006               	goto	l2483
  4301  002A60  0E00               	movlw	0
  4302  002A62  1A3D               	xorwf	___ftsub@f2,f,c
  4303  002A64  0E00               	movlw	0
  4304  002A66  1A3E               	xorwf	___ftsub@f2+1,f,c
  4305  002A68  0E80               	movlw	128
  4306  002A6A  1A3F               	xorwf	___ftsub@f2+2,f,c
  4307  002A6C                     l2483:
  4308  002A6C  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4309  002A70  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4310  002A74  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4311  002A78  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4312  002A7C  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4313  002A80  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4314  002A84  ECE3  F00E         	call	___ftadd	;wreg free
  4315  002A88  C02E  F03A         	movff	?___ftadd,?___ftsub
  4316  002A8C  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4317  002A90  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4318  002A94  0012               	return	
  4319  002A96                     __end_of___ftsub:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           wreg	equ	0xFE8
  4328                           indf2	equ	0xFDF
  4329                           postinc2	equ	0xFDE
  4330                           postdec2	equ	0xFDD
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function ___ftadd *****************
  4336 ;; Defined at:
  4337 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  f1              3   45[COMRAM] float 
  4340 ;;  f2              3   48[COMRAM] float 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  exp1            1   56[COMRAM] unsigned char 
  4343 ;;  exp2            1   55[COMRAM] unsigned char 
  4344 ;;  sign            1   54[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  3   45[COMRAM] float 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:       12 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		___ftpack
  4363 ;; This function is called by:
  4364 ;;		_sprintf
  4365 ;;		___ftsub
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text17
  4370  001DC6                     __ptext17:
  4371                           	opt stack 0
  4372  001DC6                     ___ftadd:
  4373                           	opt stack 27
  4374                           
  4375                           ;incstack = 0
  4376  001DC6  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4377  001DCA  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4378  001DCC  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4379  001DCE  342F               	rlcf	___ftadd@f1+1,w,c
  4380  001DD0  3634               	rlcf	??___ftadd& (0+255),f,c
  4381  001DD2  E301               	bnc	u1701
  4382  001DD4  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4383  001DD6                     u1701:
  4384  001DD6  5034               	movf	??___ftadd,w,c
  4385  001DD8  6E39               	movwf	___ftadd@exp1,c
  4386  001DDA  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4387  001DDE  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4388  001DE0  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4389  001DE2  3432               	rlcf	___ftadd@f2+1,w,c
  4390  001DE4  3634               	rlcf	??___ftadd& (0+255),f,c
  4391  001DE6  E301               	bnc	u1711
  4392  001DE8  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4393  001DEA                     u1711:
  4394  001DEA  5034               	movf	??___ftadd,w,c
  4395  001DEC  6E38               	movwf	___ftadd@exp2,c
  4396  001DEE  5039               	movf	___ftadd@exp1,w,c
  4397  001DF0  B4D8               	btfsc	status,2,c
  4398  001DF2  D00B               	goto	l493
  4399  001DF4  5038               	movf	___ftadd@exp2,w,c
  4400  001DF6  5C39               	subwf	___ftadd@exp1,w,c
  4401  001DF8  B0D8               	btfsc	status,0,c
  4402  001DFA  D00E               	goto	l1949
  4403  001DFC  5039               	movf	___ftadd@exp1,w,c
  4404  001DFE  0800               	sublw	0
  4405  001E00  2438               	addwf	___ftadd@exp2,w,c
  4406  001E02  6E34               	movwf	??___ftadd& (0+255),c
  4407  001E04  0E18               	movlw	24
  4408  001E06  6434               	cpfsgt	??___ftadd,c
  4409  001E08  D007               	goto	l1949
  4410  001E0A                     l493:
  4411  001E0A  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4412  001E0E  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4413  001E12  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4414  001E16  0012               	return	
  4415  001E18                     l1949:
  4416  001E18  5038               	movf	___ftadd@exp2,w,c
  4417  001E1A  B4D8               	btfsc	status,2,c
  4418  001E1C  D00B               	goto	l497
  4419  001E1E  5039               	movf	___ftadd@exp1,w,c
  4420  001E20  5C38               	subwf	___ftadd@exp2,w,c
  4421  001E22  B0D8               	btfsc	status,0,c
  4422  001E24  D00E               	goto	l1955
  4423  001E26  5038               	movf	___ftadd@exp2,w,c
  4424  001E28  0800               	sublw	0
  4425  001E2A  2439               	addwf	___ftadd@exp1,w,c
  4426  001E2C  6E34               	movwf	??___ftadd& (0+255),c
  4427  001E2E  0E18               	movlw	24
  4428  001E30  6434               	cpfsgt	??___ftadd,c
  4429  001E32  D007               	goto	l1955
  4430  001E34                     l497:
  4431  001E34  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4432  001E38  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4433  001E3C  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4434  001E40  0012               	return	
  4435  001E42                     l1955:
  4436  001E42  0E06               	movlw	6
  4437  001E44  6E37               	movwf	___ftadd@sign,c
  4438  001E46  BE30               	btfsc	___ftadd@f1+2,7,c
  4439  001E48  8E37               	bsf	___ftadd@sign,7,c
  4440  001E4A  BE33               	btfsc	___ftadd@f2+2,7,c
  4441  001E4C  8C37               	bsf	___ftadd@sign,6,c
  4442  001E4E  8E2F               	bsf	___ftadd@f1+1,7,c
  4443  001E50  0EFF               	movlw	255
  4444  001E52  162E               	andwf	___ftadd@f1,f,c
  4445  001E54  0EFF               	movlw	255
  4446  001E56  162F               	andwf	___ftadd@f1+1,f,c
  4447  001E58  0E00               	movlw	0
  4448  001E5A  1630               	andwf	___ftadd@f1+2,f,c
  4449  001E5C  8E32               	bsf	___ftadd@f2+1,7,c
  4450  001E5E  0EFF               	movlw	255
  4451  001E60  1631               	andwf	___ftadd@f2,f,c
  4452  001E62  0EFF               	movlw	255
  4453  001E64  1632               	andwf	___ftadd@f2+1,f,c
  4454  001E66  0E00               	movlw	0
  4455  001E68  1633               	andwf	___ftadd@f2+2,f,c
  4456  001E6A  5038               	movf	___ftadd@exp2,w,c
  4457  001E6C  5C39               	subwf	___ftadd@exp1,w,c
  4458  001E6E  B0D8               	btfsc	status,0,c
  4459  001E70  D01B               	goto	l1981
  4460  001E72                     l1971:
  4461  001E72  90D8               	bcf	status,0,c
  4462  001E74  3631               	rlcf	___ftadd@f2,f,c
  4463  001E76  3632               	rlcf	___ftadd@f2+1,f,c
  4464  001E78  3633               	rlcf	___ftadd@f2+2,f,c
  4465  001E7A  0638               	decf	___ftadd@exp2,f,c
  4466  001E7C  5039               	movf	___ftadd@exp1,w,c
  4467  001E7E  1838               	xorwf	___ftadd@exp2,w,c
  4468  001E80  B4D8               	btfsc	status,2,c
  4469  001E82  D00D               	goto	l1979
  4470  001E84  0637               	decf	___ftadd@sign,f,c
  4471  001E86  C037  F034         	movff	___ftadd@sign,??___ftadd
  4472  001E8A  0E07               	movlw	7
  4473  001E8C  1634               	andwf	??___ftadd,f,c
  4474  001E8E  B4D8               	btfsc	status,2,c
  4475  001E90  D006               	goto	l1979
  4476  001E92  D7EF               	goto	l1971
  4477  001E94                     l1977:
  4478  001E94  90D8               	bcf	status,0,c
  4479  001E96  3230               	rrcf	___ftadd@f1+2,f,c
  4480  001E98  322F               	rrcf	___ftadd@f1+1,f,c
  4481  001E9A  322E               	rrcf	___ftadd@f1,f,c
  4482  001E9C  2A39               	incf	___ftadd@exp1,f,c
  4483  001E9E                     l1979:
  4484  001E9E  5038               	movf	___ftadd@exp2,w,c
  4485  001EA0  1839               	xorwf	___ftadd@exp1,w,c
  4486  001EA2  B4D8               	btfsc	status,2,c
  4487  001EA4  D01F               	goto	l508
  4488  001EA6  D7F6               	goto	l1977
  4489  001EA8                     l1981:
  4490  001EA8  5039               	movf	___ftadd@exp1,w,c
  4491  001EAA  5C38               	subwf	___ftadd@exp2,w,c
  4492  001EAC  B0D8               	btfsc	status,0,c
  4493  001EAE  D01A               	goto	l508
  4494  001EB0                     l1983:
  4495  001EB0  90D8               	bcf	status,0,c
  4496  001EB2  362E               	rlcf	___ftadd@f1,f,c
  4497  001EB4  362F               	rlcf	___ftadd@f1+1,f,c
  4498  001EB6  3630               	rlcf	___ftadd@f1+2,f,c
  4499  001EB8  0639               	decf	___ftadd@exp1,f,c
  4500  001EBA  5039               	movf	___ftadd@exp1,w,c
  4501  001EBC  1838               	xorwf	___ftadd@exp2,w,c
  4502  001EBE  B4D8               	btfsc	status,2,c
  4503  001EC0  D00D               	goto	l1991
  4504  001EC2  0637               	decf	___ftadd@sign,f,c
  4505  001EC4  C037  F034         	movff	___ftadd@sign,??___ftadd
  4506  001EC8  0E07               	movlw	7
  4507  001ECA  1634               	andwf	??___ftadd,f,c
  4508  001ECC  B4D8               	btfsc	status,2,c
  4509  001ECE  D006               	goto	l1991
  4510  001ED0  D7EF               	goto	l1983
  4511  001ED2                     l1989:
  4512  001ED2  90D8               	bcf	status,0,c
  4513  001ED4  3233               	rrcf	___ftadd@f2+2,f,c
  4514  001ED6  3232               	rrcf	___ftadd@f2+1,f,c
  4515  001ED8  3231               	rrcf	___ftadd@f2,f,c
  4516  001EDA  2A38               	incf	___ftadd@exp2,f,c
  4517  001EDC                     l1991:
  4518  001EDC  5038               	movf	___ftadd@exp2,w,c
  4519  001EDE  1839               	xorwf	___ftadd@exp1,w,c
  4520  001EE0  A4D8               	btfss	status,2,c
  4521  001EE2  D7F7               	goto	l1989
  4522  001EE4                     l508:
  4523  001EE4  AE37               	btfss	___ftadd@sign,7,c
  4524  001EE6  D00C               	goto	l517
  4525  001EE8  0EFF               	movlw	255
  4526  001EEA  1A2E               	xorwf	___ftadd@f1,f,c
  4527  001EEC  0EFF               	movlw	255
  4528  001EEE  1A2F               	xorwf	___ftadd@f1+1,f,c
  4529  001EF0  0EFF               	movlw	255
  4530  001EF2  1A30               	xorwf	___ftadd@f1+2,f,c
  4531  001EF4  0E01               	movlw	1
  4532  001EF6  262E               	addwf	___ftadd@f1,f,c
  4533  001EF8  0E00               	movlw	0
  4534  001EFA  222F               	addwfc	___ftadd@f1+1,f,c
  4535  001EFC  0E00               	movlw	0
  4536  001EFE  2230               	addwfc	___ftadd@f1+2,f,c
  4537  001F00                     l517:
  4538  001F00  AC37               	btfss	___ftadd@sign,6,c
  4539  001F02  D00C               	goto	l1997
  4540  001F04  0EFF               	movlw	255
  4541  001F06  1A31               	xorwf	___ftadd@f2,f,c
  4542  001F08  0EFF               	movlw	255
  4543  001F0A  1A32               	xorwf	___ftadd@f2+1,f,c
  4544  001F0C  0EFF               	movlw	255
  4545  001F0E  1A33               	xorwf	___ftadd@f2+2,f,c
  4546  001F10  0E01               	movlw	1
  4547  001F12  2631               	addwf	___ftadd@f2,f,c
  4548  001F14  0E00               	movlw	0
  4549  001F16  2232               	addwfc	___ftadd@f2+1,f,c
  4550  001F18  0E00               	movlw	0
  4551  001F1A  2233               	addwfc	___ftadd@f2+2,f,c
  4552  001F1C                     l1997:
  4553  001F1C  0E00               	movlw	0
  4554  001F1E  6E37               	movwf	___ftadd@sign,c
  4555  001F20  502E               	movf	___ftadd@f1,w,c
  4556  001F22  2631               	addwf	___ftadd@f2,f,c
  4557  001F24  502F               	movf	___ftadd@f1+1,w,c
  4558  001F26  2232               	addwfc	___ftadd@f2+1,f,c
  4559  001F28  5030               	movf	___ftadd@f1+2,w,c
  4560  001F2A  2233               	addwfc	___ftadd@f2+2,f,c
  4561  001F2C  AE33               	btfss	___ftadd@f2+2,7,c
  4562  001F2E  D00E               	goto	l2007
  4563  001F30  0EFF               	movlw	255
  4564  001F32  1A31               	xorwf	___ftadd@f2,f,c
  4565  001F34  0EFF               	movlw	255
  4566  001F36  1A32               	xorwf	___ftadd@f2+1,f,c
  4567  001F38  0EFF               	movlw	255
  4568  001F3A  1A33               	xorwf	___ftadd@f2+2,f,c
  4569  001F3C  0E01               	movlw	1
  4570  001F3E  2631               	addwf	___ftadd@f2,f,c
  4571  001F40  0E00               	movlw	0
  4572  001F42  2232               	addwfc	___ftadd@f2+1,f,c
  4573  001F44  0E00               	movlw	0
  4574  001F46  2233               	addwfc	___ftadd@f2+2,f,c
  4575  001F48  0E01               	movlw	1
  4576  001F4A  6E37               	movwf	___ftadd@sign,c
  4577  001F4C                     l2007:
  4578  001F4C  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4579  001F50  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4580  001F54  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4581  001F58  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4582  001F5C  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4583  001F60  ECC0  F012         	call	___ftpack	;wreg free
  4584  001F64  C001  F02E         	movff	?___ftpack,?___ftadd
  4585  001F68  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4586  001F6C  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4587  001F70  0012               	return	
  4588  001F72                     __end_of___ftadd:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           wreg	equ	0xFE8
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function ___ftneg *****************
  4605 ;; Defined at:
  4606 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  f1              3    0[COMRAM] float 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  3    0[COMRAM] float 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;Total ram usage:        3 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_sprintf
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text18
  4634  002B9C                     __ptext18:
  4635                           	opt stack 0
  4636  002B9C                     ___ftneg:
  4637                           	opt stack 29
  4638                           
  4639                           ;incstack = 0
  4640  002B9C  5001               	movf	___ftneg@f1,w,c
  4641  002B9E  1002               	iorwf	___ftneg@f1+1,w,c
  4642  002BA0  1003               	iorwf	___ftneg@f1+2,w,c
  4643  002BA2  B4D8               	btfsc	status,2,c
  4644  002BA4  D006               	goto	l567
  4645  002BA6  0E00               	movlw	0
  4646  002BA8  1A01               	xorwf	___ftneg@f1,f,c
  4647  002BAA  0E00               	movlw	0
  4648  002BAC  1A02               	xorwf	___ftneg@f1+1,f,c
  4649  002BAE  0E80               	movlw	128
  4650  002BB0  1A03               	xorwf	___ftneg@f1+2,f,c
  4651  002BB2                     l567:
  4652  002BB2  C001  F001         	movff	___ftneg@f1,?___ftneg
  4653  002BB6  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4654  002BBA  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4655  002BBE  0012               	return		;funcret
  4656  002BC0                     __end_of___ftneg:
  4657                           	opt stack 0
  4658                           tblptru	equ	0xFF8
  4659                           tblptrh	equ	0xFF7
  4660                           tblptrl	equ	0xFF6
  4661                           tablat	equ	0xFF5
  4662                           prodh	equ	0xFF4
  4663                           prodl	equ	0xFF3
  4664                           wreg	equ	0xFE8
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672 ;; *************** function ___ftge *****************
  4673 ;; Defined at:
  4674 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  ff1             3    0[COMRAM] float 
  4677 ;;  ff2             3    3[COMRAM] float 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        9 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_sprintf
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text19
  4703  0026C6                     __ptext19:
  4704                           	opt stack 0
  4705  0026C6                     ___ftge:
  4706                           	opt stack 29
  4707                           
  4708                           ;incstack = 0
  4709  0026C6  AE03               	btfss	___ftge@ff1+2,7,c
  4710  0026C8  D016               	goto	l2503
  4711  0026CA  C001  F007         	movff	___ftge@ff1,??___ftge
  4712  0026CE  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4713  0026D2  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4714  0026D6  1E07               	comf	??___ftge,f,c
  4715  0026D8  1E08               	comf	??___ftge+1,f,c
  4716  0026DA  1E09               	comf	??___ftge+2,f,c
  4717  0026DC  2A07               	incf	??___ftge,f,c
  4718  0026DE  0E00               	movlw	0
  4719  0026E0  2208               	addwfc	??___ftge+1,f,c
  4720  0026E2  2209               	addwfc	??___ftge+2,f,c
  4721  0026E4  0E00               	movlw	0
  4722  0026E6  2407               	addwf	??___ftge,w,c
  4723  0026E8  6E01               	movwf	___ftge@ff1,c
  4724  0026EA  0E00               	movlw	0
  4725  0026EC  2008               	addwfc	??___ftge+1,w,c
  4726  0026EE  6E02               	movwf	___ftge@ff1+1,c
  4727  0026F0  0E80               	movlw	128
  4728  0026F2  2009               	addwfc	??___ftge+2,w,c
  4729  0026F4  6E03               	movwf	___ftge@ff1+2,c
  4730  0026F6                     l2503:
  4731  0026F6  AE06               	btfss	___ftge@ff2+2,7,c
  4732  0026F8  D016               	goto	l2507
  4733  0026FA  C004  F007         	movff	___ftge@ff2,??___ftge
  4734  0026FE  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4735  002702  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4736  002706  1E07               	comf	??___ftge,f,c
  4737  002708  1E08               	comf	??___ftge+1,f,c
  4738  00270A  1E09               	comf	??___ftge+2,f,c
  4739  00270C  2A07               	incf	??___ftge,f,c
  4740  00270E  0E00               	movlw	0
  4741  002710  2208               	addwfc	??___ftge+1,f,c
  4742  002712  2209               	addwfc	??___ftge+2,f,c
  4743  002714  0E00               	movlw	0
  4744  002716  2407               	addwf	??___ftge,w,c
  4745  002718  6E04               	movwf	___ftge@ff2,c
  4746  00271A  0E00               	movlw	0
  4747  00271C  2008               	addwfc	??___ftge+1,w,c
  4748  00271E  6E05               	movwf	___ftge@ff2+1,c
  4749  002720  0E80               	movlw	128
  4750  002722  2009               	addwfc	??___ftge+2,w,c
  4751  002724  6E06               	movwf	___ftge@ff2+2,c
  4752  002726                     l2507:
  4753  002726  0E00               	movlw	0
  4754  002728  1A01               	xorwf	___ftge@ff1,f,c
  4755  00272A  0E00               	movlw	0
  4756  00272C  1A02               	xorwf	___ftge@ff1+1,f,c
  4757  00272E  0E80               	movlw	128
  4758  002730  1A03               	xorwf	___ftge@ff1+2,f,c
  4759  002732  0E00               	movlw	0
  4760  002734  1A04               	xorwf	___ftge@ff2,f,c
  4761  002736  0E00               	movlw	0
  4762  002738  1A05               	xorwf	___ftge@ff2+1,f,c
  4763  00273A  0E80               	movlw	128
  4764  00273C  1A06               	xorwf	___ftge@ff2+2,f,c
  4765  00273E  5004               	movf	___ftge@ff2,w,c
  4766  002740  5C01               	subwf	___ftge@ff1,w,c
  4767  002742  5005               	movf	___ftge@ff2+1,w,c
  4768  002744  5802               	subwfb	___ftge@ff1+1,w,c
  4769  002746  5006               	movf	___ftge@ff2+2,w,c
  4770  002748  5803               	subwfb	___ftge@ff1+2,w,c
  4771  00274A  B0D8               	btfsc	status,0,c
  4772  00274C  D002               	goto	l2513
  4773  00274E  90D8               	bcf	status,0,c
  4774  002750  0012               	return	
  4775  002752                     l2513:
  4776  002752  80D8               	bsf	status,0,c
  4777  002754  0012               	return	
  4778  002756                     __end_of___ftge:
  4779                           	opt stack 0
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           prodh	equ	0xFF4
  4785                           prodl	equ	0xFF3
  4786                           wreg	equ	0xFE8
  4787                           indf2	equ	0xFDF
  4788                           postinc2	equ	0xFDE
  4789                           postdec2	equ	0xFDD
  4790                           fsr2h	equ	0xFDA
  4791                           fsr2l	equ	0xFD9
  4792                           status	equ	0xFD8
  4793                           
  4794 ;; *************** function _readValues *****************
  4795 ;; Defined at:
  4796 ;;		line 64 in file "dht22.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  sensor_data     2   27[COMRAM] PTR struct .
  4799 ;;		 -> main@sensor_values(8), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  i               2   37[COMRAM] int 
  4802 ;;  reading         5   32[COMRAM] unsigned char [5]
  4803 ;;  status          1   31[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;Total ram usage:       12 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    2
  4820 ;; This function calls:
  4821 ;;		___awtoft
  4822 ;;		___ftdiv
  4823 ;;		_dht22_inizialize
  4824 ;;		_dht22_response
  4825 ;;		_read_data
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text20
  4832  0023B4                     __ptext20:
  4833                           	opt stack 0
  4834  0023B4                     _readValues:
  4835                           	opt stack 28
  4836                           
  4837                           ;dht22.c: 66: uint8_t status;
  4838                           ;dht22.c: 67: uint8_t reading[5];
  4839                           ;dht22.c: 68: dht22_inizialize();
  4840                           
  4841                           ;incstack = 0
  4842  0023B4  ECF2  F015         	call	_dht22_inizialize	;wreg free
  4843                           
  4844                           ;dht22.c: 69: if(dht22_response())
  4845  0023B8  ECA4  F015         	call	_dht22_response	;wreg free
  4846  0023BC  0900               	iorlw	0
  4847  0023BE  B4D8               	btfsc	status,2,c
  4848  0023C0  D069               	goto	l2653
  4849                           
  4850                           ;dht22.c: 70: {
  4851                           ;dht22.c: 71: for(int i =0; i < 5;i++)
  4852  0023C2  0E00               	movlw	0
  4853  0023C4  6E27               	movwf	readValues@i+1,c
  4854  0023C6  0E00               	movlw	0
  4855  0023C8  6E26               	movwf	readValues@i,c
  4856  0023CA                     l2639:
  4857  0023CA  BE27               	btfsc	readValues@i+1,7,c
  4858  0023CC  D006               	goto	l2643
  4859  0023CE  5027               	movf	readValues@i+1,w,c
  4860  0023D0  E110               	bnz	l2649
  4861  0023D2  0E05               	movlw	5
  4862  0023D4  5C26               	subwf	readValues@i,w,c
  4863  0023D6  B0D8               	btfsc	status,0,c
  4864  0023D8  D00C               	goto	l2649
  4865  0023DA                     l2643:
  4866                           
  4867                           ;dht22.c: 72: reading[i]=read_data();
  4868  0023DA  0E21               	movlw	low readValues@reading
  4869  0023DC  2426               	addwf	readValues@i,w,c
  4870  0023DE  6ED9               	movwf	fsr2l,c
  4871  0023E0  0E00               	movlw	high readValues@reading
  4872  0023E2  2027               	addwfc	readValues@i+1,w,c
  4873  0023E4  6EDA               	movwf	fsr2h,c
  4874  0023E6  EC66  F014         	call	_read_data	;wreg free
  4875  0023EA  6EDF               	movwf	indf2,c
  4876  0023EC  4A26               	infsnz	readValues@i,f,c
  4877  0023EE  2A27               	incf	readValues@i+1,f,c
  4878  0023F0  D7EC               	goto	l2639
  4879  0023F2                     l2649:
  4880                           
  4881                           ;dht22.c: 73: sensor_data->humidity = ((reading[0] << 8) | reading[1])/10.0;
  4882  0023F2  5022               	movf	readValues@reading+1,w,c
  4883  0023F4  C021  F01E         	movff	readValues@reading,??_readValues
  4884  0023F8  6A1F               	clrf	(??_readValues+1)& (0+255),c
  4885  0023FA  C01E  F01F         	movff	??_readValues,??_readValues+1
  4886  0023FE  6A1E               	clrf	??_readValues,c
  4887  002400  101E               	iorwf	??_readValues,w,c
  4888  002402  6E09               	movwf	___awtoft@c,c
  4889  002404  501F               	movf	??_readValues+1,w,c
  4890  002406  6E0A               	movwf	___awtoft@c+1,c
  4891  002408  EC88  F015         	call	___awtoft	;wreg free
  4892  00240C  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  4893  002410  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  4894  002414  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  4895  002418  0E00               	movlw	0
  4896  00241A  6E10               	movwf	___ftdiv@f2,c
  4897  00241C  0E20               	movlw	32
  4898  00241E  6E11               	movwf	___ftdiv@f2+1,c
  4899  002420  0E41               	movlw	65
  4900  002422  6E12               	movwf	___ftdiv@f2+2,c
  4901  002424  EC4D  F012         	call	___ftdiv	;wreg free
  4902  002428  EE20 F005          	lfsr	2,5
  4903  00242C  501C               	movf	readValues@sensor_data,w,c
  4904  00242E  26D9               	addwf	fsr2l,f,c
  4905  002430  501D               	movf	readValues@sensor_data+1,w,c
  4906  002432  22DA               	addwfc	fsr2h,f,c
  4907  002434  C00D  FFDE         	movff	?___ftdiv,postinc2
  4908  002438  C00E  FFDE         	movff	?___ftdiv+1,postinc2
  4909  00243C  C00F  FFDE         	movff	?___ftdiv+2,postinc2
  4910                           
  4911                           ;dht22.c: 74: sensor_data->temperature = ((reading[2] << 8) | reading[3])/10.0;
  4912  002440  5024               	movf	readValues@reading+3,w,c
  4913  002442  C023  F01E         	movff	readValues@reading+2,??_readValues
  4914  002446  6A1F               	clrf	(??_readValues+1)& (0+255),c
  4915  002448  C01E  F01F         	movff	??_readValues,??_readValues+1
  4916  00244C  6A1E               	clrf	??_readValues,c
  4917  00244E  101E               	iorwf	??_readValues,w,c
  4918  002450  6E09               	movwf	___awtoft@c,c
  4919  002452  501F               	movf	??_readValues+1,w,c
  4920  002454  6E0A               	movwf	___awtoft@c+1,c
  4921  002456  EC88  F015         	call	___awtoft	;wreg free
  4922  00245A  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  4923  00245E  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  4924  002462  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  4925  002466  0E00               	movlw	0
  4926  002468  6E10               	movwf	___ftdiv@f2,c
  4927  00246A  0E20               	movlw	32
  4928  00246C  6E11               	movwf	___ftdiv@f2+1,c
  4929  00246E  0E41               	movlw	65
  4930  002470  6E12               	movwf	___ftdiv@f2+2,c
  4931  002472  EC4D  F012         	call	___ftdiv	;wreg free
  4932  002476  EE20 F002          	lfsr	2,2
  4933  00247A  501C               	movf	readValues@sensor_data,w,c
  4934  00247C  26D9               	addwf	fsr2l,f,c
  4935  00247E  501D               	movf	readValues@sensor_data+1,w,c
  4936  002480  22DA               	addwfc	fsr2h,f,c
  4937  002482  C00D  FFDE         	movff	?___ftdiv,postinc2
  4938  002486  C00E  FFDE         	movff	?___ftdiv+1,postinc2
  4939  00248A  C00F  FFDE         	movff	?___ftdiv+2,postinc2
  4940                           
  4941                           ;dht22.c: 75: status=1;
  4942  00248E  0E01               	movlw	1
  4943  002490  6E20               	movwf	readValues@status,c
  4944                           
  4945                           ;dht22.c: 76: }
  4946  002492  0012               	return	
  4947  002494                     l2653:
  4948                           
  4949                           ;dht22.c: 77: else
  4950                           ;dht22.c: 78: status=0;
  4951  002494  0E00               	movlw	0
  4952  002496  6E20               	movwf	readValues@status,c
  4953  002498  0012               	return	
  4954  00249A                     __end_of_readValues:
  4955                           	opt stack 0
  4956                           tblptru	equ	0xFF8
  4957                           tblptrh	equ	0xFF7
  4958                           tblptrl	equ	0xFF6
  4959                           tablat	equ	0xFF5
  4960                           prodh	equ	0xFF4
  4961                           prodl	equ	0xFF3
  4962                           wreg	equ	0xFE8
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _read_data *****************
  4971 ;; Defined at:
  4972 ;;		line 39 in file "dht22.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  j               1    3[COMRAM] unsigned char 
  4977 ;;  i               1    2[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;Total ram usage:        4 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_readValues
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text21
  5001  0028CC                     __ptext21:
  5002                           	opt stack 0
  5003  0028CC                     _read_data:
  5004                           	opt stack 29
  5005                           
  5006                           ;dht22.c: 40: uint8_t i;
  5007                           ;dht22.c: 42: for (uint8_t j=0;j<8;j++)
  5008                           
  5009                           ;incstack = 0
  5010  0028CC  0E00               	movlw	0
  5011  0028CE  6E04               	movwf	read_data@j,c
  5012  0028D0                     l2225:
  5013  0028D0  0E07               	movlw	7
  5014  0028D2  6404               	cpfsgt	read_data@j,c
  5015  0028D4  D001               	goto	l69
  5016  0028D6  D02C               	goto	l2241
  5017  0028D8                     l69:
  5018  0028D8  A083               	btfss	3971,0,c	;volatile
  5019  0028DA  D7FE               	goto	l69
  5020                           
  5021                           ;dht22.c: 45: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5022  0028DC  0E1A               	movlw	26
  5023  0028DE                     u3237:
  5024  0028DE  2EE8               	decfsz	wreg,f,c
  5025  0028E0  D7FE               	goto	u3237
  5026  0028E2  D000               	nop2		;nop
  5027                           
  5028                           ;dht22.c: 47: if (!PORTDbits.RD0)
  5029  0028E4  B083               	btfsc	3971,0,c	;volatile
  5030  0028E6  D011               	goto	l2235
  5031                           
  5032                           ;dht22.c: 48: i&= ~(1<<(7-j));
  5033  0028E8  5004               	movf	read_data@j,w,c
  5034  0028EA  0800               	sublw	0
  5035  0028EC  6E01               	movwf	??_read_data& (0+255),c
  5036  0028EE  0E07               	movlw	7
  5037  0028F0  2601               	addwf	??_read_data,f,c
  5038  0028F2  0E01               	movlw	1
  5039  0028F4  6E02               	movwf	(??_read_data+1)& (0+255),c
  5040  0028F6  2A01               	incf	??_read_data,f,c
  5041  0028F8  D002               	goto	u2274
  5042  0028FA                     u2275:
  5043  0028FA  90D8               	bcf	status,0,c
  5044  0028FC  3602               	rlcf	??_read_data+1,f,c
  5045  0028FE                     u2274:
  5046  0028FE  2E01               	decfsz	??_read_data,f,c
  5047  002900  D7FC               	goto	u2275
  5048  002902  5002               	movf	??_read_data+1,w,c
  5049  002904  0AFF               	xorlw	255
  5050  002906  1603               	andwf	read_data@i,f,c
  5051  002908  D00F               	goto	l74
  5052  00290A                     l2235:
  5053                           
  5054                           ;dht22.c: 49: else
  5055                           ;dht22.c: 50: i|= (1<<(7-j));
  5056  00290A  5004               	movf	read_data@j,w,c
  5057  00290C  0800               	sublw	0
  5058  00290E  6E01               	movwf	??_read_data& (0+255),c
  5059  002910  0E07               	movlw	7
  5060  002912  2601               	addwf	??_read_data,f,c
  5061  002914  0E01               	movlw	1
  5062  002916  6E02               	movwf	(??_read_data+1)& (0+255),c
  5063  002918  2A01               	incf	??_read_data,f,c
  5064  00291A  D002               	goto	u2284
  5065  00291C                     u2285:
  5066  00291C  90D8               	bcf	status,0,c
  5067  00291E  3602               	rlcf	??_read_data+1,f,c
  5068  002920                     u2284:
  5069  002920  2E01               	decfsz	??_read_data,f,c
  5070  002922  D7FC               	goto	u2285
  5071  002924  5002               	movf	??_read_data+1,w,c
  5072  002926  1203               	iorwf	read_data@i,f,c
  5073  002928                     l74:
  5074  002928  B083               	btfsc	3971,0,c	;volatile
  5075  00292A  D7FE               	goto	l74
  5076  00292C  2A04               	incf	read_data@j,f,c
  5077  00292E  D7D0               	goto	l2225
  5078  002930                     l2241:
  5079                           
  5080                           ;dht22.c: 52: }
  5081                           ;dht22.c: 53: return i;
  5082  002930  5003               	movf	read_data@i,w,c
  5083  002932  0012               	return	
  5084  002934                     __end_of_read_data:
  5085                           	opt stack 0
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           prodh	equ	0xFF4
  5091                           prodl	equ	0xFF3
  5092                           wreg	equ	0xFE8
  5093                           indf2	equ	0xFDF
  5094                           postinc2	equ	0xFDE
  5095                           postdec2	equ	0xFDD
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function _dht22_response *****************
  5101 ;; Defined at:
  5102 ;;		line 20 in file "dht22.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  res             1    0[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      unsigned char 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;Total ram usage:        1 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_readValues
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text22
  5130  002B48                     __ptext22:
  5131                           	opt stack 0
  5132  002B48                     _dht22_response:
  5133                           	opt stack 29
  5134                           
  5135                           ;dht22.c: 22: TRISDbits.TRISD0=1;
  5136                           
  5137                           ;incstack = 0
  5138  002B48  8095               	bsf	3989,0,c	;volatile
  5139                           
  5140                           ;dht22.c: 23: uint8_t res = 0;
  5141  002B4A  0E00               	movlw	0
  5142  002B4C  6E01               	movwf	dht22_response@res,c
  5143                           
  5144                           ;dht22.c: 24: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5145  002B4E  0E1A               	movlw	26
  5146  002B50                     u3247:
  5147  002B50  2EE8               	decfsz	wreg,f,c
  5148  002B52  D7FE               	goto	u3247
  5149  002B54  D000               	nop2		;nop
  5150                           
  5151                           ;dht22.c: 26: if (!PORTDbits.RD0)
  5152  002B56  B083               	btfsc	3971,0,c	;volatile
  5153  002B58  D00A               	goto	l61
  5154                           
  5155                           ;dht22.c: 27: {
  5156                           ;dht22.c: 29: _delay((unsigned long)((80)*(8000000/4000000.0)));
  5157  002B5A  0E35               	movlw	53
  5158  002B5C                     u3257:
  5159  002B5C  2EE8               	decfsz	wreg,f,c
  5160  002B5E  D7FE               	goto	u3257
  5161  002B60  F000               	nop	
  5162                           
  5163                           ;dht22.c: 31: if (PORTDbits.RD0) res = 1;
  5164  002B62  A083               	btfss	3971,0,c	;volatile
  5165  002B64  D003               	goto	l59
  5166  002B66  0E01               	movlw	1
  5167  002B68  6E01               	movwf	dht22_response@res,c
  5168  002B6A  D001               	goto	l61
  5169  002B6C                     l59:
  5170                           
  5171                           ;dht22.c: 32: else res = -1;
  5172  002B6C  6801               	setf	dht22_response@res,c
  5173  002B6E                     l61:
  5174  002B6E  B083               	btfsc	3971,0,c	;volatile
  5175  002B70  D7FE               	goto	l61
  5176                           
  5177                           ;dht22.c: 36: return res;
  5178  002B72  5001               	movf	dht22_response@res,w,c
  5179  002B74  0012               	return	
  5180  002B76                     __end_of_dht22_response:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           wreg	equ	0xFE8
  5189                           indf2	equ	0xFDF
  5190                           postinc2	equ	0xFDE
  5191                           postdec2	equ	0xFDD
  5192                           fsr2h	equ	0xFDA
  5193                           fsr2l	equ	0xFD9
  5194                           status	equ	0xFD8
  5195                           
  5196 ;; *************** function _dht22_inizialize *****************
  5197 ;; Defined at:
  5198 ;;		line 4 in file "dht22.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;		None               void
  5205 ;; Registers used:
  5206 ;;		wreg
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;Total ram usage:        1 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_readValues
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text23
  5226  002BE4                     __ptext23:
  5227                           	opt stack 0
  5228  002BE4                     _dht22_inizialize:
  5229                           	opt stack 29
  5230                           
  5231                           ;dht22.c: 7: TRISDbits.TRISD0=0;
  5232                           
  5233                           ;incstack = 0
  5234  002BE4  9095               	bcf	3989,0,c	;volatile
  5235                           
  5236                           ;dht22.c: 9: PORTDbits.RD0=0;
  5237  002BE6  9083               	bcf	3971,0,c	;volatile
  5238                           
  5239                           ;dht22.c: 11: _delay((unsigned long)((25)*(8000000/4000.0)));
  5240  002BE8  0E41               	movlw	65
  5241  002BEA  6E01               	movwf	??_dht22_inizialize& (0+255),c
  5242  002BEC  0EEE               	movlw	238
  5243  002BEE                     u3267:
  5244  002BEE  2EE8               	decfsz	wreg,f,c
  5245  002BF0  D7FE               	goto	u3267
  5246  002BF2  2E01               	decfsz	??_dht22_inizialize& (0+255),f,c
  5247  002BF4  D7FC               	goto	u3267
  5248  002BF6  D000               	nop2	
  5249                           
  5250                           ;dht22.c: 13: PORTDbits.RD0=1;
  5251  002BF8  8083               	bsf	3971,0,c	;volatile
  5252                           
  5253                           ;dht22.c: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
  5254  002BFA  0E14               	movlw	20
  5255  002BFC                     u3277:
  5256  002BFC  2EE8               	decfsz	wreg,f,c
  5257  002BFE  D7FE               	goto	u3277
  5258                           
  5259                           ;dht22.c: 17: TRISDbits.TRISD0=1;
  5260  002C00  8095               	bsf	3989,0,c	;volatile
  5261  002C02  0012               	return		;funcret
  5262  002C04                     __end_of_dht22_inizialize:
  5263                           	opt stack 0
  5264                           tblptru	equ	0xFF8
  5265                           tblptrh	equ	0xFF7
  5266                           tblptrl	equ	0xFF6
  5267                           tablat	equ	0xFF5
  5268                           prodh	equ	0xFF4
  5269                           prodl	equ	0xFF3
  5270                           wreg	equ	0xFE8
  5271                           indf2	equ	0xFDF
  5272                           postinc2	equ	0xFDE
  5273                           postdec2	equ	0xFDD
  5274                           fsr2h	equ	0xFDA
  5275                           fsr2l	equ	0xFD9
  5276                           status	equ	0xFD8
  5277                           
  5278 ;; *************** function ___ftdiv *****************
  5279 ;; Defined at:
  5280 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  f1              3   12[COMRAM] float 
  5283 ;;  f2              3   15[COMRAM] float 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  f3              3   22[COMRAM] float 
  5286 ;;  sign            1   26[COMRAM] unsigned char 
  5287 ;;  exp             1   25[COMRAM] unsigned char 
  5288 ;;  cntr            1   21[COMRAM] unsigned char 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  3   12[COMRAM] float 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5298 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;Total ram usage:       15 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    1
  5305 ;; This function calls:
  5306 ;;		___ftpack
  5307 ;; This function is called by:
  5308 ;;		_readValues
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text24
  5313  00249A                     __ptext24:
  5314                           	opt stack 0
  5315  00249A                     ___ftdiv:
  5316                           	opt stack 28
  5317                           
  5318                           ;incstack = 0
  5319  00249A  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  5320  00249E  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5321  0024A0  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5322  0024A2  340E               	rlcf	___ftdiv@f1+1,w,c
  5323  0024A4  3613               	rlcf	??___ftdiv& (0+255),f,c
  5324  0024A6  E301               	bnc	u2561
  5325  0024A8  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5326  0024AA                     u2561:
  5327  0024AA  5013               	movf	??___ftdiv,w,c
  5328  0024AC  6E1A               	movwf	___ftdiv@exp,c
  5329  0024AE  501A               	movf	___ftdiv@exp,w,c
  5330  0024B0  A4D8               	btfss	status,2,c
  5331  0024B2  D007               	goto	l2439
  5332  0024B4  0E00               	movlw	0
  5333  0024B6  6E0D               	movwf	?___ftdiv,c
  5334  0024B8  0E00               	movlw	0
  5335  0024BA  6E0E               	movwf	?___ftdiv+1,c
  5336  0024BC  0E00               	movlw	0
  5337  0024BE  6E0F               	movwf	?___ftdiv+2,c
  5338  0024C0  0012               	return	
  5339  0024C2                     l2439:
  5340  0024C2  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  5341  0024C6  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5342  0024C8  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5343  0024CA  3411               	rlcf	___ftdiv@f2+1,w,c
  5344  0024CC  3613               	rlcf	??___ftdiv& (0+255),f,c
  5345  0024CE  E301               	bnc	u2581
  5346  0024D0  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5347  0024D2                     u2581:
  5348  0024D2  5013               	movf	??___ftdiv,w,c
  5349  0024D4  6E1B               	movwf	___ftdiv@sign,c
  5350  0024D6  501B               	movf	___ftdiv@sign,w,c
  5351  0024D8  A4D8               	btfss	status,2,c
  5352  0024DA  D007               	goto	l2445
  5353  0024DC  0E00               	movlw	0
  5354  0024DE  6E0D               	movwf	?___ftdiv,c
  5355  0024E0  0E00               	movlw	0
  5356  0024E2  6E0E               	movwf	?___ftdiv+1,c
  5357  0024E4  0E00               	movlw	0
  5358  0024E6  6E0F               	movwf	?___ftdiv+2,c
  5359  0024E8  0012               	return	
  5360  0024EA                     l2445:
  5361  0024EA  0E00               	movlw	0
  5362  0024EC  6E17               	movwf	___ftdiv@f3,c
  5363  0024EE  0E00               	movlw	0
  5364  0024F0  6E18               	movwf	___ftdiv@f3+1,c
  5365  0024F2  0E00               	movlw	0
  5366  0024F4  6E19               	movwf	___ftdiv@f3+2,c
  5367  0024F6  501B               	movf	___ftdiv@sign,w,c
  5368  0024F8  0F89               	addlw	137
  5369  0024FA  5E1A               	subwf	___ftdiv@exp,f,c
  5370  0024FC  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5371  002500  5012               	movf	___ftdiv@f2+2,w,c
  5372  002502  1A1B               	xorwf	___ftdiv@sign,f,c
  5373  002504  0E80               	movlw	128
  5374  002506  161B               	andwf	___ftdiv@sign,f,c
  5375  002508  8E0E               	bsf	___ftdiv@f1+1,7,c
  5376  00250A  0EFF               	movlw	255
  5377  00250C  160D               	andwf	___ftdiv@f1,f,c
  5378  00250E  0EFF               	movlw	255
  5379  002510  160E               	andwf	___ftdiv@f1+1,f,c
  5380  002512  0E00               	movlw	0
  5381  002514  160F               	andwf	___ftdiv@f1+2,f,c
  5382  002516  8E11               	bsf	___ftdiv@f2+1,7,c
  5383  002518  0EFF               	movlw	255
  5384  00251A  1610               	andwf	___ftdiv@f2,f,c
  5385  00251C  0EFF               	movlw	255
  5386  00251E  1611               	andwf	___ftdiv@f2+1,f,c
  5387  002520  0E00               	movlw	0
  5388  002522  1612               	andwf	___ftdiv@f2+2,f,c
  5389  002524  0E18               	movlw	24
  5390  002526  6E16               	movwf	___ftdiv@cntr,c
  5391  002528                     l2465:
  5392  002528  90D8               	bcf	status,0,c
  5393  00252A  3617               	rlcf	___ftdiv@f3,f,c
  5394  00252C  3618               	rlcf	___ftdiv@f3+1,f,c
  5395  00252E  3619               	rlcf	___ftdiv@f3+2,f,c
  5396  002530  5010               	movf	___ftdiv@f2,w,c
  5397  002532  5C0D               	subwf	___ftdiv@f1,w,c
  5398  002534  5011               	movf	___ftdiv@f2+1,w,c
  5399  002536  580E               	subwfb	___ftdiv@f1+1,w,c
  5400  002538  5012               	movf	___ftdiv@f2+2,w,c
  5401  00253A  580F               	subwfb	___ftdiv@f1+2,w,c
  5402  00253C  A0D8               	btfss	status,0,c
  5403  00253E  D007               	goto	l528
  5404  002540  5010               	movf	___ftdiv@f2,w,c
  5405  002542  5E0D               	subwf	___ftdiv@f1,f,c
  5406  002544  5011               	movf	___ftdiv@f2+1,w,c
  5407  002546  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5408  002548  5012               	movf	___ftdiv@f2+2,w,c
  5409  00254A  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5410  00254C  8017               	bsf	___ftdiv@f3,0,c
  5411  00254E                     l528:
  5412  00254E  90D8               	bcf	status,0,c
  5413  002550  360D               	rlcf	___ftdiv@f1,f,c
  5414  002552  360E               	rlcf	___ftdiv@f1+1,f,c
  5415  002554  360F               	rlcf	___ftdiv@f1+2,f,c
  5416  002556  2E16               	decfsz	___ftdiv@cntr,f,c
  5417  002558  D7E7               	goto	l2465
  5418  00255A  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5419  00255E  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5420  002562  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5421  002566  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5422  00256A  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5423  00256E  ECC0  F012         	call	___ftpack	;wreg free
  5424  002572  C001  F00D         	movff	?___ftpack,?___ftdiv
  5425  002576  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5426  00257A  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5427  00257E  0012               	return	
  5428  002580                     __end_of___ftdiv:
  5429                           	opt stack 0
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           wreg	equ	0xFE8
  5437                           indf2	equ	0xFDF
  5438                           postinc2	equ	0xFDE
  5439                           postdec2	equ	0xFDD
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444 ;; *************** function ___awtoft *****************
  5445 ;; Defined at:
  5446 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  c               2    8[COMRAM] int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  sign            1   11[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  3    8[COMRAM] float 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        4 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    1
  5467 ;; This function calls:
  5468 ;;		___ftpack
  5469 ;; This function is called by:
  5470 ;;		_readValues
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text25
  5475  002B10                     __ptext25:
  5476                           	opt stack 0
  5477  002B10                     ___awtoft:
  5478                           	opt stack 28
  5479                           
  5480                           ;incstack = 0
  5481  002B10  0E00               	movlw	0
  5482  002B12  6E0C               	movwf	___awtoft@sign,c
  5483  002B14  AE0A               	btfss	___awtoft@c+1,7,c
  5484  002B16  D006               	goto	l2495
  5485  002B18  6C09               	negf	___awtoft@c,c
  5486  002B1A  1E0A               	comf	___awtoft@c+1,f,c
  5487  002B1C  B0D8               	btfsc	status,0,c
  5488  002B1E  2A0A               	incf	___awtoft@c+1,f,c
  5489  002B20  0E01               	movlw	1
  5490  002B22  6E0C               	movwf	___awtoft@sign,c
  5491  002B24                     l2495:
  5492  002B24  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5493  002B28  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5494  002B2C  6A03               	clrf	___ftpack@arg+2,c
  5495  002B2E  0E8E               	movlw	142
  5496  002B30  6E04               	movwf	___ftpack@exp,c
  5497  002B32  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5498  002B36  ECC0  F012         	call	___ftpack	;wreg free
  5499  002B3A  C001  F009         	movff	?___ftpack,?___awtoft
  5500  002B3E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5501  002B42  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5502  002B46  0012               	return	
  5503  002B48                     __end_of___awtoft:
  5504                           	opt stack 0
  5505                           tblptru	equ	0xFF8
  5506                           tblptrh	equ	0xFF7
  5507                           tblptrl	equ	0xFF6
  5508                           tablat	equ	0xFF5
  5509                           prodh	equ	0xFF4
  5510                           prodl	equ	0xFF3
  5511                           wreg	equ	0xFE8
  5512                           indf2	equ	0xFDF
  5513                           postinc2	equ	0xFDE
  5514                           postdec2	equ	0xFDD
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function ___ftpack *****************
  5520 ;; Defined at:
  5521 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  arg             3    0[COMRAM] unsigned um
  5524 ;;  exp             1    3[COMRAM] unsigned char 
  5525 ;;  sign            1    4[COMRAM] unsigned char 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  3    0[COMRAM] float 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        8 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		___awtoft
  5547 ;;		___ftadd
  5548 ;;		___ftdiv
  5549 ;;		___ftmul
  5550 ;;		___lltoft
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text26
  5555  002580                     __ptext26:
  5556                           	opt stack 0
  5557  002580                     ___ftpack:
  5558                           	opt stack 27
  5559                           
  5560                           ;incstack = 0
  5561  002580  5004               	movf	___ftpack@exp,w,c
  5562  002582  B4D8               	btfsc	status,2,c
  5563  002584  D005               	goto	l1903
  5564  002586  5001               	movf	___ftpack@arg,w,c
  5565  002588  1002               	iorwf	___ftpack@arg+1,w,c
  5566  00258A  1003               	iorwf	___ftpack@arg+2,w,c
  5567  00258C  A4D8               	btfss	status,2,c
  5568  00258E  D00C               	goto	l1909
  5569  002590                     l1903:
  5570  002590  0E00               	movlw	0
  5571  002592  6E01               	movwf	?___ftpack,c
  5572  002594  0E00               	movlw	0
  5573  002596  6E02               	movwf	?___ftpack+1,c
  5574  002598  0E00               	movlw	0
  5575  00259A  6E03               	movwf	?___ftpack+2,c
  5576  00259C  0012               	return	
  5577  00259E                     l1907:
  5578  00259E  2A04               	incf	___ftpack@exp,f,c
  5579  0025A0  90D8               	bcf	status,0,c
  5580  0025A2  3203               	rrcf	___ftpack@arg+2,f,c
  5581  0025A4  3202               	rrcf	___ftpack@arg+1,f,c
  5582  0025A6  3201               	rrcf	___ftpack@arg,f,c
  5583  0025A8                     l1909:
  5584  0025A8  0E00               	movlw	0
  5585  0025AA  1401               	andwf	___ftpack@arg,w,c
  5586  0025AC  6E06               	movwf	??___ftpack& (0+255),c
  5587  0025AE  0E00               	movlw	0
  5588  0025B0  1402               	andwf	___ftpack@arg+1,w,c
  5589  0025B2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5590  0025B4  0EFE               	movlw	254
  5591  0025B6  1403               	andwf	___ftpack@arg+2,w,c
  5592  0025B8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5593  0025BA  5006               	movf	??___ftpack,w,c
  5594  0025BC  1007               	iorwf	??___ftpack+1,w,c
  5595  0025BE  1008               	iorwf	??___ftpack+2,w,c
  5596  0025C0  B4D8               	btfsc	status,2,c
  5597  0025C2  D00C               	goto	l1915
  5598  0025C4  D7EC               	goto	l1907
  5599  0025C6                     l1911:
  5600  0025C6  2A04               	incf	___ftpack@exp,f,c
  5601  0025C8  0E01               	movlw	1
  5602  0025CA  2601               	addwf	___ftpack@arg,f,c
  5603  0025CC  0E00               	movlw	0
  5604  0025CE  2202               	addwfc	___ftpack@arg+1,f,c
  5605  0025D0  0E00               	movlw	0
  5606  0025D2  2203               	addwfc	___ftpack@arg+2,f,c
  5607  0025D4  90D8               	bcf	status,0,c
  5608  0025D6  3203               	rrcf	___ftpack@arg+2,f,c
  5609  0025D8  3202               	rrcf	___ftpack@arg+1,f,c
  5610  0025DA  3201               	rrcf	___ftpack@arg,f,c
  5611  0025DC                     l1915:
  5612  0025DC  0E00               	movlw	0
  5613  0025DE  1401               	andwf	___ftpack@arg,w,c
  5614  0025E0  6E06               	movwf	??___ftpack& (0+255),c
  5615  0025E2  0E00               	movlw	0
  5616  0025E4  1402               	andwf	___ftpack@arg+1,w,c
  5617  0025E6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5618  0025E8  0EFF               	movlw	255
  5619  0025EA  1403               	andwf	___ftpack@arg+2,w,c
  5620  0025EC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5621  0025EE  5006               	movf	??___ftpack,w,c
  5622  0025F0  1007               	iorwf	??___ftpack+1,w,c
  5623  0025F2  1008               	iorwf	??___ftpack+2,w,c
  5624  0025F4  B4D8               	btfsc	status,2,c
  5625  0025F6  D006               	goto	l1919
  5626  0025F8  D7E6               	goto	l1911
  5627  0025FA                     l1917:
  5628  0025FA  0604               	decf	___ftpack@exp,f,c
  5629  0025FC  90D8               	bcf	status,0,c
  5630  0025FE  3601               	rlcf	___ftpack@arg,f,c
  5631  002600  3602               	rlcf	___ftpack@arg+1,f,c
  5632  002602  3603               	rlcf	___ftpack@arg+2,f,c
  5633  002604                     l1919:
  5634  002604  BE02               	btfsc	___ftpack@arg+1,7,c
  5635  002606  D003               	goto	l470
  5636  002608  0E02               	movlw	2
  5637  00260A  6004               	cpfslt	___ftpack@exp,c
  5638  00260C  D7F6               	goto	l1917
  5639  00260E                     l470:
  5640  00260E  A004               	btfss	___ftpack@exp,0,c
  5641  002610  9E02               	bcf	___ftpack@arg+1,7,c
  5642  002612  90D8               	bcf	status,0,c
  5643  002614  3204               	rrcf	___ftpack@exp,f,c
  5644  002616  5004               	movf	___ftpack@exp,w,c
  5645  002618  1203               	iorwf	___ftpack@arg+2,f,c
  5646  00261A  5005               	movf	___ftpack@sign,w,c
  5647  00261C  A4D8               	btfss	status,2,c
  5648  00261E  8E03               	bsf	___ftpack@arg+2,7,c
  5649  002620  C001  F001         	movff	___ftpack@arg,?___ftpack
  5650  002624  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5651  002628  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5652  00262C  0012               	return	
  5653  00262E                     __end_of___ftpack:
  5654                           	opt stack 0
  5655                           tblptru	equ	0xFF8
  5656                           tblptrh	equ	0xFF7
  5657                           tblptrl	equ	0xFF6
  5658                           tablat	equ	0xFF5
  5659                           prodh	equ	0xFF4
  5660                           prodl	equ	0xFF3
  5661                           wreg	equ	0xFE8
  5662                           indf2	equ	0xFDF
  5663                           postinc2	equ	0xFDE
  5664                           postdec2	equ	0xFDD
  5665                           fsr2h	equ	0xFDA
  5666                           fsr2l	equ	0xFD9
  5667                           status	equ	0xFD8
  5668                           
  5669 ;; *************** function _USARTOut *****************
  5670 ;; Defined at:
  5671 ;;		line 88 in file "main.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  data            2    6[COMRAM] PTR unsigned char 
  5674 ;;		 -> main@Text(128), 
  5675 ;;  bytes           1    8[COMRAM] unsigned char 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  i               2   12[COMRAM] int 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;		None               void
  5680 ;; Registers used:
  5681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;Total ram usage:        8 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    1
  5694 ;; This function calls:
  5695 ;;		_WriteUSART
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text27
  5702  002A96                     __ptext27:
  5703                           	opt stack 0
  5704  002A96                     _USARTOut:
  5705                           	opt stack 29
  5706                           
  5707                           ;main.c: 89: int i;
  5708                           ;main.c: 90: for (i = 0; i < bytes; i++) {
  5709                           
  5710                           ;incstack = 0
  5711  002A96  0E00               	movlw	0
  5712  002A98  6E0E               	movwf	USARTOut@i+1,c
  5713  002A9A  0E00               	movlw	0
  5714  002A9C  6E0D               	movwf	USARTOut@i,c
  5715  002A9E  D00D               	goto	l2627
  5716  002AA0                     l34:
  5717  002AA0  A2AC               	btfss	4012,1,c	;volatile
  5718  002AA2  D7FE               	goto	l34
  5719                           
  5720                           ;main.c: 92: WriteUSART(data[i]);
  5721  002AA4  500D               	movf	USARTOut@i,w,c
  5722  002AA6  2407               	addwf	USARTOut@data,w,c
  5723  002AA8  6ED9               	movwf	fsr2l,c
  5724  002AAA  500E               	movf	USARTOut@i+1,w,c
  5725  002AAC  2008               	addwfc	USARTOut@data+1,w,c
  5726  002AAE  6EDA               	movwf	fsr2h,c
  5727  002AB0  50DF               	movf	indf2,w,c
  5728  002AB2  EC1C  F016         	call	_WriteUSART
  5729  002AB6  4A0D               	infsnz	USARTOut@i,f,c
  5730  002AB8  2A0E               	incf	USARTOut@i+1,f,c
  5731  002ABA                     l2627:
  5732  002ABA  5009               	movf	USARTOut@bytes,w,c
  5733  002ABC  6E0A               	movwf	??_USARTOut& (0+255),c
  5734  002ABE  6A0B               	clrf	(??_USARTOut+1)& (0+255),c
  5735  002AC0  500A               	movf	??_USARTOut,w,c
  5736  002AC2  5C0D               	subwf	USARTOut@i,w,c
  5737  002AC4  500E               	movf	USARTOut@i+1,w,c
  5738  002AC6  0A80               	xorlw	128
  5739  002AC8  6E0C               	movwf	(??_USARTOut+2)& (0+255),c
  5740  002ACA  500B               	movf	??_USARTOut+1,w,c
  5741  002ACC  0A80               	xorlw	128
  5742  002ACE  580C               	subwfb	(??_USARTOut+2)& (0+255),w,c
  5743  002AD0  B0D8               	btfsc	status,0,c
  5744  002AD2  0012               	return	
  5745  002AD4  D7E5               	goto	l34
  5746  002AD6                     __end_of_USARTOut:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           wreg	equ	0xFE8
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _WriteUSART *****************
  5763 ;; Defined at:
  5764 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  data            1    wreg     unsigned char 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  data            1    0[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;		None               void
  5771 ;; Registers used:
  5772 ;;		wreg
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;Total ram usage:        1 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_USARTOut
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text28
  5792  002C38                     __ptext28:
  5793                           	opt stack 0
  5794  002C38                     _WriteUSART:
  5795                           	opt stack 29
  5796                           
  5797                           ;incstack = 0
  5798                           ;WriteUSART@data stored from wreg
  5799  002C38  6E01               	movwf	WriteUSART@data,c
  5800  002C3A  ACAC               	btfss	4012,6,c	;volatile
  5801  002C3C  D003               	goto	l2195
  5802  002C3E  90AC               	bcf	4012,0,c	;volatile
  5803  002C40  B268               	btfsc	_USART_Status,1,c
  5804  002C42  80AC               	bsf	4012,0,c	;volatile
  5805  002C44                     l2195:
  5806  002C44  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5807  002C48  0012               	return		;funcret
  5808  002C4A                     __end_of_WriteUSART:
  5809                           	opt stack 0
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           wreg	equ	0xFE8
  5817                           indf2	equ	0xFDF
  5818                           postinc2	equ	0xFDE
  5819                           postdec2	equ	0xFDD
  5820                           fsr2h	equ	0xFDA
  5821                           fsr2l	equ	0xFD9
  5822                           status	equ	0xFD8
  5823                           
  5824 ;; *************** function _Init_IO *****************
  5825 ;; Defined at:
  5826 ;;		line 73 in file "main.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;		None               void
  5833 ;; Registers used:
  5834 ;;		wreg, status,2, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    1
  5847 ;; This function calls:
  5848 ;;		_OpenUSART
  5849 ;; This function is called by:
  5850 ;;		_main
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text29
  5855  002BC0                     __ptext29:
  5856                           	opt stack 0
  5857  002BC0                     _Init_IO:
  5858                           	opt stack 29
  5859                           
  5860                           ;main.c: 74: OSCCON = 0b01110010;
  5861                           
  5862                           ;incstack = 0
  5863  002BC0  0E72               	movlw	114
  5864  002BC2  6ED3               	movwf	4051,c	;volatile
  5865                           
  5866                           ;main.c: 76: PORTA = 0x04;
  5867  002BC4  0E04               	movlw	4
  5868  002BC6  6E80               	movwf	3968,c	;volatile
  5869                           
  5870                           ;main.c: 78: TRISA = 0xF8;
  5871  002BC8  0EF8               	movlw	248
  5872  002BCA  6E92               	movwf	3986,c	;volatile
  5873                           
  5874                           ;main.c: 80: ADCON0 = 0x1C;
  5875  002BCC  0E1C               	movlw	28
  5876  002BCE  6EC2               	movwf	4034,c	;volatile
  5877                           
  5878                           ;main.c: 82: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 &
  5879                           ;main.c: 83: 0b11111101 & 0b11111111 & 0b11111111, 25);
  5880  002BD0  0E00               	movlw	0
  5881  002BD2  6E02               	movwf	OpenUSART@spbrg+1,c
  5882  002BD4  0E19               	movlw	25
  5883  002BD6  6E01               	movwf	OpenUSART@spbrg,c
  5884  002BD8  0E3C               	movlw	60
  5885  002BDA  ECCD  F014         	call	_OpenUSART
  5886                           
  5887                           ;main.c: 85: TRISD=0x00;
  5888  002BDE  0E00               	movlw	0
  5889  002BE0  6E95               	movwf	3989,c	;volatile
  5890  002BE2  0012               	return		;funcret
  5891  002BE4                     __end_of_Init_IO:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           wreg	equ	0xFE8
  5900                           indf2	equ	0xFDF
  5901                           postinc2	equ	0xFDE
  5902                           postdec2	equ	0xFDD
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function _OpenUSART *****************
  5908 ;; Defined at:
  5909 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  config          1    wreg     unsigned char 
  5912 ;;  spbrg           2    0[COMRAM] unsigned int 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  config          1    2[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;		None               void
  5917 ;; Registers used:
  5918 ;;		wreg, status,2
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;Total ram usage:        3 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_Init_IO
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text30
  5938  00299A                     __ptext30:
  5939                           	opt stack 0
  5940  00299A                     _OpenUSART:
  5941                           	opt stack 29
  5942                           
  5943                           ;incstack = 0
  5944                           ;OpenUSART@config stored from wreg
  5945  00299A  6E03               	movwf	OpenUSART@config,c
  5946  00299C  0E00               	movlw	0
  5947  00299E  6EAC               	movwf	4012,c	;volatile
  5948  0029A0  0E00               	movlw	0
  5949  0029A2  6EAB               	movwf	4011,c	;volatile
  5950  0029A4  B003               	btfsc	OpenUSART@config,0,c
  5951  0029A6  88AC               	bsf	4012,4,c	;volatile
  5952  0029A8  A203               	btfss	OpenUSART@config,1,c
  5953  0029AA  D002               	goto	l2149
  5954  0029AC  8CAC               	bsf	4012,6,c	;volatile
  5955  0029AE  8CAB               	bsf	4011,6,c	;volatile
  5956  0029B0                     l2149:
  5957  0029B0  B403               	btfsc	OpenUSART@config,2,c
  5958  0029B2  8EAC               	bsf	4012,7,c	;volatile
  5959  0029B4  A603               	btfss	OpenUSART@config,3,c
  5960  0029B6  D002               	goto	l201
  5961  0029B8  88AB               	bsf	4011,4,c	;volatile
  5962  0029BA  D001               	goto	l2157
  5963  0029BC                     l201:
  5964  0029BC  8AAB               	bsf	4011,5,c	;volatile
  5965  0029BE                     l2157:
  5966  0029BE  B803               	btfsc	OpenUSART@config,4,c
  5967  0029C0  84AC               	bsf	4012,2,c	;volatile
  5968  0029C2  989E               	bcf	3998,4,c	;volatile
  5969  0029C4  BA03               	btfsc	OpenUSART@config,5,c
  5970  0029C6  86AB               	bsf	4011,3,c	;volatile
  5971  0029C8  AC03               	btfss	OpenUSART@config,6,c
  5972  0029CA  D002               	goto	l205
  5973  0029CC  8A9D               	bsf	3997,5,c	;volatile
  5974  0029CE  D001               	goto	l206
  5975  0029D0                     l205:
  5976  0029D0  9A9D               	bcf	3997,5,c	;volatile
  5977  0029D2                     l206:
  5978  0029D2  9A9E               	bcf	3998,5,c	;volatile
  5979  0029D4  AE03               	btfss	OpenUSART@config,7,c
  5980  0029D6  D002               	goto	l207
  5981  0029D8  889D               	bsf	3997,4,c	;volatile
  5982  0029DA  D001               	goto	l208
  5983  0029DC                     l207:
  5984  0029DC  989D               	bcf	3997,4,c	;volatile
  5985  0029DE                     l208:
  5986  0029DE  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5987  0029E2  5002               	movf	OpenUSART@spbrg+1,w,c
  5988  0029E4  6EB0               	movwf	4016,c	;volatile
  5989  0029E6  8AAC               	bsf	4012,5,c	;volatile
  5990  0029E8  8EAB               	bsf	4011,7,c	;volatile
  5991  0029EA  9C94               	bcf	3988,6,c	;volatile
  5992  0029EC  8E94               	bsf	3988,7,c	;volatile
  5993  0029EE  A8AC               	btfss	4012,4,c	;volatile
  5994  0029F0  0012               	return	
  5995  0029F2  BEAC               	btfsc	4012,7,c	;volatile
  5996  0029F4  0012               	return	
  5997  0029F6  8C94               	bsf	3988,6,c	;volatile
  5998  0029F8  0012               	return	
  5999  0029FA                     __end_of_OpenUSART:
  6000                           	opt stack 0
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           prodh	equ	0xFF4
  6006                           prodl	equ	0xFF3
  6007                           wreg	equ	0xFE8
  6008                           indf2	equ	0xFDF
  6009                           postinc2	equ	0xFDE
  6010                           postdec2	equ	0xFDD
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function _Delay10KTCYx *****************
  6016 ;; Defined at:
  6017 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\d10ktcyx.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  unit            1    wreg     unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  unit            1    1[COMRAM] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;		None               void
  6024 ;; Registers used:
  6025 ;;		wreg
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;Total ram usage:        2 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_main
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text31
  6045  002C22                     __ptext31:
  6046                           	opt stack 0
  6047  002C22                     _Delay10KTCYx:
  6048                           	opt stack 30
  6049                           
  6050                           ;incstack = 0
  6051                           ;Delay10KTCYx@unit stored from wreg
  6052  002C22  6E02               	movwf	Delay10KTCYx@unit,c
  6053  002C24  0E0D               	movlw	13
  6054  002C26  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  6055  002C28  0EFC               	movlw	252
  6056  002C2A                     u3287:
  6057  002C2A  2EE8               	decfsz	wreg,f,c
  6058  002C2C  D7FE               	goto	u3287
  6059  002C2E  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  6060  002C30  D7FC               	goto	u3287
  6061  002C32  2E02               	decfsz	Delay10KTCYx@unit,f,c
  6062  002C34  D7F7               	goto	l2629
  6063  002C36  0012               	return	
  6064  002C38                     __end_of_Delay10KTCYx:
  6065                           	opt stack 0
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           prodh	equ	0xFF4
  6071                           prodl	equ	0xFF3
  6072                           wreg	equ	0xFE8
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           wreg	equ	0xFE8
  6086                           indf2	equ	0xFDF
  6087                           postinc2	equ	0xFDE
  6088                           postdec2	equ	0xFDD
  6089                           fsr2h	equ	0xFDA
  6090                           fsr2l	equ	0xFD9
  6091                           status	equ	0xFD8
  6092                           
  6093                           	psect	rparam
  6094  0000                     tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           wreg	equ	0xFE8
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           fsr2h	equ	0xFDA
  6105                           fsr2l	equ	0xFD9
  6106                           status	equ	0xFD8


Data Sizes:
    Strings     51
    Constant    118
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    103     104
    BANK0           128      0       0
    BANK1           256    136     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> main@Text(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> main@Text(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[28]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 128
		 -> main@Text(BANK1[128]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    readValues@sensor_data	PTR struct . size(2) Largest target is 8
		 -> main@sensor_values(BANK1[8]), 

    USARTOut@data	PTR unsigned char  size(2) Largest target is 128
		 -> main@Text(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _readValues->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _USARTOut->_strlen
    _Init_IO->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               137   137      0   49201
                                            102 COMRAM     1     1      0
                                              0 BANK1    136   136      0
                       _Delay10KTCYx
                            _Init_IO
                           _USARTOut
                         _readValues
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             47    37     10   42813
                                             63 COMRAM    39    29     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10181
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9983
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2335
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4329
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2242
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     444
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3604
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3307
                                             45 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     520
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _readValues                                          12    10      2    5507
                                             27 COMRAM    12    10      2
                           ___awtoft
                            ___ftdiv
                   _dht22_inizialize
                     _dht22_response
                          _read_data
 ---------------------------------------------------------------------------------
 (2) _read_data                                            4     4      0     114
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _dht22_response                                       1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _dht22_inizialize                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2747
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2328
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _USARTOut                                             8     5      3     240
                                              6 COMRAM     8     5      3
                         _WriteUSART
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_IO                                              0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _Init_IO
     _OpenUSART
   _USARTOut
     _WriteUSART
     _strlen (ARG)
   _readValues
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     _dht22_inizialize
     _dht22_response
     _read_data
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     88      88       7       53.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     67      68       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F0      34        0.0%
DATA                 0      0      F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 25 14:12:55 2021

                       l34 2AA0                         l61 2B6E                         l74 2928  
                       l59 2B6C                         l69 28D8               ___awdiv@sign 000C  
      ___wmul@multiplicand 0011                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000               ___ftadd@exp1 0039               ___ftadd@exp2 0038  
             ___ftadd@sign 0037                        l201 29BC                        l205 29D0  
                      l206 29D2                        l207 29DC                        l208 29DE  
                      l162 1574                        l508 1EE4                        l517 1F00  
                      l470 260E                        l438 21BA                        l542 2092  
                      l535 2004                        l528 254E                        l536 202C  
                      l617 284A                        l627 2988                        l493 1E0A  
                      l567 2BB2                        l497 1E34               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000               ___awmod@sign 0006                        wreg 000FE8  
             __CFG_LVP$OFF 000000               ___ftdiv@cntr 0016               ___ftdiv@sign 001B  
             __CFG_WDT$OFF 000000                       l2007 1F4C                       l2111 2870  
                     l2023 221C                       l2121 2892                       l2041 225E  
                     l2017 21F4                       l2123 2896                       l2131 28B4  
                     l2115 287C                       l2051 2286                       l2037 224E  
                     l2301 1B5C                       l2135 28C2                       l2127 28AA  
                     l2119 288A                       l2047 2276                       l2241 2930  
                     l2225 28D0                       l2081 2798                       l2073 277A  
                     l2313 2C1A                       l2235 290A                       l2323 1F9E  
                     l2091 27B8                       l2083 279C                       l2067 276A  
                     l2157 29BE                       l2149 29B0                       l2503 26F6  
                     l2431 21B4                       l2423 2190                       l2407 2152  
                     l2079 2790                       l2095 27C2                       l2263 1D86  
                     l2255 1CC6                       l2513 2752                       l2601 297A  
                     l2329 1FCA                       l2195 2C44                       l2507 2726  
                     l2419 2180                       l2371 208C                       l2363 2068  
                     l2099 27D0                       l2283 1968                       l2445 24EA  
                     l2429 21A8                       l2277 18C4                       l1911 25C6  
                     l1903 2590                       l2439 24C2                       l2527 22EC  
                     l2607 2A00                       l2359 2058                       l2295 1AB8  
                     l2287 198C                       l2703 11C8                       l2465 2528  
                     l2545 2352                       l2609 2A0C                       l2385 20E0  
                     l2369 2080                       l2627 2ABA                       l1915 25DC  
                     l1907 259E                       l2643 23DA                       l2483 2A6C  
                     l2563 23A2                       l2555 237A                       l2379 20C2  
                     l2811 159A                       l2803 1578                       l2731 12E0  
                     l2629 2C24                       l1917 25FA                       l1909 25A8  
                     l2653 2494                       l2557 2386                       l2549 2362  
                     l2573 27FC                       l2733 12F0                       l1919 2604  
                     l2495 2B24                       l2639 23CA                       l2559 238C  
                     l2575 2808                       l2399 2122                       l2815 15EA  
                     l2743 1362                       l2735 131E                       l2727 12BC  
                     l2719 1258                       l2671 10F6                       l2663 10CC  
                     l2649 23F2                       l2585 283C                       l2577 280C  
                     l2593 2946                       l2841 170A                       l2833 16E8  
                     l2825 16C8                       l2761 143E                       l2737 132E  
                     l2681 114E                       l2657 10B6                       l1971 1E72  
                     l1955 1E42                       l2595 2952                       l2827 16D2  
                     l2763 1442                       l2747 1386                       l2835 16F2  
                     l2675 112C                       l1981 1EA8                       l1949 1E18  
                     l2597 2956                       l2853 1766                       l2845 1726  
                     l2781 14A0                       l2757 13DA                       l2693 1188  
                     l2685 1152                       l2677 1142                       l1991 1EDC  
                     l1983 1EB0                       l2791 153A                       l2775 147A  
                     l2687 1174                       l2855 176A                       l2863 2AE0  
                     l1977 1E94                       l2849 1746                       l2857 1782  
                     l2865 2AE4                       l1979 1E9E                       l2779 149A  
                     l2883 2690                       l2875 2646                       l1997 1F1C  
                     l1989 1ED2                       l2797 1550                       l2789 1530  
                     l2885 26A4                       l2799 155E                       STR_1 1093  
                     STR_2 1077                       u3100 156E                       u2401 1F82  
                     u3210 263C                       u1701 1DD6                       u2421 1FAE  
                     u1711 1DEA                       u2274 28FE                       u3218 263E  
                     u2275 28FA                       u2284 2920                       u2285 291C  
                     u3237 28DE                       u3247 2B50                       u1911 21DC  
                     u2561 24AA                       u3257 2B5C                       u3267 2BEE  
                     u1931 2204                       u2581 24D2                       u3277 2BFC  
                     u3287 2C2A                       u2671 22D0                       u2690 230A  
                     u2940 1200                       u2695 2302                       u2945 11F6  
                     _main 262E               ___ftpack@arg 0001               ___ftpack@exp 0004  
                     fsr2h 000FDA                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000               _sprintf$1302 0050              __CFG_MCLRE$ON 000000  
             ___ftmul@cntr 0022               ___param_bank 000010               ___ftmul@sign 0023  
          __end_of_Init_IO 2BE4               ___fttol@exp1 0039               ___fttol@lval 0035  
                    ?_main 0001            __end_of___awdiv 27DA            __end_of___ftadd 1F72  
          __end_of___awmod 28CC            __end_of___ftdiv 2580            __end_of___ftneg 2BC0  
          __end_of___lldiv 285C            __end_of___ftmul 22C0            ___awdiv@divisor 0009  
          __end_of___llmod 299A            __end_of___ftsub 2A96            __end_of___fttol 23B4  
          ___awdiv@counter 000B                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _PORTA 000F80                      _TRISA 000F92                      _TRISD 000F95  
                    _TXREG 000FAD      __size_of_Delay10KTCYx 0016                      _TXSTA 000FAC  
            __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000               ___lltoft@exp 0011  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
            ___awtoft@sign 000C            __end_of_dpowers 1029                      _scale 1790  
          __end_of_isdigit 2C22              ___ftpack@sign 0005           __end_of_USARTOut 2AD6  
             USARTOut@data 0007                      tablat 000FF5                      status 000FD8  
          __end_of_sprintf 1790             __CFG_PBADEN$ON 000000             WriteUSART@data 0001  
          __initialization 2C4A               __end_of_main 26C6               _Delay10KTCYx 2C22  
                   ??_main 0067              ___fttol@sign1 0034              __activetblptr 000002  
     __size_of__tdiv_to_l_ 0132                     _ADCON0 000FC2           ___llmod@dividend 0001  
                   ?_scale 0024           ___awdiv@dividend 0007           __end_of___awtoft 2B48  
         __end_of___ftpack 262E           __end_of___lltoft 2A56    __size_of_dht22_response 002E  
                   _OSCCON 000FD3                     _SPBRGH 000FB0                  ??_Init_IO 0004  
           __CFG_XINST$OFF 000000           __end_of__powers_ 1077         __size_of_OpenUSART 0060  
                   ___ftge 26C6                     ___wmul 2B76                  ??___awdiv 000B  
                ??___ftadd 0034             __CFG_STVREN$ON 000000                  ??___awmod 0005  
                ??___ftdiv 0013                  ??___ftneg 0004                  ??___lldiv 0009  
                ??___ftmul 001B                  ??___llmod 0009                  ??___ftsub 0040  
                ??___fttol 002F                readValues@i 0026                     _fround 1B80  
         ___awdiv@quotient 000D            ___awmod@divisor 0003            ___awmod@counter 0005  
                   _strlen 2AD6      ___ftmul@f3_as_product 001F              USARTOut@bytes 0009  
                ??_isdigit 0001               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_sprintf 004A  
               __accesstop 0080    __end_of__initialization 2C4C                 ___ftadd@f1 002E  
               ___ftadd@f2 0031                 ___ftge@ff1 0001                 ___ftge@ff2 0004  
            ___rparam_used 000001                 ___ftdiv@f1 000D                 ___ftdiv@f2 0010  
               ___ftdiv@f3 0017                 ___ftneg@f1 0001                 ___awtoft@c 0009  
               ___ftmul@f1 0015                 ___ftmul@f2 0018  __size_of_dht22_inizialize 0020  
               ___ftsub@f1 003A                 ___ftsub@f2 003D                 ___fttol@f1 002B  
               _WriteUSART 2C38             __pcstackCOMRAM 0001                 ___lltoft@c 0009  
            __end_of_scale 1B80                  ?_USARTOut 0007                 __div_to_l_ 20A4  
        __end_of_OpenUSART 29FA            __div_to_l_@exp1 000C            __div_to_l_@cntr 000B  
                  ??_scale 0027            __div_to_l_@quot 0007              __div_to_l_@f1 0001  
            __div_to_l_@f2 0004         __size_of_read_data 0068                    ?___ftge 0001  
                  ?___wmul 000F                    ?_fround 0024                  ?___awtoft 0009  
               ??_USARTOut 000A                  ?___ftpack 0001                  ?___lltoft 0009  
                  ?_strlen 0001             _dht22_response 2B48                  USARTOut@i 000D  
                  _Init_IO 2BC0          __end_of__npowers_ 1050                    __Hparam 0000  
               _scale$1301 0027                    __Lparam 0000                ?_WriteUSART 0001  
        dht22_response@res 0001            __size_of___ftge 0090                    ___awdiv 2756  
                  ___ftadd 1DC6                    ___awmod 285C                    ___ftdiv 249A  
                  ___ftneg 2B9C                    ___lldiv 27DA            __size_of___wmul 0026  
                  ___ftmul 21CC                    ___llmod 2934                    ___ftsub 2A56  
                  ___fttol 22C0               __psmallconst 1000                 _readValues 23B4  
                  __pcinit 2C4A                 ??___awtoft 000C                 ??___ftpack 0006  
          __size_of_fround 0246                    __ramtop 1000                 ??___lltoft 000D  
                  __ptext0 262E                    __ptext1 2AD6                    __ptext2 10AC  
                  __ptext3 1790                    __ptext4 2C04                    __ptext5 1B80  
                  __ptext6 2B76                    __ptext7 21CC                    __ptext8 285C  
                  __ptext9 2756            __size_of_strlen 003A                ?__div_to_l_ 0001  
                  _dpowers 1001                    _isdigit 2C04          __end_of_read_data 2934  
         ___awmod@dividend 0001     __end_of_dht22_response 2B76                    _sprintf 10AC  
     end_of_initialization 2C4C              __Lmediumconst 0000            ___lldiv@divisor 0005  
          ___lldiv@counter 000D           _dht22_inizialize 2BE4                  _RCSTAbits 000FAB  
                  postdec2 000FDD                    postinc2 000FDE             __tdiv_to_l_@f1 0001  
           __tdiv_to_l_@f2 0004                    strlen@s 0001              ??__tdiv_to_l_ 0007  
                _PORTDbits 000F83                  _TRISCbits 000F94                  _TRISDbits 000F95  
          ?_dht22_response 0001        __size_of_WriteUSART 0012                ___ftdiv@exp 001A  
                _TXSTAbits 000FAC        __size_of__div_to_l_ 0128                ___ftmul@exp 001E  
           __end_of___ftge 2756                ?_readValues 001C             __end_of___wmul 2B9C  
           __end_of_fround 1DC6          __size_of_USARTOut 0040             __end_of_strlen 2B10  
      start_initialization 2C4A          main@sensor_values 0180        __end_of__tdiv_to_l_ 20A4  
                _OpenUSART 299A            ___llmod@divisor 0005            ___llmod@counter 0009  
                 ??___ftge 0007                   ??___wmul 0013          readValues@reading 0021  
         __CFG_LPT1OSC$OFF 000000                 read_data@i 0003                 read_data@j 0004  
                 ??_fround 0027              sprintf@tmpval 005D                   ??_strlen 0003  
               fround@prec 002D          __size_of___awtoft 0038          __size_of___ftpack 00AE  
        __size_of___lltoft 005C                __pbssCOMRAM 0068              __pcstackBANK1 0100  
      __size_of_readValues 00E6                 ?_OpenUSART 0001                sprintf@flag 0055  
              sprintf@fval 0063                sprintf@prec 0061                   ?_Init_IO 0001  
        __CFG_CCP2MX$PORTC 000000               ??_WriteUSART 0001                   ?___awdiv 0007  
                 ?___ftadd 002E                   ?___awmod 0001                   ?___ftdiv 000D  
                 ?___ftneg 0001                   ?___lldiv 0001                   ?___ftmul 0015  
                 ?___llmod 0001                   ?___ftsub 003A                  __npowers_ 1029  
                 ?___fttol 002B              ?_Delay10KTCYx 0001                __tdiv_to_l_ 1F72  
             ??__div_to_l_ 0007                __smallconst 1000                   ?_isdigit 0001  
 __end_of_dht22_inizialize 2C04                   ?_sprintf 0040                  _read_data 28CC  
           __size_of_scale 03F0         __end_of_WriteUSART 2C4A             ___wmul@product 0013  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E         __end_of__div_to_l_ 21CC  
         __CFG_WDTPS$32768 000000             ??_Delay10KTCYx 0001                   _USARTOut 2A96  
        ___wmul@multiplier 000F           ??_dht22_response 0001           Delay10KTCYx@unit 0002  
               ?_read_data 0001                ??_OpenUSART 0003            OpenUSART@config 0003  
         __size_of_Init_IO 0024                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000               ??_readValues 001E           readValues@status 0020  
         __size_of___awdiv 0084           __size_of___ftadd 01AC           __size_of___awmod 0070  
         __size_of___ftdiv 00E6           __size_of___ftneg 0024           __size_of___lldiv 0082  
         __size_of___ftmul 00F4           __size_of___llmod 0066           __size_of___ftsub 0040  
         __size_of___fttol 00F4                   ___awtoft 2B10                   ___ftpack 2580  
              _fround$1300 0027                _fround$1299 002A                   ___lltoft 29FA  
              _isdigit$959 0002                 sprintf@exp 005B                 sprintf@val 0057  
         __size_of_isdigit 001E                   __ptext10 1F72                   __ptext11 20A4  
                 __ptext20 23B4                   __ptext12 29FA                   __ptext21 28CC  
                 __ptext13 2934                   __ptext30 299A                   __ptext22 2B48  
                 __ptext14 27DA                   __ptext31 2C22                   __ptext23 2BE4  
                 __ptext15 22C0                   __ptext24 249A                   __ptext16 2A56  
                 __ptext25 2B10                   __ptext17 1DC6                   __ptext26 2580  
                 __ptext18 2B9C                   __ptext27 2A96                   __ptext19 26C6  
                 __ptext28 2C38                   __ptext29 2BC0                   __powers_ 1050  
         __size_of_sprintf 06E4         __end_of_readValues 249A              __size_of_main 0098  
    readValues@sensor_data 001C                   main@Text 0100             OpenUSART@spbrg 0001  
                 isdigit@c 0003                   scale@scl 002A                ??_read_data 0001  
     __end_of_Delay10KTCYx 2C38                  sprintf@ap 0053           __tdiv_to_l_@exp1 000F  
                sprintf@sp 0040           __tdiv_to_l_@cntr 000E           __tdiv_to_l_@quot 000A  
         ___lldiv@dividend 0001               ?__tdiv_to_l_ 0001                   sprintf@c 0066  
                 sprintf@f 0042           ___lldiv@quotient 0009                   strlen@cp 0005  
        ?_dht22_inizialize 0001         ??_dht22_inizialize 0001               _USART_Status 0068  
